{"version":3,"file":"static/js/7708.3016d9f6.chunk.js","mappings":"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","sources":["components/CurrencyInputPanel/index.tsx","components/NavigationTabs/index.tsx","components/Slider/index.tsx","lib/hooks/useApproval.ts","hooks/useApproveCallback.ts","hooks/useDebouncedChangeHandler.tsx","hooks/useIsArgentWallet.ts","hooks/useERC20Permit.ts","hooks/useV2LiquidityTokenPermit.ts","pages/AppBody.tsx","state/burn/hooks.tsx","pages/RemoveLiquidity/index.tsx","utils/calculateSlippageAmount.ts","../node_modules/react-feather/dist/icons/plus.js"],"sourcesContent":["import { Trans } from '@lingui/macro'\r\nimport { BrowserEvent, InterfaceElementName, SwapEventName } from '@uniswap/analytics-events'\r\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\r\nimport { Pair } from '@uniswap/v2-sdk'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { TraceEvent } from 'analytics'\r\nimport { LoadingOpacityContainer, loadingOpacityMixin } from 'components/Loader/styled'\r\nimport PrefetchBalancesWrapper from 'components/PrefetchBalancesWrapper/PrefetchBalancesWrapper'\r\nimport { isSupportedChain } from 'constants/chains'\r\nimport { darken } from 'polished'\r\nimport { ReactNode, useCallback, useState } from 'react'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { flexColumnNoWrap, flexRowNoWrap } from 'theme/styles'\r\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\r\n\r\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\r\nimport { useCurrencyBalance } from '../../state/connection/hooks'\r\nimport { ButtonGray } from '../Button'\r\nimport DoubleCurrencyLogo from '../DoubleLogo'\r\nimport CurrencyLogo from '../Logo/CurrencyLogo'\r\nimport { Input as NumericalInput } from '../NumericalInput'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\r\nimport { FiatValue } from './FiatValue'\r\n\r\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\r\n  ${flexColumnNoWrap};\r\n  position: relative;\r\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\r\n  background-color: ${({ theme, hideInput }) => (hideInput ? 'transparent' : theme.surface2)};\r\n\r\n  z-index: 1;\r\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\r\n  transition: height 1s ease;\r\n  will-change: height;\r\n`\r\n\r\nconst Container = styled.div<{ hideInput: boolean; disabled: boolean }>`\r\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\r\n  border: 1px solid ${({ theme }) => theme.surface3};\r\n  background-color: ${({ theme }) => theme.surface2};\r\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\r\n  ${({ theme, hideInput, disabled }) =>\r\n    !disabled &&\r\n    `\r\n    :focus,\r\n    :hover {\r\n      border: 1px solid ${hideInput ? ' transparent' : theme.surface2};\r\n    }\r\n  `}\r\n`\r\n\r\nconst CurrencySelect = styled(ButtonGray)<{\r\n  visible: boolean\r\n  selected: boolean\r\n  hideInput?: boolean\r\n  disabled?: boolean\r\n  pointerEvents?: string\r\n}>`\r\n  align-items: center;\r\n  background-color: ${({ selected, theme }) => (selected ? theme.surface1 : theme.accent1)};\r\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\r\n  box-shadow: ${({ theme }) => theme.deprecated_shallowShadow};\r\n  color: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\r\n  cursor: pointer;\r\n  border-radius: 16px;\r\n  outline: none;\r\n  user-select: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  font-weight: 535;\r\n  height: ${({ hideInput }) => (hideInput ? '2.8rem' : '2.4rem')};\r\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\r\n  padding: 0 8px;\r\n  justify-content: space-between;\r\n  margin-left: ${({ hideInput }) => (hideInput ? '0' : '12px')};\r\n  :focus,\r\n  :hover {\r\n    background-color: ${({ selected, theme }) => (selected ? theme.surface2 : darken(0.05, theme.accent1))};\r\n  }\r\n  visibility: ${({ visible }) => (visible ? 'visible' : 'hidden')};\r\n  ${({ pointerEvents }) => pointerEvents && `pointer-events: none`}\r\n`\r\n\r\nconst InputRow = styled.div<{ selected: boolean }>`\r\n  ${flexRowNoWrap};\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: ${({ selected }) => (selected ? ' 1rem 1rem 0.75rem 1rem' : '1rem 1rem 1rem 1rem')};\r\n`\r\n\r\nconst LabelRow = styled.div`\r\n  ${flexRowNoWrap};\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.neutral1};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0 1rem 1rem;\r\n  span:hover {\r\n    cursor: pointer;\r\n    color: ${({ theme }) => darken(0.2, theme.neutral2)};\r\n  }\r\n`\r\n\r\nconst FiatRow = styled(LabelRow)`\r\n  justify-content: flex-end;\r\n  padding: 0px 1rem 0.75rem;\r\n  height: 32px;\r\n`\r\n\r\n// note the line height 0 ensures even if we change font/font-size it doesn't break centering\r\nconst Aligner = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  line-height: 0px;\r\n`\r\n\r\nconst StyledDropDown = styled(DropDown)<{ selected: boolean }>`\r\n  margin: 0 0.25rem 0 0.35rem;\r\n  height: 35%;\r\n\r\n  path {\r\n    stroke: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\r\n    stroke-width: 1.5px;\r\n  }\r\n`\r\n\r\nconst StyledTokenName = styled.span<{ active?: boolean }>`\r\n  ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.25rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\r\n  font-size: 20px;\r\n`\r\n\r\nconst StyledBalanceMax = styled.button<{ disabled?: boolean }>`\r\n  background-color: transparent;\r\n  background-color: ${({ theme }) => theme.accent2};\r\n  border: none;\r\n  border-radius: 12px;\r\n  color: ${({ theme }) => theme.accent1};\r\n  cursor: pointer;\r\n  font-size: 11px;\r\n  font-weight: 535;\r\n  margin-left: 0.25rem;\r\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\r\n  padding: 4px 6px;\r\n  pointer-events: ${({ disabled }) => (!disabled ? 'initial' : 'none')};\r\n\r\n  :hover {\r\n    opacity: ${({ disabled }) => (!disabled ? 0.8 : 0.4)};\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nconst StyledNumericalInput = styled(NumericalInput)<{ $loading: boolean }>`\r\n  ${loadingOpacityMixin};\r\n  text-align: left;\r\n`\r\n\r\nconst StyledPrefetchBalancesWrapper = styled(PrefetchBalancesWrapper)<{ $fullWidth: boolean }>`\r\n  width: ${({ $fullWidth }) => ($fullWidth ? '100%' : 'auto')};\r\n`\r\n\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  label?: ReactNode\r\n  onCurrencySelect?: (currency: Currency) => void\r\n  currency?: Currency | null\r\n  hideBalance?: boolean\r\n  pair?: Pair | null\r\n  hideInput?: boolean\r\n  otherCurrency?: Currency | null\r\n  fiatValue?: { data?: number; isLoading: boolean }\r\n  id: string\r\n  showCommonBases?: boolean\r\n  showCurrencyAmount?: boolean\r\n  disableNonToken?: boolean\r\n  renderBalance?: (amount: CurrencyAmount<Currency>) => ReactNode\r\n  locked?: boolean\r\n  loading?: boolean\r\n}\r\n\r\nexport default function CurrencyInputPanel({\r\n  value,\r\n  onUserInput,\r\n  onMax,\r\n  showMaxButton,\r\n  onCurrencySelect,\r\n  currency,\r\n  otherCurrency,\r\n  id,\r\n  showCommonBases,\r\n  showCurrencyAmount,\r\n  disableNonToken,\r\n  renderBalance,\r\n  fiatValue,\r\n  hideBalance = false,\r\n  pair = null, // used for double token logo\r\n  hideInput = false,\r\n  locked = false,\r\n  loading = false,\r\n  ...rest\r\n}: CurrencyInputPanelProps) {\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const { account, chainId } = useWeb3React()\r\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n  const theme = useTheme()\r\n  const { formatCurrencyAmount } = useFormatter()\r\n\r\n  const handleDismissSearch = useCallback(() => {\r\n    setModalOpen(false)\r\n  }, [setModalOpen])\r\n\r\n  const chainAllowed = isSupportedChain(chainId)\r\n\r\n  return (\r\n    <InputPanel id={id} hideInput={hideInput} {...rest}>\r\n      {!locked && (\r\n        <>\r\n          <Container hideInput={hideInput} disabled={!chainAllowed}>\r\n            <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={!onCurrencySelect}>\r\n              {!hideInput && (\r\n                <StyledNumericalInput\r\n                  className=\"token-amount-input\"\r\n                  value={value}\r\n                  onUserInput={onUserInput}\r\n                  disabled={!chainAllowed}\r\n                  $loading={loading}\r\n                />\r\n              )}\r\n\r\n              <StyledPrefetchBalancesWrapper shouldFetchOnAccountUpdate={modalOpen} $fullWidth={hideInput}>\r\n                <CurrencySelect\r\n                  disabled={!chainAllowed}\r\n                  visible={currency !== undefined}\r\n                  selected={!!currency}\r\n                  hideInput={hideInput}\r\n                  className=\"open-currency-select-button\"\r\n                  onClick={() => {\r\n                    if (onCurrencySelect) {\r\n                      setModalOpen(true)\r\n                    }\r\n                  }}\r\n                  pointerEvents={!onCurrencySelect ? 'none' : undefined}\r\n                >\r\n                  <Aligner>\r\n                    <RowFixed>\r\n                      {pair ? (\r\n                        <span style={{ marginRight: '0.5rem' }}>\r\n                          <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={24} margin={true} />\r\n                        </span>\r\n                      ) : (\r\n                        currency && <CurrencyLogo style={{ marginRight: '0.5rem' }} currency={currency} size=\"24px\" />\r\n                      )}\r\n                      {pair ? (\r\n                        <StyledTokenName className=\"pair-name-container\">\r\n                          {pair?.token0.symbol}:{pair?.token1.symbol}\r\n                        </StyledTokenName>\r\n                      ) : (\r\n                        <StyledTokenName\r\n                          className=\"token-symbol-container\"\r\n                          active={Boolean(currency && currency.symbol)}\r\n                        >\r\n                          {(currency && currency.symbol && currency.symbol.length > 20\r\n                            ? currency.symbol.slice(0, 4) +\r\n                              '...' +\r\n                              currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\r\n                            : currency?.symbol) || <Trans>Select a token</Trans>}\r\n                        </StyledTokenName>\r\n                      )}\r\n                    </RowFixed>\r\n                    {onCurrencySelect && <StyledDropDown selected={!!currency} />}\r\n                  </Aligner>\r\n                </CurrencySelect>\r\n              </StyledPrefetchBalancesWrapper>\r\n            </InputRow>\r\n            {Boolean(!hideInput && !hideBalance && currency) && (\r\n              <FiatRow>\r\n                <RowBetween>\r\n                  <LoadingOpacityContainer $loading={loading}>\r\n                    {fiatValue && <FiatValue fiatValue={fiatValue} />}\r\n                  </LoadingOpacityContainer>\r\n                  {account && (\r\n                    <RowFixed style={{ height: '17px' }}>\r\n                      <ThemedText.DeprecatedBody\r\n                        onClick={onMax}\r\n                        color={theme.neutral3}\r\n                        fontWeight={535}\r\n                        fontSize={14}\r\n                        style={{ display: 'inline', cursor: 'pointer' }}\r\n                      >\r\n                        {Boolean(!hideBalance && currency && selectedCurrencyBalance) &&\r\n                          (renderBalance?.(selectedCurrencyBalance as CurrencyAmount<Currency>) || (\r\n                            <Trans>\r\n                              Balance:{' '}\r\n                              {formatCurrencyAmount({\r\n                                amount: selectedCurrencyBalance,\r\n                                type: NumberType.TokenNonTx,\r\n                              })}\r\n                            </Trans>\r\n                          ))}\r\n                      </ThemedText.DeprecatedBody>\r\n                      {Boolean(showMaxButton && selectedCurrencyBalance) && (\r\n                        <TraceEvent\r\n                          events={[BrowserEvent.onClick]}\r\n                          name={SwapEventName.SWAP_MAX_TOKEN_AMOUNT_SELECTED}\r\n                          element={InterfaceElementName.MAX_TOKEN_AMOUNT_BUTTON}\r\n                        >\r\n                          <StyledBalanceMax onClick={onMax}>\r\n                            <Trans>MAX</Trans>\r\n                          </StyledBalanceMax>\r\n                        </TraceEvent>\r\n                      )}\r\n                    </RowFixed>\r\n                  )}\r\n                </RowBetween>\r\n              </FiatRow>\r\n            )}\r\n          </Container>\r\n        </>\r\n      )}\r\n      {onCurrencySelect && (\r\n        <CurrencySearchModal\r\n          isOpen={modalOpen}\r\n          onDismiss={handleDismissSearch}\r\n          onCurrencySelect={onCurrencySelect}\r\n          selectedCurrency={currency}\r\n          otherSelectedCurrency={otherCurrency}\r\n          showCommonBases={showCommonBases}\r\n          showCurrencyAmount={showCurrencyAmount}\r\n          disableNonToken={disableNonToken}\r\n        />\r\n      )}\r\n    </InputPanel>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Percent } from '@uniswap/sdk-core'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport SettingsTab from 'components/Settings'\r\nimport { ReactNode } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { Box } from 'rebass'\r\nimport { useAppDispatch } from 'state/hooks'\r\nimport { resetMintState } from 'state/mint/actions'\r\nimport { resetMintState as resetMintV3State } from 'state/mint/v3/actions'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { flexRowNoWrap } from 'theme/styles'\r\n\r\nimport { RowBetween } from '../Row'\r\n\r\nconst Tabs = styled.div`\r\n  ${flexRowNoWrap};\r\n  align-items: center;\r\n  border-radius: 3rem;\r\n  justify-content: space-evenly;\r\n`\r\n\r\nconst StyledLink = styled(Link)<{ flex?: string }>`\r\n  flex: ${({ flex }) => flex ?? 'none'};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\r\n    flex: none;\r\n    margin-right: 10px;\r\n  `};\r\n`\r\n\r\nconst FindPoolTabsText = styled(ThemedText.SubHeaderLarge)`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`\r\n\r\nconst StyledArrowLeft = styled(ArrowLeft)`\r\n  color: ${({ theme }) => theme.neutral1};\r\n`\r\n\r\nexport function FindPoolTabs({ origin }: { origin: string }) {\r\n  return (\r\n    <Tabs>\r\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem', position: 'relative' }}>\r\n        <Link to={origin}>\r\n          <StyledArrowLeft />\r\n        </Link>\r\n        <FindPoolTabsText>\r\n          <Trans>Import V2 pool</Trans>\r\n        </FindPoolTabsText>\r\n      </RowBetween>\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nconst AddRemoveTitleText = styled(ThemedText.SubHeaderLarge)`\r\n  flex: 1;\r\n  margin: auto;\r\n`\r\n\r\nexport function AddRemoveTabs({\r\n  adding,\r\n  creating,\r\n  autoSlippage,\r\n  positionID,\r\n  children,\r\n}: {\r\n  adding: boolean\r\n  creating: boolean\r\n  autoSlippage: Percent\r\n  positionID?: string\r\n  showBackLink?: boolean\r\n  children?: ReactNode\r\n}) {\r\n  const { chainId } = useWeb3React()\r\n  const theme = useTheme()\r\n  // reset states on back\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation()\r\n\r\n  // detect if back should redirect to v3 or v2 pool page\r\n  const poolLink = location.pathname.includes('add/v2')\r\n    ? '/pools/v2'\r\n    : '/pools' + (positionID ? `/${positionID.toString()}` : '')\r\n\r\n  return (\r\n    <Tabs>\r\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }} align=\"center\">\r\n        <StyledLink\r\n          to={poolLink}\r\n          onClick={() => {\r\n            if (adding) {\r\n              // not 100% sure both of these are needed\r\n              dispatch(resetMintState())\r\n              dispatch(resetMintV3State())\r\n            }\r\n          }}\r\n          flex={children ? '1' : undefined}\r\n        >\r\n          <StyledArrowLeft stroke={theme.neutral2} />\r\n        </StyledLink>\r\n        <AddRemoveTitleText textAlign={children ? 'start' : 'center'}>\r\n          {creating ? (\r\n            <Trans>Create a pair</Trans>\r\n          ) : adding ? (\r\n            <Trans>Add liquidity</Trans>\r\n          ) : (\r\n            <Trans>Remove liquidity</Trans>\r\n          )}\r\n        </AddRemoveTitleText>\r\n        {children && <Box style={{ marginRight: '.5rem' }}>{children}</Box>}\r\n        <SettingsTab autoSlippage={autoSlippage} chainId={chainId} hideRoutingSettings />\r\n      </RowBetween>\r\n    </Tabs>\r\n  )\r\n}\r\n","import { ChangeEvent, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRangeInput = styled.input<{ size: number }>`\r\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\r\n  width: 100%; /* Specific width is required for Firefox. */\r\n  background: transparent; /* Otherwise white in Chrome */\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &::-moz-focus-outer {\r\n    border: 0;\r\n  }\r\n\r\n  &::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: ${({ theme }) => theme.accent1};\r\n    border-radius: 100%;\r\n    border: none;\r\n    transform: translateY(-50%);\r\n    color: ${({ theme }) => theme.surface1};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-moz-range-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: #565a69;\r\n    border-radius: 100%;\r\n    border: none;\r\n    color: ${({ theme }) => theme.surface1};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-ms-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: #565a69;\r\n    border-radius: 100%;\r\n    color: ${({ theme }) => theme.surface1};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-webkit-slider-runnable-track {\r\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}, ${({ theme }) => theme.accent1});\r\n    height: 2px;\r\n  }\r\n\r\n  &::-moz-range-track {\r\n    background: linear-gradient(90deg, ${({ theme }) => theme.surface4}, ${({ theme }) => theme.surface2});\r\n    height: 2px;\r\n  }\r\n\r\n  &::-ms-track {\r\n    width: 100%;\r\n    border-color: transparent;\r\n    color: transparent;\r\n\r\n    background: ${({ theme }) => theme.surface4};\r\n    height: 2px;\r\n  }\r\n  &::-ms-fill-lower {\r\n    background: ${({ theme }) => theme.surface4};\r\n  }\r\n  &::-ms-fill-upper {\r\n    background: ${({ theme }) => theme.surface2};\r\n  }\r\n`\r\n\r\ninterface InputSliderProps {\r\n  value: number\r\n  onChange: (value: number) => void\r\n  step?: number\r\n  min?: number\r\n  max?: number\r\n  size?: number\r\n}\r\n\r\nexport default function Slider({\r\n  value,\r\n  onChange,\r\n  min = 0,\r\n  step = 1,\r\n  max = 100,\r\n  size = 28,\r\n  ...rest\r\n}: InputSliderProps) {\r\n  const changeCallback = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange(parseInt(e.target.value))\r\n    },\r\n    [onChange]\r\n  )\r\n\r\n  return (\r\n    <StyledRangeInput\r\n      size={size}\r\n      {...rest}\r\n      type=\"range\"\r\n      value={value}\r\n      style={{ padding: '15px 0' }}\r\n      onChange={changeCallback}\r\n      aria-labelledby=\"input slider\"\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n    />\r\n  )\r\n}\r\n","import { MaxUint256 } from '@ethersproject/constants'\r\nimport type { TransactionResponse } from '@ethersproject/providers'\r\nimport { InterfaceEventName } from '@uniswap/analytics-events'\r\nimport { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { sendAnalyticsEvent } from 'analytics'\r\nimport { useTokenContract } from 'hooks/useContract'\r\nimport { useTokenAllowance } from 'hooks/useTokenAllowance'\r\nimport { getTokenAddress } from 'lib/utils/analytics'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { calculateGasMargin } from 'utils/calculateGasMargin'\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN = 'UNKNOWN',\r\n  NOT_APPROVED = 'NOT_APPROVED',\r\n  PENDING = 'PENDING',\r\n  APPROVED = 'APPROVED',\r\n}\r\n\r\nfunction useApprovalStateForSpender(\r\n  amountToApprove: CurrencyAmount<Currency> | undefined,\r\n  spender: string | undefined,\r\n  useIsPendingApproval: (token?: Token, spender?: string) => boolean\r\n): ApprovalState {\r\n  const { account } = useWeb3React()\r\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\r\n\r\n  const { tokenAllowance } = useTokenAllowance(token, account ?? undefined, spender)\r\n  const pendingApproval = useIsPendingApproval(token, spender)\r\n\r\n  return useMemo(() => {\r\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\r\n    if (amountToApprove.currency.isNative) return ApprovalState.APPROVED\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!tokenAllowance) return ApprovalState.UNKNOWN\r\n\r\n    // amountToApprove will be defined if tokenAllowance is\r\n    return tokenAllowance.lessThan(amountToApprove)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED\r\n  }, [amountToApprove, pendingApproval, spender, tokenAllowance])\r\n}\r\n\r\nexport function useApproval(\r\n  amountToApprove: CurrencyAmount<Currency> | undefined,\r\n  spender: string | undefined,\r\n  useIsPendingApproval: (token?: Token, spender?: string) => boolean\r\n): [\r\n  ApprovalState,\r\n  () => Promise<\r\n    | { response: TransactionResponse; tokenAddress: string; spenderAddress: string; amount: CurrencyAmount<Currency> }\r\n    | undefined\r\n  >\r\n] {\r\n  const { chainId } = useWeb3React()\r\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\r\n\r\n  // check the current approval status\r\n  const approvalState = useApprovalStateForSpender(amountToApprove, spender, useIsPendingApproval)\r\n\r\n  const tokenContract = useTokenContract(token?.address)\r\n\r\n  const approve = useCallback(async () => {\r\n    function logFailure(error: Error | string): undefined {\r\n      console.warn(`${token?.symbol || 'Token'} approval failed:`, error)\r\n      return\r\n    }\r\n\r\n    // Bail early if there is an issue.\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      return logFailure('approve was called unnecessarily')\r\n    } else if (!chainId) {\r\n      return logFailure('no chainId')\r\n    } else if (!token) {\r\n      return logFailure('no token')\r\n    } else if (!tokenContract) {\r\n      return logFailure('tokenContract is null')\r\n    } else if (!amountToApprove) {\r\n      return logFailure('missing amount to approve')\r\n    } else if (!spender) {\r\n      return logFailure('no spender')\r\n    }\r\n\r\n    let useExact = false\r\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n      // general fallback for tokens which restrict approval amounts\r\n      useExact = true\r\n      return tokenContract.estimateGas.approve(spender, amountToApprove.quotient.toString())\r\n    })\r\n\r\n    return tokenContract\r\n      .approve(spender, useExact ? amountToApprove.quotient.toString() : MaxUint256, {\r\n        gasLimit: calculateGasMargin(estimatedGas),\r\n      })\r\n      .then((response) => {\r\n        const eventProperties = {\r\n          chain_id: chainId,\r\n          token_symbol: token?.symbol,\r\n          token_address: getTokenAddress(token),\r\n        }\r\n        sendAnalyticsEvent(InterfaceEventName.APPROVE_TOKEN_TXN_SUBMITTED, eventProperties)\r\n        return {\r\n          response,\r\n          tokenAddress: token.address,\r\n          spenderAddress: spender,\r\n          amount: amountToApprove,\r\n        }\r\n      })\r\n      .catch((error: Error) => {\r\n        logFailure(error)\r\n        throw error\r\n      })\r\n  }, [approvalState, token, tokenContract, amountToApprove, spender, chainId])\r\n\r\n  return [approvalState, approve]\r\n}\r\n","import { Currency, CurrencyAmount } from '@uniswap/sdk-core'\r\nimport { ApprovalState, useApproval } from 'lib/hooks/useApproval'\r\nimport { useCallback } from 'react'\r\n\r\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks'\r\nimport { TransactionType } from '../state/transactions/types'\r\nexport { ApprovalState } from 'lib/hooks/useApproval'\r\n\r\nfunction useGetAndTrackApproval(getApproval: ReturnType<typeof useApproval>[1]) {\r\n  const addTransaction = useTransactionAdder()\r\n  return useCallback(() => {\r\n    return getApproval().then((pending) => {\r\n      if (pending) {\r\n        const { response, tokenAddress, spenderAddress: spender, amount } = pending\r\n        addTransaction(response, {\r\n          type: TransactionType.APPROVAL,\r\n          tokenAddress,\r\n          spender,\r\n          amount: amount.quotient.toString(),\r\n        })\r\n      }\r\n    })\r\n  }, [addTransaction, getApproval])\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(\r\n  amountToApprove?: CurrencyAmount<Currency>,\r\n  spender?: string\r\n): [ApprovalState, () => Promise<void>] {\r\n  const [approval, getApproval] = useApproval(amountToApprove, spender, useHasPendingApproval)\r\n  return [approval, useGetAndTrackApproval(getApproval)]\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n/**\r\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\r\n * @param value value that is rapidly changing\r\n * @param onChange change handler that should receive the debounced updates to the value\r\n * @param debouncedMs how long we should wait for changes to be applied\r\n */\r\nexport default function useDebouncedChangeHandler<T>(\r\n  value: T,\r\n  onChange: (newValue: T) => void,\r\n  debouncedMs = 100\r\n): [T, (value: T) => void] {\r\n  const [inner, setInner] = useState<T>(() => value)\r\n  const timer = useRef<ReturnType<typeof setTimeout>>()\r\n\r\n  const onChangeInner = useCallback(\r\n    (newValue: T) => {\r\n      setInner(newValue)\r\n      if (timer.current) {\r\n        clearTimeout(timer.current)\r\n      }\r\n      timer.current = setTimeout(() => {\r\n        onChange(newValue)\r\n        timer.current = undefined\r\n      }, debouncedMs)\r\n    },\r\n    [debouncedMs, onChange]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n      timer.current = undefined\r\n    }\r\n    setInner(value)\r\n  }, [value])\r\n\r\n  return [inner, onChangeInner]\r\n}\r\n","import { useWeb3React } from '@web3-react/core'\r\nimport { NEVER_RELOAD, useSingleCallResult } from 'lib/hooks/multicall'\r\nimport { useMemo } from 'react'\r\n\r\nimport { useArgentWalletDetectorContract } from './useContract'\r\n\r\nexport default function useIsArgentWallet(): boolean {\r\n  const { account } = useWeb3React()\r\n  const argentWalletDetector = useArgentWalletDetectorContract()\r\n  const inputs = useMemo(() => [account ?? undefined], [account])\r\n  const call = useSingleCallResult(argentWalletDetector, 'isArgentWallet', inputs, NEVER_RELOAD)\r\n  return Boolean(call?.result?.[0])\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { splitSignature } from '@ethersproject/bytes'\r\nimport { ChainId, Currency, CurrencyAmount } from '@uniswap/sdk-core'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport JSBI from 'jsbi'\r\nimport { useSingleCallResult } from 'lib/hooks/multicall'\r\nimport { useMemo, useState } from 'react'\r\n\r\nimport { DAI, UNI, USDC_MAINNET } from '../constants/tokens'\r\nimport { useEIP2612Contract } from './useContract'\r\nimport useIsArgentWallet from './useIsArgentWallet'\r\n\r\nexport enum PermitType {\r\n  AMOUNT = 1,\r\n  ALLOWED = 2,\r\n}\r\n\r\n// 20 minutes to submit after signing\r\nconst PERMIT_VALIDITY_BUFFER = 20 * 60\r\n\r\nexport interface PermitInfo {\r\n  type: PermitType\r\n  name: string\r\n  // version is optional, and if omitted, will not be included in the domain\r\n  version?: string\r\n}\r\n\r\n// todo: read this information from extensions on token lists or elsewhere (permit registry?)\r\nconst PERMITTABLE_TOKENS: {\r\n  [chainId: number]: {\r\n    [checksummedTokenAddress: string]: PermitInfo\r\n  }\r\n} = {\r\n  [ChainId.MAINNET]: {\r\n    [USDC_MAINNET.address]: { type: PermitType.AMOUNT, name: 'USD Coin', version: '2' },\r\n    [DAI.address]: { type: PermitType.ALLOWED, name: 'Dai Stablecoin', version: '1' },\r\n    [UNI[ChainId.MAINNET].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\r\n  },\r\n  [ChainId.GOERLI]: {\r\n    [UNI[ChainId.GOERLI].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\r\n  },\r\n  [ChainId.SEPOLIA]: {\r\n    [UNI[ChainId.SEPOLIA].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\r\n  },\r\n}\r\n\r\nenum UseERC20PermitState {\r\n  // returned for any reason, e.g. it is an argent wallet, or the currency does not support it\r\n  NOT_APPLICABLE,\r\n  LOADING,\r\n  NOT_SIGNED,\r\n  SIGNED,\r\n}\r\n\r\ninterface BaseSignatureData {\r\n  v: number\r\n  r: string\r\n  s: string\r\n  deadline: number\r\n  nonce: number\r\n  owner: string\r\n  spender: string\r\n  chainId: number\r\n  tokenAddress: string\r\n  permitType: PermitType\r\n}\r\n\r\ninterface StandardSignatureData extends BaseSignatureData {\r\n  amount: string\r\n}\r\n\r\ninterface AllowedSignatureData extends BaseSignatureData {\r\n  allowed: true\r\n}\r\n\r\ntype SignatureData = StandardSignatureData | AllowedSignatureData\r\n\r\nconst EIP712_DOMAIN_TYPE = [\r\n  { name: 'name', type: 'string' },\r\n  { name: 'version', type: 'string' },\r\n  { name: 'chainId', type: 'uint256' },\r\n  { name: 'verifyingContract', type: 'address' },\r\n]\r\n\r\nconst EIP712_DOMAIN_TYPE_NO_VERSION = [\r\n  { name: 'name', type: 'string' },\r\n  { name: 'chainId', type: 'uint256' },\r\n  { name: 'verifyingContract', type: 'address' },\r\n]\r\n\r\nconst EIP2612_TYPE = [\r\n  { name: 'owner', type: 'address' },\r\n  { name: 'spender', type: 'address' },\r\n  { name: 'value', type: 'uint256' },\r\n  { name: 'nonce', type: 'uint256' },\r\n  { name: 'deadline', type: 'uint256' },\r\n]\r\n\r\nconst PERMIT_ALLOWED_TYPE = [\r\n  { name: 'holder', type: 'address' },\r\n  { name: 'spender', type: 'address' },\r\n  { name: 'nonce', type: 'uint256' },\r\n  { name: 'expiry', type: 'uint256' },\r\n  { name: 'allowed', type: 'bool' },\r\n]\r\n\r\nexport function useERC20Permit(\r\n  currencyAmount: CurrencyAmount<Currency> | null | undefined,\r\n  spender: string | null | undefined,\r\n  transactionDeadline: BigNumber | undefined,\r\n  overridePermitInfo: PermitInfo | undefined | null\r\n): {\r\n  signatureData: SignatureData | null\r\n  state: UseERC20PermitState\r\n  gatherPermitSignature: null | (() => Promise<void>)\r\n} {\r\n  const { account, chainId, provider } = useWeb3React()\r\n  const tokenAddress = currencyAmount?.currency?.isToken ? currencyAmount.currency.address : undefined\r\n  const eip2612Contract = useEIP2612Contract(tokenAddress)\r\n  const isArgentWallet = useIsArgentWallet()\r\n  const nonceInputs = useMemo(() => [account ?? undefined], [account])\r\n  const tokenNonceState = useSingleCallResult(eip2612Contract, 'nonces', nonceInputs)\r\n  const permitInfo =\r\n    overridePermitInfo ?? (chainId && tokenAddress ? PERMITTABLE_TOKENS[chainId]?.[tokenAddress] : undefined)\r\n\r\n  const [signatureData, setSignatureData] = useState<SignatureData | null>(null)\r\n\r\n  return useMemo(() => {\r\n    if (\r\n      isArgentWallet ||\r\n      !currencyAmount ||\r\n      !eip2612Contract ||\r\n      !account ||\r\n      !chainId ||\r\n      !transactionDeadline ||\r\n      !provider ||\r\n      !tokenNonceState.valid ||\r\n      !tokenAddress ||\r\n      !spender ||\r\n      !permitInfo\r\n    ) {\r\n      return {\r\n        state: UseERC20PermitState.NOT_APPLICABLE,\r\n        signatureData: null,\r\n        gatherPermitSignature: null,\r\n      }\r\n    }\r\n\r\n    const nonceNumber = tokenNonceState.result?.[0]?.toNumber()\r\n    if (tokenNonceState.loading || typeof nonceNumber !== 'number') {\r\n      return {\r\n        state: UseERC20PermitState.LOADING,\r\n        signatureData: null,\r\n        gatherPermitSignature: null,\r\n      }\r\n    }\r\n\r\n    const isSignatureDataValid =\r\n      signatureData &&\r\n      signatureData.owner === account &&\r\n      signatureData.deadline >= transactionDeadline.toNumber() &&\r\n      signatureData.tokenAddress === tokenAddress &&\r\n      signatureData.nonce === nonceNumber &&\r\n      signatureData.spender === spender &&\r\n      ('allowed' in signatureData ||\r\n        JSBI.greaterThanOrEqual(JSBI.BigInt(signatureData.amount), currencyAmount.quotient))\r\n\r\n    return {\r\n      state: isSignatureDataValid ? UseERC20PermitState.SIGNED : UseERC20PermitState.NOT_SIGNED,\r\n      signatureData: isSignatureDataValid ? signatureData : null,\r\n      gatherPermitSignature: async function gatherPermitSignature() {\r\n        const allowed = permitInfo.type === PermitType.ALLOWED\r\n        const signatureDeadline = transactionDeadline.toNumber() + PERMIT_VALIDITY_BUFFER\r\n        const value = currencyAmount.quotient.toString()\r\n\r\n        const message = allowed\r\n          ? {\r\n              holder: account,\r\n              spender,\r\n              allowed,\r\n              nonce: nonceNumber,\r\n              expiry: signatureDeadline,\r\n            }\r\n          : {\r\n              owner: account,\r\n              spender,\r\n              value,\r\n              nonce: nonceNumber,\r\n              deadline: signatureDeadline,\r\n            }\r\n        const domain = permitInfo.version\r\n          ? {\r\n              name: permitInfo.name,\r\n              version: permitInfo.version,\r\n              verifyingContract: tokenAddress,\r\n              chainId,\r\n            }\r\n          : {\r\n              name: permitInfo.name,\r\n              verifyingContract: tokenAddress,\r\n              chainId,\r\n            }\r\n        const data = JSON.stringify({\r\n          types: {\r\n            EIP712Domain: permitInfo.version ? EIP712_DOMAIN_TYPE : EIP712_DOMAIN_TYPE_NO_VERSION,\r\n            Permit: allowed ? PERMIT_ALLOWED_TYPE : EIP2612_TYPE,\r\n          },\r\n          domain,\r\n          primaryType: 'Permit',\r\n          message,\r\n        })\r\n\r\n        return provider\r\n          .send('eth_signTypedData_v4', [account, data])\r\n          .then(splitSignature)\r\n          .then((signature) => {\r\n            setSignatureData({\r\n              v: signature.v,\r\n              r: signature.r,\r\n              s: signature.s,\r\n              deadline: signatureDeadline,\r\n              ...(allowed ? { allowed } : { amount: value }),\r\n              nonce: nonceNumber,\r\n              chainId,\r\n              owner: account,\r\n              spender,\r\n              tokenAddress,\r\n              permitType: permitInfo.type,\r\n            })\r\n          })\r\n      },\r\n    }\r\n  }, [\r\n    currencyAmount,\r\n    eip2612Contract,\r\n    account,\r\n    chainId,\r\n    isArgentWallet,\r\n    transactionDeadline,\r\n    provider,\r\n    tokenNonceState.loading,\r\n    tokenNonceState.valid,\r\n    tokenNonceState.result,\r\n    tokenAddress,\r\n    spender,\r\n    permitInfo,\r\n    signatureData,\r\n  ])\r\n}\r\n","import { CurrencyAmount, Token } from '@uniswap/sdk-core'\r\n\r\nimport { PermitInfo, PermitType, useERC20Permit } from './useERC20Permit'\r\nimport useTransactionDeadline from './useTransactionDeadline'\r\n\r\nconst REMOVE_V2_LIQUIDITY_PERMIT_INFO: PermitInfo = {\r\n  version: '1',\r\n  name: 'Uniswap V2',\r\n  type: PermitType.AMOUNT,\r\n}\r\n\r\nexport function useV2LiquidityTokenPermit(\r\n  liquidityAmount: CurrencyAmount<Token> | null | undefined,\r\n  spender: string | null | undefined\r\n) {\r\n  const transactionDeadline = useTransactionDeadline()\r\n  return useERC20Permit(liquidityAmount, spender, transactionDeadline, REMOVE_V2_LIQUIDITY_PERMIT_INFO)\r\n}\r\n","import { PropsWithChildren } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Z_INDEX } from 'theme/zIndex'\r\n\r\ninterface BodyWrapperProps {\r\n  $margin?: string\r\n  $maxWidth?: string\r\n}\r\n\r\nexport const BodyWrapper = styled.main<BodyWrapperProps>`\r\n  position: relative;\r\n  margin-top: ${({ $margin }) => $margin ?? '0px'};\r\n  max-width: ${({ $maxWidth }) => $maxWidth ?? '420px'};\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.surface1};\r\n  border-radius: 16px;\r\n  border: 1px solid ${({ theme }) => theme.surface3};\r\n  margin-top: 1rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  z-index: ${Z_INDEX.default};\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody(props: PropsWithChildren<BodyWrapperProps>) {\r\n  return <BodyWrapper {...props} />\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Currency, CurrencyAmount, Percent, Token } from '@uniswap/sdk-core'\r\nimport { Pair } from '@uniswap/v2-sdk'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport JSBI from 'jsbi'\r\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\r\nimport { ReactNode, useCallback } from 'react'\r\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\r\nimport { AppState } from 'state/reducer'\r\n\r\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\r\nimport { useV2Pair } from '../../hooks/useV2Pairs'\r\nimport { useTokenBalances } from '../connection/hooks'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport function useBurnState(): AppState['burn'] {\r\n  return useAppSelector((state) => state.burn)\r\n}\r\n\r\nexport function useDerivedBurnInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined\r\n): {\r\n  pair?: Pair | null\r\n  parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\r\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\r\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\r\n  }\r\n  error?: ReactNode\r\n} {\r\n  const { account } = useWeb3React()\r\n\r\n  const { independentField, typedValue } = useBurnState()\r\n\r\n  // pair + totalsupply\r\n  const [, pair] = useV2Pair(currencyA, currencyB)\r\n\r\n  // balances\r\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\r\n  const userLiquidity: undefined | CurrencyAmount<Token> = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\r\n\r\n  const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\r\n  const tokens = {\r\n    [Field.CURRENCY_A]: tokenA,\r\n    [Field.CURRENCY_B]: tokenB,\r\n    [Field.LIQUIDITY]: pair?.liquidityToken,\r\n  }\r\n\r\n  // liquidity values\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n  const liquidityValueA =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenA &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\r\n      ? CurrencyAmount.fromRawAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).quotient)\r\n      : undefined\r\n  const liquidityValueB =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenB &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\r\n      ? CurrencyAmount.fromRawAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).quotient)\r\n      : undefined\r\n  const liquidityValues: { [Field.CURRENCY_A]?: CurrencyAmount<Token>; [Field.CURRENCY_B]?: CurrencyAmount<Token> } = {\r\n    [Field.CURRENCY_A]: liquidityValueA,\r\n    [Field.CURRENCY_B]: liquidityValueB,\r\n  }\r\n\r\n  let percentToRemove: Percent = new Percent('0', '100')\r\n  // user specified a %\r\n  if (independentField === Field.LIQUIDITY_PERCENT) {\r\n    percentToRemove = new Percent(typedValue, '100')\r\n  }\r\n  // user specified a specific amount of liquidity tokens\r\n  else if (independentField === Field.LIQUIDITY) {\r\n    if (pair?.liquidityToken) {\r\n      const independentAmount = tryParseCurrencyAmount(typedValue, pair.liquidityToken)\r\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\r\n        percentToRemove = new Percent(independentAmount.quotient, userLiquidity.quotient)\r\n      }\r\n    }\r\n  }\r\n  // user specified a specific amount of token a or b\r\n  else {\r\n    if (tokens[independentField]) {\r\n      const independentAmount = tryParseCurrencyAmount(typedValue, tokens[independentField])\r\n      const liquidityValue = liquidityValues[independentField]\r\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\r\n        percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient)\r\n      }\r\n    }\r\n  }\r\n\r\n  const parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\r\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\r\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\r\n  } = {\r\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\r\n    [Field.LIQUIDITY]:\r\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\r\n        ? CurrencyAmount.fromRawAmount(\r\n            userLiquidity.currency,\r\n            percentToRemove.multiply(userLiquidity.quotient).quotient\r\n          )\r\n        : undefined,\r\n    [Field.CURRENCY_A]:\r\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\r\n        ? CurrencyAmount.fromRawAmount(tokenA, percentToRemove.multiply(liquidityValueA.quotient).quotient)\r\n        : undefined,\r\n    [Field.CURRENCY_B]:\r\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\r\n        ? CurrencyAmount.fromRawAmount(tokenB, percentToRemove.multiply(liquidityValueB.quotient).quotient)\r\n        : undefined,\r\n  }\r\n\r\n  let error: ReactNode | undefined\r\n  if (!account) {\r\n    error = <Trans>Connect wallet</Trans>\r\n  }\r\n\r\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    error = error ?? <Trans>Enter an amount</Trans>\r\n  }\r\n\r\n  return { pair, parsedAmounts, error }\r\n}\r\n\r\nexport function useBurnActionHandlers(): {\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n} {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return {\r\n    onUserInput,\r\n  }\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport type { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trans } from '@lingui/macro'\r\nimport { BrowserEvent, InterfaceElementName, InterfaceEventName, LiquidityEventName } from '@uniswap/analytics-events'\r\nimport { Currency, Percent } from '@uniswap/sdk-core'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { sendAnalyticsEvent, TraceEvent, useTrace } from 'analytics'\r\nimport { useToggleAccountDrawer } from 'components/AccountDrawer'\r\nimport { V2Unsupported } from 'components/V2Unsupported'\r\nimport { isSupportedChain } from 'constants/chains'\r\nimport { useNetworkSupportsV2 } from 'hooks/useNetworkSupportsV2'\r\nimport { useV2LiquidityTokenPermit } from 'hooks/useV2LiquidityTokenPermit'\r\nimport { PositionPageUnsupportedContent } from 'pages/Pool/PositionPage'\r\nimport { useCallback, useMemo, useState } from 'react'\r\nimport { ArrowDown, Plus } from 'react-feather'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { Text } from 'rebass'\r\nimport { useTheme } from 'styled-components'\r\nimport { StyledInternalLink, ThemedText } from 'theme/components'\r\n\r\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\r\nimport { BlueCard, LightCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\r\nimport CurrencyLogo from '../../components/Logo/CurrencyLogo'\r\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row, { RowBetween, RowFixed } from '../../components/Row'\r\nimport Slider from '../../components/Slider'\r\nimport { Dots } from '../../components/swap/styled'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\r\nimport { usePairContract, useV2RouterContract } from '../../hooks/useContract'\r\nimport useDebouncedChangeHandler from '../../hooks/useDebouncedChangeHandler'\r\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\r\nimport { Field } from '../../state/burn/actions'\r\nimport { useBurnActionHandlers, useBurnState, useDerivedBurnInfo } from '../../state/burn/hooks'\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { TransactionType } from '../../state/transactions/types'\r\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\r\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\r\nimport { calculateSlippageAmount } from '../../utils/calculateSlippageAmount'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport AppBody from '../AppBody'\r\nimport { ClickableText, MaxButton, Wrapper } from '../Pool/styled'\r\n\r\nconst DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE = new Percent(5, 100)\r\n\r\nexport default function RemoveLiquidityWrapper() {\r\n  const { chainId } = useWeb3React()\r\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\r\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\r\n  if (isSupportedChain(chainId) && currencyA !== currencyB) {\r\n    return <RemoveLiquidity />\r\n  } else {\r\n    return <PositionPageUnsupportedContent />\r\n  }\r\n}\r\n\r\nfunction RemoveLiquidity() {\r\n  const navigate = useNavigate()\r\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\r\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\r\n  const { account, chainId, provider } = useWeb3React()\r\n  const [tokenA, tokenB] = useMemo(() => [currencyA?.wrapped, currencyB?.wrapped], [currencyA, currencyB])\r\n\r\n  const theme = useTheme()\r\n  const trace = useTrace()\r\n\r\n  // toggle wallet when disconnected\r\n  const toggleWalletDrawer = useToggleAccountDrawer()\r\n\r\n  // burn state\r\n  const { independentField, typedValue } = useBurnState()\r\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\r\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\r\n\r\n  // txn values\r\n  const [txHash, setTxHash] = useState<string>('')\r\n  const deadline = useTransactionDeadline()\r\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE)\r\n\r\n  const formattedAmounts = {\r\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\r\n      ? '0'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\r\n      ? '<1'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\r\n    [Field.LIQUIDITY]:\r\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_A]:\r\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_B]:\r\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\r\n\r\n  // pair contract\r\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\r\n\r\n  const router = useV2RouterContract()\r\n\r\n  // allowance handling\r\n  const { gatherPermitSignature, signatureData } = useV2LiquidityTokenPermit(\r\n    parsedAmounts[Field.LIQUIDITY],\r\n    router?.address\r\n  )\r\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], router?.address)\r\n\r\n  async function onAttemptToApprove() {\r\n    if (!pairContract || !pair || !provider || !deadline) throw new Error('missing dependencies')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    if (gatherPermitSignature) {\r\n      try {\r\n        await gatherPermitSignature()\r\n      } catch (error) {\r\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\r\n        if (error?.code !== 4001) {\r\n          await approveCallback()\r\n        }\r\n      }\r\n    } else {\r\n      await approveCallback()\r\n    }\r\n  }\r\n\r\n  // wrapped onUserInput to clear signatures\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      return _onUserInput(field, typedValue)\r\n    },\r\n    [_onUserInput]\r\n  )\r\n\r\n  const onLiquidityInput = useCallback(\r\n    (typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue),\r\n    [onUserInput]\r\n  )\r\n  const onCurrencyAInput = useCallback(\r\n    (typedValue: string): void => onUserInput(Field.CURRENCY_A, typedValue),\r\n    [onUserInput]\r\n  )\r\n  const onCurrencyBInput = useCallback(\r\n    (typedValue: string): void => onUserInput(Field.CURRENCY_B, typedValue),\r\n    [onUserInput]\r\n  )\r\n\r\n  // tx sending\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const networkSupportsV2 = useNetworkSupportsV2()\r\n\r\n  async function onRemove() {\r\n    if (!chainId || !provider || !account || !deadline || !router || !networkSupportsV2) {\r\n      throw new Error('missing dependencies')\r\n    }\r\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\r\n    if (!currencyAmountA || !currencyAmountB) {\r\n      throw new Error('missing currency amounts')\r\n    }\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\r\n    }\r\n\r\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    const currencyBIsETH = currencyB.isNative\r\n    const oneCurrencyIsETH = currencyA.isNative || currencyBIsETH\r\n\r\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\r\n\r\n    let methodNames: string[], args: Array<string | string[] | number | boolean>\r\n    // we have approval, use normal remove liquidity\r\n    if (approval === ApprovalState.APPROVED) {\r\n      // removeLiquidityETH\r\n      if (oneCurrencyIsETH) {\r\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.quotient.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account,\r\n          deadline.toHexString(),\r\n        ]\r\n      }\r\n      // removeLiquidity\r\n      else {\r\n        methodNames = ['removeLiquidity']\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          liquidityAmount.quotient.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account,\r\n          deadline.toHexString(),\r\n        ]\r\n      }\r\n    }\r\n    // we have a signature, use permit versions of remove liquidity\r\n    else if (signatureData !== null) {\r\n      // removeLiquidityETHWithPermit\r\n      if (oneCurrencyIsETH) {\r\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.quotient.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n      // removeLiquidityETHWithPermit\r\n      else {\r\n        methodNames = ['removeLiquidityWithPermit']\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          liquidityAmount.quotient.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n    } else {\r\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\r\n    }\r\n\r\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\r\n      methodNames.map((methodName) =>\r\n        router.estimateGas[methodName](...args)\r\n          .then((estimateGas) => calculateGasMargin(estimateGas))\r\n          .catch((error) => {\r\n            console.error(`estimateGas failed`, methodName, args, error)\r\n            return undefined\r\n          })\r\n      )\r\n    )\r\n\r\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\r\n      BigNumber.isBigNumber(safeGasEstimate)\r\n    )\r\n\r\n    // all estimations failed...\r\n    if (indexOfSuccessfulEstimation === -1) {\r\n      console.error('This transaction would fail. Please contact support.')\r\n    } else {\r\n      const methodName = methodNames[indexOfSuccessfulEstimation]\r\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\r\n\r\n      setAttemptingTxn(true)\r\n      await router[methodName](...args, {\r\n        gasLimit: safeGasEstimate,\r\n      })\r\n        .then((response: TransactionResponse) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            type: TransactionType.REMOVE_LIQUIDITY_V3,\r\n            baseCurrencyId: currencyId(currencyA),\r\n            quoteCurrencyId: currencyId(currencyB),\r\n            expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient.toString() ?? '0',\r\n            expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient.toString() ?? '0',\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n\r\n          sendAnalyticsEvent(LiquidityEventName.REMOVE_LIQUIDITY_SUBMITTED, {\r\n            label: [currencyA.symbol, currencyB.symbol].join('/'),\r\n            ...trace,\r\n          })\r\n        })\r\n        .catch((error: Error) => {\r\n          setAttemptingTxn(false)\r\n          // we only care if the error is something _other_ than the user rejected the tx\r\n          console.error(error)\r\n        })\r\n    }\r\n  }\r\n\r\n  function modalHeader() {\r\n    return (\r\n      <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize={24} fontWeight={535}>\r\n            {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\r\n          </Text>\r\n          <RowFixed gap=\"4px\">\r\n            <CurrencyLogo currency={currencyA} size=\"24px\" />\r\n            <Text fontSize={24} fontWeight={535} style={{ marginLeft: '10px' }}>\r\n              {currencyA?.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowFixed>\r\n          <Plus size=\"16\" color={theme.neutral2} />\r\n        </RowFixed>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize={24} fontWeight={535}>\r\n            {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\r\n          </Text>\r\n          <RowFixed gap=\"4px\">\r\n            <CurrencyLogo currency={currencyB} size=\"24px\" />\r\n            <Text fontSize={24} fontWeight={535} style={{ marginLeft: '10px' }}>\r\n              {currencyB?.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n\r\n        <ThemedText.DeprecatedItalic fontSize={12} color={theme.neutral2} textAlign=\"left\" padding=\"12px 0 0 0\">\r\n          <Trans>\r\n            Output is estimated. If the price changes by more than {allowedSlippage.toSignificant(4)}% your transaction\r\n            will revert.\r\n          </Trans>\r\n        </ThemedText.DeprecatedItalic>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  function modalBottom() {\r\n    return (\r\n      <>\r\n        <RowBetween>\r\n          <Text color={theme.neutral2} fontWeight={535} fontSize={16}>\r\n            <Trans>\r\n              UNI {currencyA?.symbol}/{currencyB?.symbol} Burned\r\n            </Trans>\r\n          </Text>\r\n          <RowFixed>\r\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin={true} />\r\n            <Text fontWeight={535} fontSize={16}>\r\n              {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        {pair && (\r\n          <>\r\n            <RowBetween>\r\n              <Text color={theme.neutral2} fontWeight={535} fontSize={16}>\r\n                <Trans>Price</Trans>\r\n              </Text>\r\n              <Text fontWeight={535} fontSize={16} color={theme.neutral1}>\r\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\r\n              </Text>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <div />\r\n              <Text fontWeight={535} fontSize={16} color={theme.neutral1}>\r\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\r\n              </Text>\r\n            </RowBetween>\r\n          </>\r\n        )}\r\n        <ButtonPrimary disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\r\n          <Text fontWeight={535} fontSize={20}>\r\n            <Trans>Confirm</Trans>\r\n          </Text>\r\n        </ButtonPrimary>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const pendingText = (\r\n    <Trans>\r\n      Removing {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} {currencyA?.symbol} and\r\n      {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} {currencyB?.symbol}\r\n    </Trans>\r\n  )\r\n\r\n  const liquidityPercentChangeCallback = useCallback(\r\n    (value: number) => {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\r\n    },\r\n    [onUserInput]\r\n  )\r\n\r\n  const oneCurrencyIsETH = currencyA?.isNative || currencyB?.isNative\r\n\r\n  const oneCurrencyIsWETH = Boolean(\r\n    chainId &&\r\n      WRAPPED_NATIVE_CURRENCY[chainId] &&\r\n      ((currencyA && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(currencyA)) ||\r\n        (currencyB && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(currencyB)))\r\n  )\r\n\r\n  const handleSelectCurrencyA = useCallback(\r\n    (currency: Currency) => {\r\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\r\n        navigate(`/remove/v2/${currencyId(currency)}/${currencyIdA}`)\r\n      } else {\r\n        navigate(`/remove/v2/${currencyId(currency)}/${currencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, currencyIdB, navigate]\r\n  )\r\n  const handleSelectCurrencyB = useCallback(\r\n    (currency: Currency) => {\r\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\r\n        navigate(`/remove/v2/${currencyIdB}/${currencyId(currency)}`)\r\n      } else {\r\n        navigate(`/remove/v2/${currencyIdA}/${currencyId(currency)}`)\r\n      }\r\n    },\r\n    [currencyIdA, currencyIdB, navigate]\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\r\n    }\r\n    setTxHash('')\r\n  }, [onUserInput, txHash])\r\n\r\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\r\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\r\n    liquidityPercentChangeCallback\r\n  )\r\n\r\n  if (!networkSupportsV2) return <V2Unsupported />\r\n\r\n  return (\r\n    <>\r\n      <AppBody>\r\n        <AddRemoveTabs creating={false} adding={false} autoSlippage={DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE} />\r\n        <Wrapper>\r\n          <TransactionConfirmationModal\r\n            isOpen={showConfirm}\r\n            onDismiss={handleDismissConfirmation}\r\n            attemptingTxn={attemptingTxn}\r\n            hash={txHash ? txHash : ''}\r\n            reviewContent={() => (\r\n              <ConfirmationModalContent\r\n                title={<Trans>You will receive</Trans>}\r\n                onDismiss={handleDismissConfirmation}\r\n                topContent={modalHeader}\r\n                bottomContent={modalBottom}\r\n              />\r\n            )}\r\n            pendingText={pendingText}\r\n          />\r\n          <AutoColumn gap=\"md\">\r\n            <BlueCard>\r\n              <AutoColumn gap=\"10px\">\r\n                <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\r\n                  <Trans>\r\n                    <b>Tip:</b> Removing pool tokens converts your position back into underlying tokens at the current\r\n                    rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.\r\n                  </Trans>\r\n                </ThemedText.DeprecatedLink>\r\n              </AutoColumn>\r\n            </BlueCard>\r\n            <LightCard>\r\n              <AutoColumn gap=\"20px\">\r\n                <RowBetween>\r\n                  <Text fontWeight={535}>\r\n                    <Trans>Remove amount</Trans>\r\n                  </Text>\r\n                  <ClickableText\r\n                    fontWeight={535}\r\n                    onClick={() => {\r\n                      setShowDetailed(!showDetailed)\r\n                    }}\r\n                  >\r\n                    {showDetailed ? <Trans>Simple</Trans> : <Trans>Detailed</Trans>}\r\n                  </ClickableText>\r\n                </RowBetween>\r\n                <Row style={{ alignItems: 'flex-end' }}>\r\n                  <Text fontSize={72} fontWeight={535}>\r\n                    {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\r\n                  </Text>\r\n                </Row>\r\n                {!showDetailed && (\r\n                  <>\r\n                    <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\r\n                    <RowBetween>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')} width=\"20%\">\r\n                        25%\r\n                      </MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')} width=\"20%\">\r\n                        50%\r\n                      </MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')} width=\"20%\">\r\n                        75%\r\n                      </MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')} width=\"20%\">\r\n                        Max\r\n                      </MaxButton>\r\n                    </RowBetween>\r\n                  </>\r\n                )}\r\n              </AutoColumn>\r\n            </LightCard>\r\n            {!showDetailed && (\r\n              <>\r\n                <ColumnCenter>\r\n                  <ArrowDown size=\"16\" color={theme.neutral2} />\r\n                </ColumnCenter>\r\n                <LightCard>\r\n                  <AutoColumn gap=\"10px\">\r\n                    <RowBetween>\r\n                      <Text fontSize={24} fontWeight={535}>\r\n                        {formattedAmounts[Field.CURRENCY_A] || '-'}\r\n                      </Text>\r\n                      <RowFixed>\r\n                        <CurrencyLogo currency={currencyA} style={{ marginRight: '12px' }} />\r\n                        <Text fontSize={24} fontWeight={535} id=\"remove-liquidity-tokena-symbol\">\r\n                          {currencyA?.symbol}\r\n                        </Text>\r\n                      </RowFixed>\r\n                    </RowBetween>\r\n                    <RowBetween>\r\n                      <Text fontSize={24} fontWeight={535}>\r\n                        {formattedAmounts[Field.CURRENCY_B] || '-'}\r\n                      </Text>\r\n                      <RowFixed>\r\n                        <CurrencyLogo currency={currencyB} style={{ marginRight: '12px' }} />\r\n                        <Text fontSize={24} fontWeight={535} id=\"remove-liquidity-tokenb-symbol\">\r\n                          {currencyB?.symbol}\r\n                        </Text>\r\n                      </RowFixed>\r\n                    </RowBetween>\r\n                    {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\r\n                      <RowBetween style={{ justifyContent: 'flex-end' }}>\r\n                        {oneCurrencyIsETH ? (\r\n                          <StyledInternalLink\r\n                            to={`/remove/v2/${\r\n                              currencyA?.isNative && chainId && WRAPPED_NATIVE_CURRENCY[chainId]\r\n                                ? WRAPPED_NATIVE_CURRENCY[chainId]?.address\r\n                                : currencyIdA\r\n                            }/${\r\n                              currencyB?.isNative && chainId && WRAPPED_NATIVE_CURRENCY[chainId]\r\n                                ? WRAPPED_NATIVE_CURRENCY[chainId]?.address\r\n                                : currencyIdB\r\n                            }`}\r\n                          >\r\n                            Receive WETH\r\n                          </StyledInternalLink>\r\n                        ) : oneCurrencyIsWETH ? (\r\n                          <StyledInternalLink\r\n                            to={`/remove/v2/${\r\n                              currencyA && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(currencyA) ? 'ETH' : currencyIdA\r\n                            }/${\r\n                              currencyB && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(currencyB) ? 'ETH' : currencyIdB\r\n                            }`}\r\n                          >\r\n                            Receive ETH\r\n                          </StyledInternalLink>\r\n                        ) : null}\r\n                      </RowBetween>\r\n                    ) : null}\r\n                  </AutoColumn>\r\n                </LightCard>\r\n              </>\r\n            )}\r\n\r\n            {showDetailed && (\r\n              <>\r\n                <CurrencyInputPanel\r\n                  value={formattedAmounts[Field.LIQUIDITY]}\r\n                  onUserInput={onLiquidityInput}\r\n                  onMax={() => {\r\n                    onUserInput(Field.LIQUIDITY_PERCENT, '100')\r\n                  }}\r\n                  showMaxButton={!atMaxAmount}\r\n                  currency={pair?.liquidityToken}\r\n                  pair={pair}\r\n                  id=\"liquidity-amount\"\r\n                />\r\n                <ColumnCenter>\r\n                  <ArrowDown size=\"16\" color={theme.neutral2} />\r\n                </ColumnCenter>\r\n                <CurrencyInputPanel\r\n                  hideBalance={true}\r\n                  value={formattedAmounts[Field.CURRENCY_A]}\r\n                  onUserInput={onCurrencyAInput}\r\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                  showMaxButton={!atMaxAmount}\r\n                  currency={currencyA}\r\n                  label=\"Output\"\r\n                  onCurrencySelect={handleSelectCurrencyA}\r\n                  id=\"remove-liquidity-tokena\"\r\n                />\r\n                <ColumnCenter>\r\n                  <Plus size=\"16\" color={theme.neutral2} />\r\n                </ColumnCenter>\r\n                <CurrencyInputPanel\r\n                  hideBalance={true}\r\n                  value={formattedAmounts[Field.CURRENCY_B]}\r\n                  onUserInput={onCurrencyBInput}\r\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                  showMaxButton={!atMaxAmount}\r\n                  currency={currencyB}\r\n                  label=\"Output\"\r\n                  onCurrencySelect={handleSelectCurrencyB}\r\n                  id=\"remove-liquidity-tokenb\"\r\n                />\r\n              </>\r\n            )}\r\n            {pair && (\r\n              <div style={{ padding: '10px 20px' }}>\r\n                <RowBetween>\r\n                  <Trans>Price:</Trans>\r\n                  <div>\r\n                    1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\r\n                  </div>\r\n                </RowBetween>\r\n                <RowBetween>\r\n                  <div />\r\n                  <div>\r\n                    1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\r\n                  </div>\r\n                </RowBetween>\r\n              </div>\r\n            )}\r\n            <div style={{ position: 'relative' }}>\r\n              {!account ? (\r\n                <TraceEvent\r\n                  events={[BrowserEvent.onClick]}\r\n                  name={InterfaceEventName.CONNECT_WALLET_BUTTON_CLICKED}\r\n                  properties={{ received_swap_quote: false }}\r\n                  element={InterfaceElementName.CONNECT_WALLET_BUTTON}\r\n                >\r\n                  <ButtonLight onClick={toggleWalletDrawer}>\r\n                    <Trans>Connect wallet</Trans>\r\n                  </ButtonLight>\r\n                </TraceEvent>\r\n              ) : (\r\n                <RowBetween>\r\n                  <ButtonConfirmed\r\n                    onClick={onAttemptToApprove}\r\n                    confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\r\n                    disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\r\n                    mr=\"0.5rem\"\r\n                    fontWeight={535}\r\n                    fontSize={16}\r\n                  >\r\n                    {approval === ApprovalState.PENDING ? (\r\n                      <Dots>\r\n                        <Trans>Approving</Trans>\r\n                      </Dots>\r\n                    ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\r\n                      <Trans>Approved</Trans>\r\n                    ) : (\r\n                      <Trans>Approve</Trans>\r\n                    )}\r\n                  </ButtonConfirmed>\r\n                  <ButtonError\r\n                    onClick={() => {\r\n                      setShowConfirm(true)\r\n                    }}\r\n                    disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\r\n                    error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\r\n                  >\r\n                    <Text fontSize={16} fontWeight={535}>\r\n                      {error || <Trans>Remove</Trans>}\r\n                    </Text>\r\n                  </ButtonError>\r\n                </RowBetween>\r\n              )}\r\n            </div>\r\n          </AutoColumn>\r\n        </Wrapper>\r\n      </AppBody>\r\n\r\n      {pair ? (\r\n        <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\r\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\r\n        </AutoColumn>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@uniswap/sdk-core'\r\nimport JSBI from 'jsbi'\r\n\r\nconst ONE = new Fraction(1, 1)\r\n\r\nexport function calculateSlippageAmount(value: CurrencyAmount<Currency>, slippage: Percent): [JSBI, JSBI] {\r\n  if (slippage.lessThan(0) || slippage.greaterThan(ONE)) throw new Error('Unexpected slippage')\r\n  return [value.multiply(ONE.subtract(slippage)).quotient, value.multiply(ONE.add(slippage)).quotient]\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Plus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nPlus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlus.displayName = 'Plus';\nexport default Plus;"],"names":["InputPanel","styled","div","flexColumnNoWrap","hideInput","theme","surface2","Container","surface3","disabled","CurrencySelect","ButtonGray","selected","surface1","accent1","deprecated_shallowShadow","neutral1","white","darken","visible","pointerEvents","InputRow","flexRowNoWrap","LabelRow","neutral2","FiatRow","Aligner","span","StyledDropDown","DropDown","StyledTokenName","active","StyledBalanceMax","button","accent2","StyledNumericalInput","NumericalInput","loadingOpacityMixin","StyledPrefetchBalancesWrapper","PrefetchBalancesWrapper","$fullWidth","CurrencyInputPanel","value","onUserInput","onMax","showMaxButton","onCurrencySelect","currency","otherCurrency","id","showCommonBases","showCurrencyAmount","disableNonToken","renderBalance","fiatValue","hideBalance","pair","locked","loading","rest","modalOpen","setModalOpen","useState","account","chainId","useWeb3React","selectedCurrencyBalance","useCurrencyBalance","undefined","useTheme","formatCurrencyAmount","useFormatter","handleDismissSearch","useCallback","chainAllowed","isSupportedChain","style","padding","borderRadius","className","$loading","shouldFetchOnAccountUpdate","onClick","RowFixed","marginRight","DoubleCurrencyLogo","currency0","token0","currency1","token1","size","margin","CurrencyLogo","symbol","Boolean","length","slice","RowBetween","LoadingOpacityContainer","FiatValue","height","ThemedText","DeprecatedBody","color","neutral3","fontWeight","fontSize","display","cursor","amount","type","NumberType","TokenNonTx","TraceEvent","events","BrowserEvent","name","SwapEventName","SWAP_MAX_TOKEN_AMOUNT_SELECTED","element","InterfaceElementName","MAX_TOKEN_AMOUNT_BUTTON","CurrencySearchModal","isOpen","onDismiss","selectedCurrency","otherSelectedCurrency","Tabs","StyledLink","Link","flex","deprecated_mediaWidth","deprecated_upToMedium","FindPoolTabsText","SubHeaderLarge","StyledArrowLeft","ArrowLeft","FindPoolTabs","origin","position","to","AddRemoveTitleText","AddRemoveTabs","adding","creating","autoSlippage","positionID","children","dispatch","useAppDispatch","poolLink","useLocation","pathname","includes","toString","align","resetMintState","resetMintV3State","stroke","textAlign","Box","SettingsTab","hideRoutingSettings","StyledRangeInput","input","surface4","Slider","onChange","min","step","max","changeCallback","e","parseInt","target","aria-labelledby","useApproval","amountToApprove","spender","useIsPendingApproval","token","isToken","approvalState","tokenAllowance","useTokenAllowance","pendingApproval","useMemo","isNative","ApprovalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useApprovalStateForSpender","tokenContract","useTokenContract","address","approve","async","logFailure","error","console","warn","useExact","estimatedGas","estimateGas","MaxUint256","catch","quotient","gasLimit","calculateGasMargin","then","response","eventProperties","chain_id","token_symbol","token_address","getTokenAddress","sendAnalyticsEvent","InterfaceEventName","APPROVE_TOKEN_TXN_SUBMITTED","tokenAddress","spenderAddress","useGetAndTrackApproval","getApproval","addTransaction","useTransactionAdder","pending","TransactionType","APPROVAL","useApproveCallback","approval","useHasPendingApproval","useDebouncedChangeHandler","debouncedMs","inner","setInner","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","useEffect","useIsArgentWallet","argentWalletDetector","useArgentWalletDetectorContract","inputs","call","useSingleCallResult","NEVER_RELOAD","result","PermitType","AMOUNT","ALLOWED","PERMIT_VALIDITY_BUFFER","PERMITTABLE_TOKENS","ChainId","MAINNET","USDC_MAINNET","version","DAI","UNI","GOERLI","SEPOLIA","UseERC20PermitState","NOT_APPLICABLE","LOADING","NOT_SIGNED","SIGNED","EIP712_DOMAIN_TYPE","EIP712_DOMAIN_TYPE_NO_VERSION","EIP2612_TYPE","PERMIT_ALLOWED_TYPE","REMOVE_V2_LIQUIDITY_PERMIT_INFO","useV2LiquidityTokenPermit","liquidityAmount","currencyAmount","transactionDeadline","overridePermitInfo","provider","eip2612Contract","useEIP2612Contract","isArgentWallet","nonceInputs","tokenNonceState","permitInfo","signatureData","setSignatureData","valid","state","gatherPermitSignature","nonceNumber","toNumber","isSignatureDataValid","owner","deadline","nonce","JSBI","allowed","signatureDeadline","message","holder","expiry","domain","verifyingContract","data","JSON","stringify","types","EIP712Domain","Permit","primaryType","send","splitSignature","signature","v","r","s","permitType","useERC20Permit","useTransactionDeadline","BodyWrapper","main","$margin","$maxWidth","Z_INDEX","default","AppBody","props","useBurnState","useAppSelector","burn","DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE","Percent","RemoveLiquidityWrapper","currencyIdA","currencyIdB","useParams","currencyA","currencyB","useCurrency","RemoveLiquidity","PositionPageUnsupportedContent","navigate","useNavigate","tokenA","tokenB","wrapped","trace","useTrace","toggleWalletDrawer","useToggleAccountDrawer","independentField","typedValue","parsedAmounts","useV2Pair","relevantTokenBalances","useTokenBalances","liquidityToken","userLiquidity","tokens","Field","CURRENCY_A","CURRENCY_B","LIQUIDITY","totalSupply","useTotalSupply","liquidityValueA","CurrencyAmount","fromRawAmount","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","independentAmount","tryParseCurrencyAmount","greaterThan","liquidityValue","multiply","useDerivedBurnInfo","_onUserInput","field","typeInput","useBurnActionHandlers","isValid","showConfirm","setShowConfirm","showDetailed","setShowDetailed","attemptingTxn","setAttemptingTxn","txHash","setTxHash","allowedSlippage","useUserSlippageToleranceWithDefault","formattedAmounts","equalTo","toFixed","toSignificant","atMaxAmount","pairContract","usePairContract","router","useV2RouterContract","approveCallback","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","networkSupportsV2","useNetworkSupportsV2","onRemove","Error","currencyAmountA","currencyAmountB","amountsMin","calculateSlippageAmount","currencyBIsETH","oneCurrencyIsETH","methodNames","args","toHexString","safeGasEstimates","Promise","all","map","methodName","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","BigNumber","isBigNumber","REMOVE_LIQUIDITY_V3","baseCurrencyId","currencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","hash","LiquidityEventName","REMOVE_LIQUIDITY_SUBMITTED","label","join","modalHeader","AutoColumn","gap","marginTop","Text","marginLeft","Plus","DeprecatedItalic","modalBottom","priceOf","ButtonPrimary","pendingText","liquidityPercentChangeCallback","oneCurrencyIsWETH","WRAPPED_NATIVE_CURRENCY","equals","handleSelectCurrencyA","handleSelectCurrencyB","handleDismissConfirmation","innerLiquidityPercentage","setInnerLiquidityPercentage","Number","Wrapper","TransactionConfirmationModal","reviewContent","ConfirmationModalContent","title","topContent","bottomContent","BlueCard","DeprecatedLink","b","LightCard","ClickableText","Row","alignItems","MaxButton","width","ColumnCenter","ArrowDown","justifyContent","StyledInternalLink","ButtonConfirmed","code","confirmed","mr","Dots","ButtonError","CONNECT_WALLET_BUTTON_CLICKED","properties","received_swap_quote","CONNECT_WALLET_BUTTON","ButtonLight","minWidth","maxWidth","MinimalPositionCard","showUnwrapped","V2Unsupported","ONE","Fraction","slippage","subtract","add","_extends"],"sourceRoot":""}