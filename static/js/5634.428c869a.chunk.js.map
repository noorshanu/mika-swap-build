{"version":3,"file":"static/js/5634.428c869a.chunk.js","mappings":"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","sources":["components/earn/styled.tsx","components/addLiquidity/OwnershipWarning.tsx","../node_modules/react-feather/dist/icons/cloud-off.js","../node_modules/react-feather/dist/icons/bar-chart-2.js","components/LiquidityChartRangeInput/Area.tsx","components/LiquidityChartRangeInput/AxisBottom.tsx","components/LiquidityChartRangeInput/svg.tsx","components/LiquidityChartRangeInput/Brush.tsx","components/LiquidityChartRangeInput/Line.tsx","../node_modules/react-feather/dist/icons/refresh-ccw.js","../node_modules/react-feather/dist/icons/zoom-in.js","../node_modules/react-feather/dist/icons/zoom-out.js","components/LiquidityChartRangeInput/Zoom.tsx","components/LiquidityChartRangeInput/Chart.tsx","utils/computeSurroundingTicks.ts","hooks/usePoolTickData.ts","components/LiquidityChartRangeInput/hooks.ts","components/LiquidityChartRangeInput/index.tsx","components/PositionPreview/index.tsx","components/RangeSelector/PresetsButtons.tsx","utils/approveAmountCalldata.ts","pages/AddLiquidity/Review.tsx","pages/AddLiquidity/index.tsx","hooks/useDerivedPositionInfo.ts","hooks/useArgentWalletContract.ts","utils/addressesAreEquivalent.ts","../node_modules/react-feather/dist/icons/inbox.js"],"sourcesContent":["import styled from 'styled-components'\r\n\r\nimport uImage from '../../assets/images/big_unicorn.png'\r\nimport noise from '../../assets/images/noise.png'\r\nimport xlUnicorn from '../../assets/images/xl_uni.png'\r\nimport { AutoColumn } from '../Column'\r\n\r\nexport const DataCard = styled(AutoColumn)<{ disabled?: boolean }>`\r\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #2172e5 100%);\r\n  border-radius: 12px;\r\n  width: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const CardBGImage = styled.span<{ desaturate?: boolean }>`\r\n  background: url(${uImage});\r\n  width: 1000px;\r\n  height: 600px;\r\n  position: absolute;\r\n  border-radius: 12px;\r\n  opacity: 0.4;\r\n  top: -100px;\r\n  left: -100px;\r\n  transform: rotate(-15deg);\r\n  user-select: none;\r\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\r\n`\r\n\r\nexport const CardBGImageSmaller = styled.span<{ desaturate?: boolean }>`\r\n  background: url(${xlUnicorn});\r\n  width: 1200px;\r\n  height: 1200px;\r\n  position: absolute;\r\n  border-radius: 12px;\r\n  top: -300px;\r\n  left: -300px;\r\n  opacity: 0.4;\r\n  user-select: none;\r\n\r\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\r\n`\r\n\r\nexport const CardNoise = styled.span`\r\n  background: url(${noise});\r\n  background-size: cover;\r\n  mix-blend-mode: overlay;\r\n  border-radius: 12px;\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0.15;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  user-select: none;\r\n`\r\n\r\nexport const CardSection = styled(AutoColumn)<{ disabled?: boolean }>`\r\n  padding: 1rem;\r\n  z-index: 1;\r\n  opacity: ${({ disabled }) => disabled && '0.4'};\r\n`\r\n\r\nexport const Break = styled.div`\r\n  width: 100%;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  height: 1px;\r\n`\r\n","import { Trans } from '@lingui/macro'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\n\r\nconst ExplainerText = styled.div`\r\n  color: ${({ theme }) => theme.neutral2};\r\n`\r\nconst TitleRow = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  color: ${({ theme }) => theme.deprecated_accentWarning};\r\n  margin-bottom: 8px;\r\n`\r\nconst Wrapper = styled.div`\r\n  background-color: ${({ theme }) => theme.deprecated_accentWarningSoft};\r\n  border-radius: 16px;\r\n  margin-top: 12px;\r\n  max-width: 480px;\r\n  padding: 12px 20px;\r\n  width: 100%;\r\n`\r\n\r\ninterface OwnershipWarningProps {\r\n  ownerAddress: string\r\n}\r\n\r\nconst OwnershipWarning = ({ ownerAddress }: OwnershipWarningProps) => (\r\n  <Wrapper>\r\n    <TitleRow>\r\n      <AlertTriangle style={{ marginRight: '8px' }} />\r\n      <ThemedText.SubHeader color=\"deprecated_accentWarning\">\r\n        <Trans>Warning</Trans>\r\n      </ThemedText.SubHeader>\r\n    </TitleRow>\r\n    <ExplainerText>\r\n      <Trans>\r\n        You are not the owner of this LP position. You will not be able to withdraw the liquidity from this position\r\n        unless you own the following address: {ownerAddress}\r\n      </Trans>\r\n    </ExplainerText>\r\n  </Wrapper>\r\n)\r\n\r\nexport default OwnershipWarning\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar CloudOff = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"1\",\n    y1: \"1\",\n    x2: \"23\",\n    y2: \"23\"\n  }));\n});\nCloudOff.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nCloudOff.displayName = 'CloudOff';\nexport default CloudOff;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar BarChart2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"18\",\n    y1: \"20\",\n    x2: \"18\",\n    y2: \"10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"20\",\n    x2: \"12\",\n    y2: \"4\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"6\",\n    y1: \"20\",\n    x2: \"6\",\n    y2: \"14\"\n  }));\n});\nBarChart2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nBarChart2.displayName = 'BarChart2';\nexport default BarChart2;","import { area, curveStepAfter, ScaleLinear } from 'd3'\r\nimport React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { ChartEntry } from './types'\r\n\r\nconst Path = styled.path<{ fill?: string }>`\r\n  opacity: 0.5;\r\n  stroke: ${({ fill, theme }) => fill ?? theme.accent1};\r\n  fill: ${({ fill, theme }) => fill ?? theme.accent1};\r\n`\r\n\r\nexport const Area = ({\r\n  series,\r\n  xScale,\r\n  yScale,\r\n  xValue,\r\n  yValue,\r\n  fill,\r\n}: {\r\n  series: ChartEntry[]\r\n  xScale: ScaleLinear<number, number>\r\n  yScale: ScaleLinear<number, number>\r\n  xValue: (d: ChartEntry) => number\r\n  yValue: (d: ChartEntry) => number\r\n  fill?: string\r\n}) =>\r\n  useMemo(\r\n    () => (\r\n      <Path\r\n        fill={fill}\r\n        d={\r\n          area()\r\n            .curve(curveStepAfter)\r\n            .x((d: unknown) => xScale(xValue(d as ChartEntry)))\r\n            .y1((d: unknown) => yScale(yValue(d as ChartEntry)))\r\n            .y0(yScale(0))(\r\n            series.filter((d) => {\r\n              const value = xScale(xValue(d))\r\n              return value > 0 && value <= window.innerWidth\r\n            }) as Iterable<[number, number]>\r\n          ) ?? undefined\r\n        }\r\n      />\r\n    ),\r\n    [fill, series, xScale, xValue, yScale, yValue]\r\n  )\r\n","import { Axis as d3Axis, axisBottom, NumberValue, ScaleLinear, select } from 'd3'\r\nimport React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledGroup = styled.g`\r\n  line {\r\n    display: none;\r\n  }\r\n\r\n  text {\r\n    color: ${({ theme }) => theme.neutral2};\r\n    transform: translateY(5px);\r\n  }\r\n`\r\n\r\nconst Axis = ({ axisGenerator }: { axisGenerator: d3Axis<NumberValue> }) => {\r\n  const axisRef = (axis: SVGGElement) => {\r\n    axis &&\r\n      select(axis)\r\n        .call(axisGenerator)\r\n        .call((g) => g.select('.domain').remove())\r\n  }\r\n\r\n  return <g ref={axisRef} />\r\n}\r\n\r\nexport const AxisBottom = ({\r\n  xScale,\r\n  innerHeight,\r\n  offset = 0,\r\n}: {\r\n  xScale: ScaleLinear<number, number>\r\n  innerHeight: number\r\n  offset?: number\r\n}) =>\r\n  useMemo(\r\n    () => (\r\n      <StyledGroup transform={`translate(0, ${innerHeight + offset})`}>\r\n        <Axis axisGenerator={axisBottom(xScale).ticks(6)} />\r\n      </StyledGroup>\r\n    ),\r\n    [innerHeight, offset, xScale]\r\n  )\r\n","/**\r\n * Generates an SVG path for the east brush handle.\r\n * Apply `scale(-1, 1)` to generate west brush handle.\r\n *\r\n *    |```````\\\r\n *    |  | |  |\r\n *    |______/\r\n *    |\r\n *    |\r\n *    |\r\n *    |\r\n *    |\r\n *\r\n * https://medium.com/@dennismphil/one-side-rounded-rectangle-using-svg-fb31cf318d90\r\n */\r\nexport const brushHandlePath = (height: number) =>\r\n  [\r\n    // handle\r\n    `M 0 0`, // move to origin\r\n    `v ${height}`, // vertical line\r\n    'm 1 0', // move 1px to the right\r\n    `V 0`, // second vertical line\r\n    `M 0 1`, // move to origin\r\n\r\n    // head\r\n    'h 12', // horizontal line\r\n    'q 2 0, 2 2', // rounded corner\r\n    'v 22', // vertical line\r\n    'q 0 2 -2 2', // rounded corner\r\n    'h -12', // horizontal line\r\n    `z`, // close path\r\n  ].join(' ')\r\n\r\nexport const brushHandleAccentPath = () =>\r\n  [\r\n    'm 5 7', // move to first accent\r\n    'v 14', // vertical line\r\n    'M 0 0', // move to origin\r\n    'm 9 7', // move to second accent\r\n    'v 14', // vertical line\r\n    'z',\r\n  ].join(' ')\r\n\r\nexport const OffScreenHandle = ({\r\n  color,\r\n  size = 10,\r\n  margin = 10,\r\n}: {\r\n  color: string\r\n  size?: number\r\n  margin?: number\r\n}) => (\r\n  <polygon\r\n    points={`0 0, ${size} ${size}, 0 ${size}`}\r\n    transform={` translate(${size + margin}, ${margin}) rotate(45) `}\r\n    fill={color}\r\n    stroke={color}\r\n    strokeWidth=\"4\"\r\n    strokeLinejoin=\"round\"\r\n  />\r\n)\r\n","import { brushHandleAccentPath, brushHandlePath, OffScreenHandle } from 'components/LiquidityChartRangeInput/svg'\r\nimport { BrushBehavior, brushX, D3BrushEvent, ScaleLinear, select } from 'd3'\r\nimport usePrevious from 'hooks/usePrevious'\r\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Handle = styled.path<{ color: string }>`\r\n  cursor: ew-resize;\r\n  pointer-events: none;\r\n\r\n  stroke-width: 3;\r\n  stroke: ${({ color }) => color};\r\n  fill: ${({ color }) => color};\r\n`\r\n\r\nconst HandleAccent = styled.path`\r\n  cursor: ew-resize;\r\n  pointer-events: none;\r\n\r\n  stroke-width: 1.5;\r\n  stroke: ${({ theme }) => theme.white};\r\n  opacity: ${({ theme }) => theme.opacity.hover};\r\n`\r\n\r\nconst LabelGroup = styled.g<{ visible: boolean }>`\r\n  opacity: ${({ visible }) => (visible ? '1' : '0')};\r\n  transition: opacity 300ms;\r\n`\r\n\r\nconst TooltipBackground = styled.rect`\r\n  fill: ${({ theme }) => theme.surface3};\r\n`\r\n\r\nconst Tooltip = styled.text`\r\n  text-anchor: middle;\r\n  font-size: 13px;\r\n  fill: ${({ theme }) => theme.neutral1};\r\n`\r\n\r\n// flips the handles draggers when close to the container edges\r\nconst FLIP_HANDLE_THRESHOLD_PX = 20\r\n\r\n// margin to prevent tick snapping from putting the brush off screen\r\nconst BRUSH_EXTENT_MARGIN_PX = 2\r\n\r\n/**\r\n * Returns true if every element in `a` maps to the\r\n * same pixel coordinate as elements in `b`\r\n */\r\nconst compare = (a: [number, number], b: [number, number], xScale: ScaleLinear<number, number>): boolean => {\r\n  // normalize pixels to 1 decimals\r\n  const aNorm = a.map((x) => xScale(x).toFixed(1))\r\n  const bNorm = b.map((x) => xScale(x).toFixed(1))\r\n  return aNorm.every((v, i) => v === bNorm[i])\r\n}\r\n\r\nexport const Brush = ({\r\n  id,\r\n  xScale,\r\n  interactive,\r\n  brushLabelValue,\r\n  brushExtent,\r\n  setBrushExtent,\r\n  innerWidth,\r\n  innerHeight,\r\n  westHandleColor,\r\n  eastHandleColor,\r\n}: {\r\n  id: string\r\n  xScale: ScaleLinear<number, number>\r\n  interactive: boolean\r\n  brushLabelValue: (d: 'w' | 'e', x: number) => string\r\n  brushExtent: [number, number]\r\n  setBrushExtent: (extent: [number, number], mode: string | undefined) => void\r\n  innerWidth: number\r\n  innerHeight: number\r\n  westHandleColor: string\r\n  eastHandleColor: string\r\n}) => {\r\n  const brushRef = useRef<SVGGElement | null>(null)\r\n  const brushBehavior = useRef<BrushBehavior<SVGGElement> | null>(null)\r\n\r\n  // only used to drag the handles on brush for performance\r\n  const [localBrushExtent, setLocalBrushExtent] = useState<[number, number] | null>(brushExtent)\r\n  const [showLabels, setShowLabels] = useState(false)\r\n  const [hovering, setHovering] = useState(false)\r\n\r\n  const previousBrushExtent = usePrevious(brushExtent)\r\n\r\n  const brushed = useCallback(\r\n    (event: D3BrushEvent<unknown>) => {\r\n      const { type, selection, mode } = event\r\n\r\n      if (!selection) {\r\n        setLocalBrushExtent(null)\r\n        return\r\n      }\r\n\r\n      const scaled = (selection as [number, number]).map(xScale.invert) as [number, number]\r\n\r\n      // avoid infinite render loop by checking for change\r\n      if (type === 'end' && !compare(brushExtent, scaled, xScale)) {\r\n        setBrushExtent(scaled, mode)\r\n      }\r\n\r\n      setLocalBrushExtent(scaled)\r\n    },\r\n    [xScale, brushExtent, setBrushExtent]\r\n  )\r\n\r\n  // keep local and external brush extent in sync\r\n  // i.e. snap to ticks on bruhs end\r\n  useEffect(() => {\r\n    setLocalBrushExtent(brushExtent)\r\n  }, [brushExtent])\r\n\r\n  // initialize the brush\r\n  useEffect(() => {\r\n    if (!brushRef.current) return\r\n\r\n    brushBehavior.current = brushX<SVGGElement>()\r\n      .extent([\r\n        [Math.max(0 + BRUSH_EXTENT_MARGIN_PX, xScale(0)), 0],\r\n        [innerWidth - BRUSH_EXTENT_MARGIN_PX, innerHeight],\r\n      ])\r\n      .handleSize(30)\r\n      .filter(() => interactive)\r\n      .on('brush end', brushed)\r\n\r\n    brushBehavior.current(select(brushRef.current))\r\n\r\n    if (previousBrushExtent && compare(brushExtent, previousBrushExtent, xScale)) {\r\n      select(brushRef.current)\r\n        .transition()\r\n        .call(brushBehavior.current.move as any, brushExtent.map(xScale))\r\n    }\r\n\r\n    // brush linear gradient\r\n    select(brushRef.current)\r\n      .selectAll('.selection')\r\n      .attr('stroke', 'none')\r\n      .attr('fill-opacity', '0.1')\r\n      .attr('fill', `url(#${id}-gradient-selection)`)\r\n  }, [brushExtent, brushed, id, innerHeight, innerWidth, interactive, previousBrushExtent, xScale])\r\n\r\n  // respond to xScale changes only\r\n  useEffect(() => {\r\n    if (!brushRef.current || !brushBehavior.current) return\r\n\r\n    brushBehavior.current.move(select(brushRef.current) as any, brushExtent.map(xScale) as any)\r\n  }, [brushExtent, xScale])\r\n\r\n  // show labels when local brush changes\r\n  useEffect(() => {\r\n    setShowLabels(true)\r\n    const timeout = setTimeout(() => setShowLabels(false), 1500)\r\n    return () => clearTimeout(timeout)\r\n  }, [localBrushExtent])\r\n\r\n  // variables to help render the SVGs\r\n  const flipWestHandle = localBrushExtent && xScale(localBrushExtent[0]) > FLIP_HANDLE_THRESHOLD_PX\r\n  const flipEastHandle = localBrushExtent && xScale(localBrushExtent[1]) > innerWidth - FLIP_HANDLE_THRESHOLD_PX\r\n\r\n  const showWestArrow = localBrushExtent && (xScale(localBrushExtent[0]) < 0 || xScale(localBrushExtent[1]) < 0)\r\n  const showEastArrow =\r\n    localBrushExtent && (xScale(localBrushExtent[0]) > innerWidth || xScale(localBrushExtent[1]) > innerWidth)\r\n\r\n  const westHandleInView =\r\n    localBrushExtent && xScale(localBrushExtent[0]) >= 0 && xScale(localBrushExtent[0]) <= innerWidth\r\n  const eastHandleInView =\r\n    localBrushExtent && xScale(localBrushExtent[1]) >= 0 && xScale(localBrushExtent[1]) <= innerWidth\r\n\r\n  return useMemo(\r\n    () => (\r\n      <>\r\n        <defs>\r\n          <linearGradient id={`${id}-gradient-selection`} x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\">\r\n            <stop stopColor={westHandleColor} />\r\n            <stop stopColor={eastHandleColor} offset=\"1\" />\r\n          </linearGradient>\r\n\r\n          {/* clips at exactly the svg area */}\r\n          <clipPath id={`${id}-brush-clip`}>\r\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={innerHeight} />\r\n          </clipPath>\r\n        </defs>\r\n\r\n        {/* will host the d3 brush */}\r\n        <g\r\n          ref={brushRef}\r\n          clipPath={`url(#${id}-brush-clip)`}\r\n          onMouseEnter={() => setHovering(true)}\r\n          onMouseLeave={() => setHovering(false)}\r\n        />\r\n\r\n        {/* custom brush handles */}\r\n        {localBrushExtent && (\r\n          <>\r\n            {/* west handle */}\r\n            {westHandleInView ? (\r\n              <g\r\n                transform={`translate(${Math.max(0, xScale(localBrushExtent[0]))}, 0), scale(${\r\n                  flipWestHandle ? '-1' : '1'\r\n                }, 1)`}\r\n              >\r\n                <g>\r\n                  <Handle color={westHandleColor} d={brushHandlePath(innerHeight)} />\r\n                  <HandleAccent d={brushHandleAccentPath()} />\r\n                </g>\r\n\r\n                <LabelGroup\r\n                  transform={`translate(50,0), scale(${flipWestHandle ? '1' : '-1'}, 1)`}\r\n                  visible={showLabels || hovering}\r\n                >\r\n                  <TooltipBackground y=\"0\" x=\"-30\" height=\"30\" width=\"60\" rx=\"8\" />\r\n                  <Tooltip transform=\"scale(-1, 1)\" y=\"15\" dominantBaseline=\"middle\">\r\n                    {brushLabelValue('w', localBrushExtent[0])}\r\n                  </Tooltip>\r\n                </LabelGroup>\r\n              </g>\r\n            ) : null}\r\n\r\n            {/* east handle */}\r\n            {eastHandleInView ? (\r\n              <g transform={`translate(${xScale(localBrushExtent[1])}, 0), scale(${flipEastHandle ? '-1' : '1'}, 1)`}>\r\n                <g>\r\n                  <Handle color={eastHandleColor} d={brushHandlePath(innerHeight)} />\r\n                  <HandleAccent d={brushHandleAccentPath()} />\r\n                </g>\r\n\r\n                <LabelGroup\r\n                  transform={`translate(50,0), scale(${flipEastHandle ? '-1' : '1'}, 1)`}\r\n                  visible={showLabels || hovering}\r\n                >\r\n                  <TooltipBackground y=\"0\" x=\"-30\" height=\"30\" width=\"60\" rx=\"8\" />\r\n                  <Tooltip y=\"15\" dominantBaseline=\"middle\">\r\n                    {brushLabelValue('e', localBrushExtent[1])}\r\n                  </Tooltip>\r\n                </LabelGroup>\r\n              </g>\r\n            ) : null}\r\n\r\n            {showWestArrow && <OffScreenHandle color={westHandleColor} />}\r\n\r\n            {showEastArrow && (\r\n              <g transform={`translate(${innerWidth}, 0) scale(-1, 1)`}>\r\n                <OffScreenHandle color={eastHandleColor} />\r\n              </g>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    ),\r\n    [\r\n      brushLabelValue,\r\n      eastHandleColor,\r\n      eastHandleInView,\r\n      flipEastHandle,\r\n      flipWestHandle,\r\n      hovering,\r\n      id,\r\n      innerHeight,\r\n      innerWidth,\r\n      localBrushExtent,\r\n      showEastArrow,\r\n      showLabels,\r\n      showWestArrow,\r\n      westHandleColor,\r\n      westHandleInView,\r\n      xScale,\r\n    ]\r\n  )\r\n}\r\n","import { ScaleLinear } from 'd3'\r\nimport React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledLine = styled.line`\r\n  opacity: 0.5;\r\n  stroke-width: 2;\r\n  stroke: ${({ theme }) => theme.neutral1};\r\n  fill: none;\r\n`\r\n\r\nexport const Line = ({\r\n  value,\r\n  xScale,\r\n  innerHeight,\r\n}: {\r\n  value: number\r\n  xScale: ScaleLinear<number, number>\r\n  innerHeight: number\r\n}) =>\r\n  useMemo(\r\n    () => <StyledLine x1={xScale(value)} y1=\"0\" x2={xScale(value)} y2={innerHeight} />,\r\n    [value, xScale, innerHeight]\r\n  )\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar RefreshCcw = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1 4 1 10 7 10\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"23 20 23 14 17 14\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"\n  }));\n});\nRefreshCcw.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nRefreshCcw.displayName = 'RefreshCcw';\nexport default RefreshCcw;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ZoomIn = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    y1: \"21\",\n    x2: \"16.65\",\n    y2: \"16.65\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"11\",\n    y1: \"8\",\n    x2: \"11\",\n    y2: \"14\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"11\"\n  }));\n});\nZoomIn.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nZoomIn.displayName = 'ZoomIn';\nexport default ZoomIn;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ZoomOut = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    y1: \"21\",\n    x2: \"16.65\",\n    y2: \"16.65\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"11\"\n  }));\n});\nZoomOut.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nZoomOut.displayName = 'ZoomOut';\nexport default ZoomOut;","import { ButtonGray } from 'components/Button'\r\nimport { ScaleLinear, select, zoom, ZoomBehavior, zoomIdentity, ZoomTransform } from 'd3'\r\nimport React, { useEffect, useMemo, useRef } from 'react'\r\nimport { RefreshCcw, ZoomIn, ZoomOut } from 'react-feather'\r\nimport styled from 'styled-components'\r\n\r\nimport { ZoomLevels } from './types'\r\n\r\nconst Wrapper = styled.div<{ count: number }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${({ count }) => count.toString()}, 1fr);\r\n  grid-gap: 6px;\r\n\r\n  position: absolute;\r\n  top: -32px;\r\n  right: 0;\r\n`\r\n\r\nconst Button = styled(ButtonGray)`\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.surface3};\r\n    color: ${({ theme }) => theme.neutral1};\r\n  }\r\n\r\n  width: 32px;\r\n  height: 32px;\r\n  padding: 4px;\r\n`\r\n\r\nexport const ZoomOverlay = styled.rect`\r\n  fill: transparent;\r\n  cursor: grab;\r\n\r\n  &:active {\r\n    cursor: grabbing;\r\n  }\r\n`\r\n\r\nexport default function Zoom({\r\n  svg,\r\n  xScale,\r\n  setZoom,\r\n  width,\r\n  height,\r\n  resetBrush,\r\n  showResetButton,\r\n  zoomLevels,\r\n}: {\r\n  svg: SVGElement | null\r\n  xScale: ScaleLinear<number, number>\r\n  setZoom: (transform: ZoomTransform) => void\r\n  width: number\r\n  height: number\r\n  resetBrush: () => void\r\n  showResetButton: boolean\r\n  zoomLevels: ZoomLevels\r\n}) {\r\n  const zoomBehavior = useRef<ZoomBehavior<Element, unknown>>()\r\n\r\n  const [zoomIn, zoomOut, zoomInitial, zoomReset] = useMemo(\r\n    () => [\r\n      () =>\r\n        svg &&\r\n        zoomBehavior.current &&\r\n        select(svg as Element)\r\n          .transition()\r\n          .call(zoomBehavior.current.scaleBy, 2),\r\n      () =>\r\n        svg &&\r\n        zoomBehavior.current &&\r\n        select(svg as Element)\r\n          .transition()\r\n          .call(zoomBehavior.current.scaleBy, 0.5),\r\n      () =>\r\n        svg &&\r\n        zoomBehavior.current &&\r\n        select(svg as Element)\r\n          .transition()\r\n          .call(zoomBehavior.current.scaleTo, 0.5),\r\n      () =>\r\n        svg &&\r\n        zoomBehavior.current &&\r\n        select(svg as Element)\r\n          .call(zoomBehavior.current.transform, zoomIdentity.translate(0, 0).scale(1))\r\n          .transition()\r\n          .call(zoomBehavior.current.scaleTo, 0.5),\r\n    ],\r\n    [svg]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!svg) return\r\n\r\n    zoomBehavior.current = zoom()\r\n      .scaleExtent([zoomLevels.min, zoomLevels.max])\r\n      .extent([\r\n        [0, 0],\r\n        [width, height],\r\n      ])\r\n      .on('zoom', ({ transform }: { transform: ZoomTransform }) => setZoom(transform))\r\n\r\n    select(svg as Element).call(zoomBehavior.current)\r\n  }, [height, width, setZoom, svg, xScale, zoomBehavior, zoomLevels, zoomLevels.max, zoomLevels.min])\r\n\r\n  useEffect(() => {\r\n    // reset zoom to initial on zoomLevel change\r\n    zoomInitial()\r\n  }, [zoomInitial, zoomLevels])\r\n\r\n  return (\r\n    <Wrapper count={showResetButton ? 3 : 2}>\r\n      {showResetButton && (\r\n        <Button\r\n          onClick={() => {\r\n            resetBrush()\r\n            zoomReset()\r\n          }}\r\n          disabled={false}\r\n        >\r\n          <RefreshCcw size={16} />\r\n        </Button>\r\n      )}\r\n      <Button onClick={zoomIn} disabled={false}>\r\n        <ZoomIn size={16} />\r\n      </Button>\r\n      <Button onClick={zoomOut} disabled={false}>\r\n        <ZoomOut size={16} />\r\n      </Button>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import { max, scaleLinear, ZoomTransform } from 'd3'\r\nimport { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { Bound } from 'state/mint/v3/actions'\r\n\r\nimport { Area } from './Area'\r\nimport { AxisBottom } from './AxisBottom'\r\nimport { Brush } from './Brush'\r\nimport { Line } from './Line'\r\nimport { ChartEntry, LiquidityChartRangeInputProps } from './types'\r\nimport Zoom, { ZoomOverlay } from './Zoom'\r\n\r\nconst xAccessor = (d: ChartEntry) => d.price0\r\nconst yAccessor = (d: ChartEntry) => d.activeLiquidity\r\n\r\nexport function Chart({\r\n  id = 'liquidityChartRangeInput',\r\n  data: { series, current },\r\n  ticksAtLimit,\r\n  styles,\r\n  dimensions: { width, height },\r\n  margins,\r\n  interactive = true,\r\n  brushDomain,\r\n  brushLabels,\r\n  onBrushDomainChange,\r\n  zoomLevels,\r\n}: LiquidityChartRangeInputProps) {\r\n  const zoomRef = useRef<SVGRectElement | null>(null)\r\n\r\n  const [zoom, setZoom] = useState<ZoomTransform | null>(null)\r\n\r\n  const [innerHeight, innerWidth] = useMemo(\r\n    () => [height - margins.top - margins.bottom, width - margins.left - margins.right],\r\n    [width, height, margins]\r\n  )\r\n\r\n  const { xScale, yScale } = useMemo(() => {\r\n    const scales = {\r\n      xScale: scaleLinear()\r\n        .domain([current * zoomLevels.initialMin, current * zoomLevels.initialMax] as number[])\r\n        .range([0, innerWidth]),\r\n      yScale: scaleLinear()\r\n        .domain([0, max(series, yAccessor)] as number[])\r\n        .range([innerHeight, 0]),\r\n    }\r\n\r\n    if (zoom) {\r\n      const newXscale = zoom.rescaleX(scales.xScale)\r\n      scales.xScale.domain(newXscale.domain())\r\n    }\r\n\r\n    return scales\r\n  }, [current, zoomLevels.initialMin, zoomLevels.initialMax, innerWidth, series, innerHeight, zoom])\r\n\r\n  useEffect(() => {\r\n    // reset zoom as necessary\r\n    setZoom(null)\r\n  }, [zoomLevels])\r\n\r\n  useEffect(() => {\r\n    if (!brushDomain) {\r\n      onBrushDomainChange(xScale.domain() as [number, number], undefined)\r\n    }\r\n  }, [brushDomain, onBrushDomainChange, xScale])\r\n\r\n  return (\r\n    <>\r\n      <Zoom\r\n        svg={zoomRef.current}\r\n        xScale={xScale}\r\n        setZoom={setZoom}\r\n        width={innerWidth}\r\n        height={\r\n          // allow zooming inside the x-axis\r\n          height\r\n        }\r\n        resetBrush={() => {\r\n          onBrushDomainChange(\r\n            [current * zoomLevels.initialMin, current * zoomLevels.initialMax] as [number, number],\r\n            'reset'\r\n          )\r\n        }}\r\n        showResetButton={Boolean(ticksAtLimit[Bound.LOWER] || ticksAtLimit[Bound.UPPER])}\r\n        zoomLevels={zoomLevels}\r\n      />\r\n      <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${width} ${height}`} style={{ overflow: 'visible' }}>\r\n        <defs>\r\n          <clipPath id={`${id}-chart-clip`}>\r\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={height} />\r\n          </clipPath>\r\n\r\n          {brushDomain && (\r\n            // mask to highlight selected area\r\n            <mask id={`${id}-chart-area-mask`}>\r\n              <rect\r\n                fill=\"white\"\r\n                x={xScale(brushDomain[0])}\r\n                y=\"0\"\r\n                width={xScale(brushDomain[1]) - xScale(brushDomain[0])}\r\n                height={innerHeight}\r\n              />\r\n            </mask>\r\n          )}\r\n        </defs>\r\n\r\n        <g transform={`translate(${margins.left},${margins.top})`}>\r\n          <g clipPath={`url(#${id}-chart-clip)`}>\r\n            <Area series={series} xScale={xScale} yScale={yScale} xValue={xAccessor} yValue={yAccessor} />\r\n\r\n            {brushDomain && (\r\n              // duplicate area chart with mask for selected area\r\n              <g mask={`url(#${id}-chart-area-mask)`}>\r\n                <Area\r\n                  series={series}\r\n                  xScale={xScale}\r\n                  yScale={yScale}\r\n                  xValue={xAccessor}\r\n                  yValue={yAccessor}\r\n                  fill={styles.area.selection}\r\n                />\r\n              </g>\r\n            )}\r\n\r\n            <Line value={current} xScale={xScale} innerHeight={innerHeight} />\r\n\r\n            <AxisBottom xScale={xScale} innerHeight={innerHeight} />\r\n          </g>\r\n\r\n          <ZoomOverlay width={innerWidth} height={height} ref={zoomRef} />\r\n\r\n          <Brush\r\n            id={id}\r\n            xScale={xScale}\r\n            interactive={interactive}\r\n            brushLabelValue={brushLabels}\r\n            brushExtent={brushDomain ?? (xScale.domain() as [number, number])}\r\n            innerWidth={innerWidth}\r\n            innerHeight={innerHeight}\r\n            setBrushExtent={onBrushDomainChange}\r\n            westHandleColor={styles.brush.handle.west}\r\n            eastHandleColor={styles.brush.handle.east}\r\n          />\r\n        </g>\r\n      </svg>\r\n    </>\r\n  )\r\n}\r\n","import { Token } from '@uniswap/sdk-core'\r\nimport { tickToPrice } from '@uniswap/v3-sdk'\r\nimport { TickProcessed } from 'hooks/usePoolTickData'\r\nimport JSBI from 'jsbi'\r\n\r\nimport { Ticks } from '../graphql/thegraph/AllV3TicksQuery'\r\n\r\nconst PRICE_FIXED_DIGITS = 8\r\n\r\n// Computes the numSurroundingTicks above or below the active tick.\r\nexport default function computeSurroundingTicks(\r\n  token0: Token,\r\n  token1: Token,\r\n  activeTickProcessed: TickProcessed,\r\n  sortedTickData: Ticks,\r\n  pivot: number,\r\n  ascending: boolean\r\n): TickProcessed[] {\r\n  let previousTickProcessed: TickProcessed = {\r\n    ...activeTickProcessed,\r\n  }\r\n  // Iterate outwards (either up or down depending on direction) from the active tick,\r\n  // building active liquidity for every tick.\r\n  let processedTicks: TickProcessed[] = []\r\n  for (let i = pivot + (ascending ? 1 : -1); ascending ? i < sortedTickData.length : i >= 0; ascending ? i++ : i--) {\r\n    const tick = Number(sortedTickData[i].tick)\r\n    const currentTickProcessed: TickProcessed = {\r\n      liquidityActive: previousTickProcessed.liquidityActive,\r\n      tick,\r\n      liquidityNet: JSBI.BigInt(sortedTickData[i].liquidityNet),\r\n      price0: tickToPrice(token0, token1, tick).toFixed(PRICE_FIXED_DIGITS),\r\n    }\r\n\r\n    // Update the active liquidity.\r\n    // If we are iterating ascending and we found an initialized tick we immediately apply\r\n    // it to the current processed tick we are building.\r\n    // If we are iterating descending, we don't want to apply the net liquidity until the following tick.\r\n    if (ascending) {\r\n      currentTickProcessed.liquidityActive = JSBI.add(\r\n        previousTickProcessed.liquidityActive,\r\n        JSBI.BigInt(sortedTickData[i].liquidityNet)\r\n      )\r\n    } else if (!ascending && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\r\n      // We are iterating descending, so look at the previous tick and apply any net liquidity.\r\n      currentTickProcessed.liquidityActive = JSBI.subtract(\r\n        previousTickProcessed.liquidityActive,\r\n        previousTickProcessed.liquidityNet\r\n      )\r\n    }\r\n\r\n    processedTicks.push(currentTickProcessed)\r\n    previousTickProcessed = currentTickProcessed\r\n  }\r\n\r\n  if (!ascending) {\r\n    processedTicks = processedTicks.reverse()\r\n  }\r\n\r\n  return processedTicks\r\n}\r\n","import { ChainId, Currency, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\r\nimport { FeeAmount, nearestUsableTick, Pool, TICK_SPACINGS, tickToPrice } from '@uniswap/v3-sdk'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ZERO_ADDRESS } from 'constants/misc'\r\nimport { useAllV3TicksQuery } from 'graphql/thegraph/__generated__/types-and-hooks'\r\nimport { TickData, Ticks } from 'graphql/thegraph/AllV3TicksQuery'\r\nimport { apolloClient } from 'graphql/thegraph/apollo'\r\nimport JSBI from 'jsbi'\r\nimport { useSingleContractMultipleData } from 'lib/hooks/multicall'\r\nimport ms from 'ms'\r\nimport { useEffect, useMemo, useState } from 'react'\r\nimport computeSurroundingTicks from 'utils/computeSurroundingTicks'\r\n\r\nimport { useTickLens } from './useContract'\r\nimport { PoolState, usePool } from './usePools'\r\n\r\nconst PRICE_FIXED_DIGITS = 8\r\nconst CHAIN_IDS_MISSING_SUBGRAPH_DATA = [ChainId.ARBITRUM_ONE, ChainId.ARBITRUM_GOERLI]\r\n\r\n// Tick with fields parsed to JSBIs, and active liquidity computed.\r\nexport interface TickProcessed {\r\n  tick: number\r\n  liquidityActive: JSBI\r\n  liquidityNet: JSBI\r\n  price0: string\r\n}\r\n\r\nconst REFRESH_FREQUENCY = { blocksPerFetch: 2 }\r\n\r\nconst getActiveTick = (tickCurrent: number | undefined, feeAmount: FeeAmount | undefined) =>\r\n  tickCurrent && feeAmount ? Math.floor(tickCurrent / TICK_SPACINGS[feeAmount]) * TICK_SPACINGS[feeAmount] : undefined\r\n\r\nconst bitmapIndex = (tick: number, tickSpacing: number) => {\r\n  return Math.floor(tick / tickSpacing / 256)\r\n}\r\n\r\nfunction useTicksFromTickLens(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n  feeAmount: FeeAmount | undefined,\r\n  numSurroundingTicks: number | undefined = 125\r\n) {\r\n  const [tickDataLatestSynced, setTickDataLatestSynced] = useState<TickData[]>([])\r\n\r\n  const [poolState, pool] = usePool(currencyA, currencyB, feeAmount)\r\n\r\n  const tickSpacing = feeAmount && TICK_SPACINGS[feeAmount]\r\n\r\n  // Find nearest valid tick for pool in case tick is not initialized.\r\n  const activeTick = pool?.tickCurrent && tickSpacing ? nearestUsableTick(pool?.tickCurrent, tickSpacing) : undefined\r\n\r\n  const { chainId } = useWeb3React()\r\n\r\n  const poolAddress =\r\n    currencyA && currencyB && feeAmount && poolState === PoolState.EXISTS\r\n      ? Pool.getAddress(\r\n          currencyA?.wrapped,\r\n          currencyB?.wrapped,\r\n          feeAmount,\r\n          undefined,\r\n          chainId ? V3_CORE_FACTORY_ADDRESSES[chainId] : undefined\r\n        )\r\n      : undefined\r\n\r\n  // it is also possible to grab all tick data but it is extremely slow\r\n  // bitmapIndex(nearestUsableTick(TickMath.MIN_TICK, tickSpacing), tickSpacing)\r\n  const minIndex = useMemo(\r\n    () =>\r\n      tickSpacing && activeTick ? bitmapIndex(activeTick - numSurroundingTicks * tickSpacing, tickSpacing) : undefined,\r\n    [tickSpacing, activeTick, numSurroundingTicks]\r\n  )\r\n\r\n  const maxIndex = useMemo(\r\n    () =>\r\n      tickSpacing && activeTick ? bitmapIndex(activeTick + numSurroundingTicks * tickSpacing, tickSpacing) : undefined,\r\n    [tickSpacing, activeTick, numSurroundingTicks]\r\n  )\r\n\r\n  const tickLensArgs: [string, number][] = useMemo(\r\n    () =>\r\n      maxIndex && minIndex && poolAddress && poolAddress !== ZERO_ADDRESS\r\n        ? new Array(maxIndex - minIndex + 1)\r\n            .fill(0)\r\n            .map((_, i) => i + minIndex)\r\n            .map((wordIndex) => [poolAddress, wordIndex])\r\n        : [],\r\n    [minIndex, maxIndex, poolAddress]\r\n  )\r\n\r\n  const tickLens = useTickLens()\r\n  const callStates = useSingleContractMultipleData(\r\n    tickLensArgs.length > 0 ? tickLens : undefined,\r\n    'getPopulatedTicksInWord',\r\n    tickLensArgs,\r\n    REFRESH_FREQUENCY\r\n  )\r\n\r\n  const isError = useMemo(() => callStates.some(({ error }) => error), [callStates])\r\n  const isLoading = useMemo(() => callStates.some(({ loading }) => loading), [callStates])\r\n  const IsSyncing = useMemo(() => callStates.some(({ syncing }) => syncing), [callStates])\r\n  const isValid = useMemo(() => callStates.some(({ valid }) => valid), [callStates])\r\n\r\n  const tickData: TickData[] = useMemo(\r\n    () =>\r\n      callStates\r\n        .map(({ result }) => result?.populatedTicks)\r\n        .reduce(\r\n          (accumulator, current) => [\r\n            ...accumulator,\r\n            ...(current?.map((tickData: TickData) => {\r\n              return {\r\n                tick: tickData.tick,\r\n                liquidityNet: JSBI.BigInt(tickData.liquidityNet),\r\n              }\r\n            }) ?? []),\r\n          ],\r\n          []\r\n        ),\r\n    [callStates]\r\n  )\r\n\r\n  // reset on input change\r\n  useEffect(() => {\r\n    setTickDataLatestSynced([])\r\n  }, [currencyA, currencyB, feeAmount])\r\n\r\n  // return the latest synced tickData even if we are still loading the newest data\r\n  useEffect(() => {\r\n    if (!IsSyncing && !isLoading && !isError && isValid) {\r\n      setTickDataLatestSynced(tickData.sort((a, b) => a.tick - b.tick))\r\n    }\r\n  }, [isError, isLoading, IsSyncing, tickData, isValid])\r\n\r\n  return useMemo(\r\n    () => ({ isLoading, IsSyncing, isError, isValid, tickData: tickDataLatestSynced }),\r\n    [isLoading, IsSyncing, isError, isValid, tickDataLatestSynced]\r\n  )\r\n}\r\n\r\nfunction useTicksFromSubgraph(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n  feeAmount: FeeAmount | undefined,\r\n  skip = 0\r\n) {\r\n  const { chainId } = useWeb3React()\r\n  const poolAddress =\r\n    currencyA && currencyB && feeAmount\r\n      ? Pool.getAddress(\r\n          currencyA?.wrapped,\r\n          currencyB?.wrapped,\r\n          feeAmount,\r\n          undefined,\r\n          chainId ? V3_CORE_FACTORY_ADDRESSES[chainId] : undefined\r\n        )\r\n      : undefined\r\n\r\n  return useAllV3TicksQuery({\r\n    variables: { poolAddress: poolAddress?.toLowerCase(), skip },\r\n    skip: !poolAddress,\r\n    pollInterval: ms(`30s`),\r\n    client: apolloClient,\r\n  })\r\n}\r\n\r\nconst MAX_THE_GRAPH_TICK_FETCH_VALUE = 1000\r\n// Fetches all ticks for a given pool\r\nfunction useAllV3Ticks(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n  feeAmount: FeeAmount | undefined\r\n): {\r\n  isLoading: boolean\r\n  error: unknown\r\n  ticks?: TickData[]\r\n} {\r\n  const useSubgraph = currencyA ? !CHAIN_IDS_MISSING_SUBGRAPH_DATA.includes(currencyA.chainId) : true\r\n\r\n  const tickLensTickData = useTicksFromTickLens(!useSubgraph ? currencyA : undefined, currencyB, feeAmount)\r\n\r\n  const [skipNumber, setSkipNumber] = useState(0)\r\n  const [subgraphTickData, setSubgraphTickData] = useState<Ticks>([])\r\n  const {\r\n    data,\r\n    error,\r\n    loading: isLoading,\r\n  } = useTicksFromSubgraph(useSubgraph ? currencyA : undefined, currencyB, feeAmount, skipNumber)\r\n\r\n  useEffect(() => {\r\n    if (data?.ticks.length) {\r\n      setSubgraphTickData((tickData) => [...tickData, ...data.ticks])\r\n      if (data.ticks.length === MAX_THE_GRAPH_TICK_FETCH_VALUE) {\r\n        setSkipNumber((skipNumber) => skipNumber + MAX_THE_GRAPH_TICK_FETCH_VALUE)\r\n      }\r\n    }\r\n  }, [data?.ticks])\r\n\r\n  return {\r\n    isLoading: useSubgraph\r\n      ? isLoading || data?.ticks.length === MAX_THE_GRAPH_TICK_FETCH_VALUE\r\n      : tickLensTickData.isLoading,\r\n    error: useSubgraph ? error : tickLensTickData.isError,\r\n    ticks: useSubgraph ? subgraphTickData : tickLensTickData.tickData,\r\n  }\r\n}\r\n\r\nexport function usePoolActiveLiquidity(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n  feeAmount: FeeAmount | undefined\r\n): {\r\n  isLoading: boolean\r\n  error: any\r\n  activeTick?: number\r\n  data?: TickProcessed[]\r\n} {\r\n  const pool = usePool(currencyA, currencyB, feeAmount)\r\n\r\n  // Find nearest valid tick for pool in case tick is not initialized.\r\n  const activeTick = useMemo(() => getActiveTick(pool[1]?.tickCurrent, feeAmount), [pool, feeAmount])\r\n\r\n  const { isLoading, error, ticks } = useAllV3Ticks(currencyA, currencyB, feeAmount)\r\n\r\n  return useMemo(() => {\r\n    if (\r\n      !currencyA ||\r\n      !currencyB ||\r\n      activeTick === undefined ||\r\n      pool[0] !== PoolState.EXISTS ||\r\n      !ticks ||\r\n      ticks.length === 0 ||\r\n      isLoading\r\n    ) {\r\n      return {\r\n        isLoading: isLoading || pool[0] === PoolState.LOADING,\r\n        error,\r\n        activeTick,\r\n        data: undefined,\r\n      }\r\n    }\r\n\r\n    const token0 = currencyA?.wrapped\r\n    const token1 = currencyB?.wrapped\r\n\r\n    // find where the active tick would be to partition the array\r\n    // if the active tick is initialized, the pivot will be an element\r\n    // if not, take the previous tick as pivot\r\n    const pivot = ticks.findIndex(({ tick }) => tick > activeTick) - 1\r\n\r\n    if (pivot < 0) {\r\n      // consider setting a local error\r\n      console.error('TickData pivot not found')\r\n      return {\r\n        isLoading,\r\n        error,\r\n        activeTick,\r\n        data: undefined,\r\n      }\r\n    }\r\n\r\n    const activeTickProcessed: TickProcessed = {\r\n      liquidityActive: JSBI.BigInt(pool[1]?.liquidity ?? 0),\r\n      tick: activeTick,\r\n      liquidityNet: Number(ticks[pivot].tick) === activeTick ? JSBI.BigInt(ticks[pivot].liquidityNet) : JSBI.BigInt(0),\r\n      price0: tickToPrice(token0, token1, activeTick).toFixed(PRICE_FIXED_DIGITS),\r\n    }\r\n\r\n    const subsequentTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, true)\r\n\r\n    const previousTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, false)\r\n\r\n    const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks)\r\n\r\n    return {\r\n      isLoading,\r\n      error,\r\n      activeTick,\r\n      data: ticksProcessed,\r\n    }\r\n  }, [currencyA, currencyB, activeTick, pool, ticks, isLoading, error])\r\n}\r\n","import { Currency } from '@uniswap/sdk-core'\r\nimport { FeeAmount } from '@uniswap/v3-sdk'\r\nimport { TickProcessed, usePoolActiveLiquidity } from 'hooks/usePoolTickData'\r\nimport { useCallback, useMemo } from 'react'\r\n\r\nimport { ChartEntry } from './types'\r\n\r\nexport function useDensityChartData({\r\n  currencyA,\r\n  currencyB,\r\n  feeAmount,\r\n}: {\r\n  currencyA?: Currency\r\n  currencyB?: Currency\r\n  feeAmount?: FeeAmount\r\n}) {\r\n  const { isLoading, error, data } = usePoolActiveLiquidity(currencyA, currencyB, feeAmount)\r\n\r\n  const formatData = useCallback(() => {\r\n    if (!data?.length) {\r\n      return undefined\r\n    }\r\n\r\n    const newData: ChartEntry[] = []\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      const t: TickProcessed = data[i]\r\n\r\n      const chartEntry = {\r\n        activeLiquidity: parseFloat(t.liquidityActive.toString()),\r\n        price0: parseFloat(t.price0),\r\n      }\r\n\r\n      if (chartEntry.activeLiquidity > 0) {\r\n        newData.push(chartEntry)\r\n      }\r\n    }\r\n\r\n    return newData\r\n  }, [data])\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      isLoading,\r\n      error,\r\n      formattedData: !isLoading ? formatData() : undefined,\r\n    }\r\n  }, [isLoading, error, formatData])\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Currency, Price, Token } from '@uniswap/sdk-core'\r\nimport { FeeAmount } from '@uniswap/v3-sdk'\r\nimport { AutoColumn, ColumnCenter } from 'components/Column'\r\nimport Loader from 'components/Icons/LoadingSpinner'\r\nimport { useColor } from 'hooks/useColor'\r\nimport { saturate } from 'polished'\r\nimport { ReactNode, useCallback, useMemo } from 'react'\r\nimport { BarChart2, CloudOff, Inbox } from 'react-feather'\r\nimport { batch } from 'react-redux'\r\nimport { Bound } from 'state/mint/v3/actions'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { useFormatter } from 'utils/formatNumbers'\r\n\r\nimport { Chart } from './Chart'\r\nimport { useDensityChartData } from './hooks'\r\nimport { ZoomLevels } from './types'\r\n\r\nconst ZOOM_LEVELS: Record<FeeAmount, ZoomLevels> = {\r\n  [FeeAmount.LOWEST]: {\r\n    initialMin: 0.999,\r\n    initialMax: 1.001,\r\n    min: 0.00001,\r\n    max: 1.5,\r\n  },\r\n  [FeeAmount.LOW]: {\r\n    initialMin: 0.999,\r\n    initialMax: 1.001,\r\n    min: 0.00001,\r\n    max: 1.5,\r\n  },\r\n  [FeeAmount.MEDIUM]: {\r\n    initialMin: 0.5,\r\n    initialMax: 2,\r\n    min: 0.00001,\r\n    max: 20,\r\n  },\r\n  [FeeAmount.HIGH]: {\r\n    initialMin: 0.5,\r\n    initialMax: 2,\r\n    min: 0.00001,\r\n    max: 20,\r\n  },\r\n}\r\n\r\nconst ChartWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-height: 200px;\r\n  justify-content: center;\r\n  align-content: center;\r\n`\r\n\r\nfunction InfoBox({ message, icon }: { message?: ReactNode; icon: ReactNode }) {\r\n  return (\r\n    <ColumnCenter style={{ height: '100%', justifyContent: 'center' }}>\r\n      {icon}\r\n      {message && (\r\n        <ThemedText.DeprecatedMediumHeader padding={10} marginTop=\"20px\" textAlign=\"center\">\r\n          {message}\r\n        </ThemedText.DeprecatedMediumHeader>\r\n      )}\r\n    </ColumnCenter>\r\n  )\r\n}\r\n\r\nexport default function LiquidityChartRangeInput({\r\n  currencyA,\r\n  currencyB,\r\n  feeAmount,\r\n  ticksAtLimit,\r\n  price,\r\n  priceLower,\r\n  priceUpper,\r\n  onLeftRangeInput,\r\n  onRightRangeInput,\r\n  interactive,\r\n}: {\r\n  currencyA?: Currency\r\n  currencyB?: Currency\r\n  feeAmount?: FeeAmount\r\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\r\n  price?: number\r\n  priceLower?: Price<Token, Token>\r\n  priceUpper?: Price<Token, Token>\r\n  onLeftRangeInput: (typedValue: string) => void\r\n  onRightRangeInput: (typedValue: string) => void\r\n  interactive: boolean\r\n}) {\r\n  const theme = useTheme()\r\n\r\n  const tokenAColor = useColor(currencyA?.wrapped)\r\n  const tokenBColor = useColor(currencyB?.wrapped)\r\n\r\n  const isSorted = currencyA && currencyB && currencyA?.wrapped.sortsBefore(currencyB?.wrapped)\r\n\r\n  const { isLoading, error, formattedData } = useDensityChartData({\r\n    currencyA,\r\n    currencyB,\r\n    feeAmount,\r\n  })\r\n\r\n  const onBrushDomainChangeEnded = useCallback(\r\n    (domain: [number, number], mode: string | undefined) => {\r\n      let leftRangeValue = Number(domain[0])\r\n      const rightRangeValue = Number(domain[1])\r\n\r\n      if (leftRangeValue <= 0) {\r\n        leftRangeValue = 1 / 10 ** 6\r\n      }\r\n\r\n      batch(() => {\r\n        // simulate user input for auto-formatting and other validations\r\n        if (\r\n          (!ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] || mode === 'handle' || mode === 'reset') &&\r\n          leftRangeValue > 0\r\n        ) {\r\n          onLeftRangeInput(leftRangeValue.toFixed(6))\r\n        }\r\n\r\n        if ((!ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] || mode === 'reset') && rightRangeValue > 0) {\r\n          // todo: remove this check. Upper bound for large numbers\r\n          // sometimes fails to parse to tick.\r\n          if (rightRangeValue < 1e35) {\r\n            onRightRangeInput(rightRangeValue.toFixed(6))\r\n          }\r\n        }\r\n      })\r\n    },\r\n    [isSorted, onLeftRangeInput, onRightRangeInput, ticksAtLimit]\r\n  )\r\n\r\n  interactive = interactive && Boolean(formattedData?.length)\r\n\r\n  const brushDomain: [number, number] | undefined = useMemo(() => {\r\n    const leftPrice = isSorted ? priceLower : priceUpper?.invert()\r\n    const rightPrice = isSorted ? priceUpper : priceLower?.invert()\r\n\r\n    return leftPrice && rightPrice\r\n      ? [parseFloat(leftPrice?.toSignificant(6)), parseFloat(rightPrice?.toSignificant(6))]\r\n      : undefined\r\n  }, [isSorted, priceLower, priceUpper])\r\n\r\n  const { formatDelta } = useFormatter()\r\n  const brushLabelValue = useCallback(\r\n    (d: 'w' | 'e', x: number) => {\r\n      if (!price) return ''\r\n\r\n      if (d === 'w' && ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]) return '0'\r\n      if (d === 'e' && ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]) return '∞'\r\n\r\n      const percent = (x < price ? -1 : 1) * ((Math.max(x, price) - Math.min(x, price)) / price) * 100\r\n\r\n      return price ? `${(Math.sign(percent) < 0 ? '-' : '') + formatDelta(percent)}` : ''\r\n    },\r\n    [formatDelta, isSorted, price, ticksAtLimit]\r\n  )\r\n\r\n  const isUninitialized = !currencyA || !currencyB || (formattedData === undefined && !isLoading)\r\n\r\n  return (\r\n    <AutoColumn gap=\"md\" style={{ minHeight: '200px' }}>\r\n      {isUninitialized ? (\r\n        <InfoBox\r\n          message={<Trans>Your position will appear here.</Trans>}\r\n          icon={<Inbox size={56} stroke={theme.neutral1} />}\r\n        />\r\n      ) : isLoading ? (\r\n        <InfoBox icon={<Loader size=\"40px\" stroke={theme.neutral2} />} />\r\n      ) : error ? (\r\n        <InfoBox\r\n          message={<Trans>Liquidity data not available.</Trans>}\r\n          icon={<CloudOff size={56} stroke={theme.neutral2} />}\r\n        />\r\n      ) : !formattedData || formattedData.length === 0 || !price ? (\r\n        <InfoBox\r\n          message={<Trans>There is no liquidity data.</Trans>}\r\n          icon={<BarChart2 size={56} stroke={theme.neutral2} />}\r\n        />\r\n      ) : (\r\n        <ChartWrapper>\r\n          <Chart\r\n            data={{ series: formattedData, current: price }}\r\n            dimensions={{ width: 560, height: 200 }}\r\n            margins={{ top: 10, right: 2, bottom: 20, left: 0 }}\r\n            styles={{\r\n              area: {\r\n                selection: theme.accent1,\r\n              },\r\n              brush: {\r\n                handle: {\r\n                  west: saturate(0.1, tokenAColor) ?? theme.critical,\r\n                  east: saturate(0.1, tokenBColor) ?? theme.accent1,\r\n                },\r\n              },\r\n            }}\r\n            interactive={interactive}\r\n            brushLabels={brushLabelValue}\r\n            brushDomain={brushDomain}\r\n            onBrushDomainChange={onBrushDomainChangeEnded}\r\n            zoomLevels={ZOOM_LEVELS[feeAmount ?? FeeAmount.MEDIUM]}\r\n            ticksAtLimit={ticksAtLimit}\r\n          />\r\n        </ChartWrapper>\r\n      )}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Currency } from '@uniswap/sdk-core'\r\nimport { Position } from '@uniswap/v3-sdk'\r\nimport RangeBadge from 'components/Badge/RangeBadge'\r\nimport { LightCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport { Break } from 'components/earn/styled'\r\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\r\nimport RateToggle from 'components/RateToggle'\r\nimport { RowBetween, RowFixed } from 'components/Row'\r\nimport { BIPS_BASE } from 'constants/misc'\r\nimport JSBI from 'jsbi'\r\nimport { ReactNode, useCallback, useState } from 'react'\r\nimport { Bound } from 'state/mint/v3/actions'\r\nimport { useTheme } from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\r\nimport { unwrappedToken } from 'utils/unwrappedToken'\r\n\r\nexport const PositionPreview = ({\r\n  position,\r\n  title,\r\n  inRange,\r\n  baseCurrencyDefault,\r\n  ticksAtLimit,\r\n}: {\r\n  position: Position\r\n  title?: ReactNode\r\n  inRange: boolean\r\n  baseCurrencyDefault?: Currency\r\n  ticksAtLimit: { [bound: string]: boolean | undefined }\r\n}) => {\r\n  const theme = useTheme()\r\n  const { formatCurrencyAmount, formatDelta, formatPrice, formatTickPrice } = useFormatter()\r\n\r\n  const currency0 = unwrappedToken(position.pool.token0)\r\n  const currency1 = unwrappedToken(position.pool.token1)\r\n\r\n  // track which currency should be base\r\n  const [baseCurrency, setBaseCurrency] = useState(\r\n    baseCurrencyDefault\r\n      ? baseCurrencyDefault === currency0\r\n        ? currency0\r\n        : baseCurrencyDefault === currency1\r\n        ? currency1\r\n        : currency0\r\n      : currency0\r\n  )\r\n\r\n  const sorted = baseCurrency === currency0\r\n  const quoteCurrency = sorted ? currency1 : currency0\r\n\r\n  const price = sorted ? position.pool.priceOf(position.pool.token0) : position.pool.priceOf(position.pool.token1)\r\n\r\n  const priceLower = sorted ? position.token0PriceLower : position.token0PriceUpper.invert()\r\n  const priceUpper = sorted ? position.token0PriceUpper : position.token0PriceLower.invert()\r\n\r\n  const handleRateChange = useCallback(() => {\r\n    setBaseCurrency(quoteCurrency)\r\n  }, [quoteCurrency])\r\n\r\n  const removed = position?.liquidity && JSBI.equal(position?.liquidity, JSBI.BigInt(0))\r\n\r\n  return (\r\n    <AutoColumn gap=\"md\" style={{ marginTop: '0.5rem' }}>\r\n      <RowBetween style={{ marginBottom: '0.5rem' }}>\r\n        <RowFixed>\r\n          <DoubleCurrencyLogo\r\n            currency0={currency0 ?? undefined}\r\n            currency1={currency1 ?? undefined}\r\n            size={24}\r\n            margin={true}\r\n          />\r\n          <ThemedText.DeprecatedLabel ml=\"10px\" fontSize=\"24px\">\r\n            {currency0?.symbol} / {currency1?.symbol}\r\n          </ThemedText.DeprecatedLabel>\r\n        </RowFixed>\r\n        <RangeBadge removed={removed} inRange={inRange} />\r\n      </RowBetween>\r\n\r\n      <LightCard>\r\n        <AutoColumn gap=\"md\">\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <CurrencyLogo currency={currency0} />\r\n              <ThemedText.DeprecatedLabel ml=\"8px\">{currency0?.symbol}</ThemedText.DeprecatedLabel>\r\n            </RowFixed>\r\n            <RowFixed>\r\n              <ThemedText.DeprecatedLabel mr=\"8px\">\r\n                {formatCurrencyAmount({ amount: position.amount0 })}\r\n              </ThemedText.DeprecatedLabel>\r\n            </RowFixed>\r\n          </RowBetween>\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <CurrencyLogo currency={currency1} />\r\n              <ThemedText.DeprecatedLabel ml=\"8px\">{currency1?.symbol}</ThemedText.DeprecatedLabel>\r\n            </RowFixed>\r\n            <RowFixed>\r\n              <ThemedText.DeprecatedLabel mr=\"8px\">\r\n                {formatCurrencyAmount({ amount: position.amount1 })}\r\n              </ThemedText.DeprecatedLabel>\r\n            </RowFixed>\r\n          </RowBetween>\r\n          <Break />\r\n          <RowBetween>\r\n            <ThemedText.DeprecatedLabel>\r\n              <Trans>Fee tier</Trans>\r\n            </ThemedText.DeprecatedLabel>\r\n            <ThemedText.DeprecatedLabel>\r\n              <Trans>{formatDelta(position?.pool?.fee / BIPS_BASE)}</Trans>\r\n            </ThemedText.DeprecatedLabel>\r\n          </RowBetween>\r\n        </AutoColumn>\r\n      </LightCard>\r\n\r\n      <AutoColumn gap=\"md\">\r\n        <RowBetween>\r\n          {title ? <ThemedText.DeprecatedMain>{title}</ThemedText.DeprecatedMain> : <div />}\r\n          <RateToggle\r\n            currencyA={sorted ? currency0 : currency1}\r\n            currencyB={sorted ? currency1 : currency0}\r\n            handleRateToggle={handleRateChange}\r\n          />\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <LightCard width=\"48%\" padding=\"8px\">\r\n            <AutoColumn gap=\"4px\" justify=\"center\">\r\n              <ThemedText.DeprecatedMain fontSize=\"12px\">\r\n                <Trans>Min price</Trans>\r\n              </ThemedText.DeprecatedMain>\r\n              <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\r\n                {formatTickPrice({\r\n                  price: priceLower,\r\n                  atLimit: ticksAtLimit,\r\n                  direction: Bound.LOWER,\r\n                })}\r\n              </ThemedText.DeprecatedMediumHeader>\r\n              <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\r\n                <Trans>\r\n                  {quoteCurrency.symbol} per {baseCurrency.symbol}\r\n                </Trans>\r\n              </ThemedText.DeprecatedMain>\r\n              <ThemedText.DeprecatedSmall textAlign=\"center\" color={theme.neutral3} style={{ marginTop: '4px' }}>\r\n                <Trans>Your position will be 100% composed of {baseCurrency?.symbol} at this price</Trans>\r\n              </ThemedText.DeprecatedSmall>\r\n            </AutoColumn>\r\n          </LightCard>\r\n\r\n          <LightCard width=\"48%\" padding=\"8px\">\r\n            <AutoColumn gap=\"4px\" justify=\"center\">\r\n              <ThemedText.DeprecatedMain fontSize=\"12px\">\r\n                <Trans>Max price</Trans>\r\n              </ThemedText.DeprecatedMain>\r\n              <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\r\n                {formatTickPrice({\r\n                  price: priceUpper,\r\n                  atLimit: ticksAtLimit,\r\n                  direction: Bound.UPPER,\r\n                })}\r\n              </ThemedText.DeprecatedMediumHeader>\r\n              <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\r\n                <Trans>\r\n                  {quoteCurrency.symbol} per {baseCurrency.symbol}\r\n                </Trans>\r\n              </ThemedText.DeprecatedMain>\r\n              <ThemedText.DeprecatedSmall textAlign=\"center\" color={theme.neutral3} style={{ marginTop: '4px' }}>\r\n                <Trans>Your position will be 100% composed of {quoteCurrency?.symbol} at this price</Trans>\r\n              </ThemedText.DeprecatedSmall>\r\n            </AutoColumn>\r\n          </LightCard>\r\n        </RowBetween>\r\n        <LightCard padding=\"12px \">\r\n          <AutoColumn gap=\"4px\" justify=\"center\">\r\n            <ThemedText.DeprecatedMain fontSize=\"12px\">\r\n              <Trans>Current price</Trans>\r\n            </ThemedText.DeprecatedMain>\r\n            <ThemedText.DeprecatedMediumHeader>{`${formatPrice({\r\n              price,\r\n              type: NumberType.TokenTx,\r\n            })} `}</ThemedText.DeprecatedMediumHeader>\r\n            <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\r\n              <Trans>\r\n                {quoteCurrency.symbol} per {baseCurrency.symbol}\r\n              </Trans>\r\n            </ThemedText.DeprecatedMain>\r\n          </AutoColumn>\r\n        </LightCard>\r\n      </AutoColumn>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { ButtonOutlined } from 'components/Button'\r\nimport { AutoRow } from 'components/Row'\r\nimport styled from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\n\r\nconst Button = styled(ButtonOutlined).attrs(() => ({\r\n  padding: '6px',\r\n  $borderRadius: '8px',\r\n}))`\r\n  color: ${({ theme }) => theme.neutral1};\r\n  flex: 1;\r\n`\r\n\r\ninterface PresetsButtonsProps {\r\n  onSetFullRange: () => void\r\n}\r\n\r\nexport default function PresetsButtons({ onSetFullRange }: PresetsButtonsProps) {\r\n  return (\r\n    <AutoRow gap=\"4px\" width=\"auto\">\r\n      <Button data-testid=\"set-full-range\" onClick={onSetFullRange}>\r\n        <ThemedText.DeprecatedBody fontSize={12}>\r\n          <Trans>Full range</Trans>\r\n        </ThemedText.DeprecatedBody>\r\n      </Button>\r\n    </AutoRow>\r\n  )\r\n}\r\n","import { Interface } from '@ethersproject/abi'\r\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\r\nimport { toHex } from '@uniswap/v3-sdk'\r\n\r\nimport { Erc20Interface } from '../abis/types/Erc20'\r\n\r\nconst ERC20_INTERFACE = new Interface([\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { name: '_spender', type: 'address' },\r\n      { name: '_value', type: 'uint256' },\r\n    ],\r\n    name: 'approve',\r\n    outputs: [{ name: '', type: 'bool' }],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n]) as Erc20Interface\r\n\r\nexport default function approveAmountCalldata(\r\n  amount: CurrencyAmount<Currency>,\r\n  spender: string\r\n): { to: string; data: string; value: '0x0' } {\r\n  if (!amount.currency.isToken) throw new Error('Must call with an amount of token')\r\n  const approveData = ERC20_INTERFACE.encodeFunctionData('approve', [spender, toHex(amount.quotient)])\r\n  return {\r\n    to: amount.currency.address,\r\n    data: approveData,\r\n    value: '0x0',\r\n  }\r\n}\r\n","import { Currency, CurrencyAmount, Price } from '@uniswap/sdk-core'\r\nimport { Position } from '@uniswap/v3-sdk'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { PositionPreview } from 'components/PositionPreview'\r\nimport styled from 'styled-components'\r\n\r\nimport { Bound, Field } from '../../state/mint/v3/actions'\r\n\r\nconst Wrapper = styled.div`\r\n  padding-top: 12px;\r\n`\r\n\r\nexport function Review({\r\n  position,\r\n  outOfRange,\r\n  ticksAtLimit,\r\n}: {\r\n  position?: Position\r\n  existingPosition?: Position\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\r\n  priceLower?: Price<Currency, Currency>\r\n  priceUpper?: Price<Currency, Currency>\r\n  outOfRange: boolean\r\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"lg\">\r\n        {position ? (\r\n          <PositionPreview\r\n            position={position}\r\n            inRange={!outOfRange}\r\n            ticksAtLimit={ticksAtLimit}\r\n            title=\"Selected Range\"\r\n          />\r\n        ) : null}\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport type { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trans } from '@lingui/macro'\r\nimport { BrowserEvent, InterfaceElementName, InterfaceEventName, LiquidityEventName } from '@uniswap/analytics-events'\r\nimport { Currency, CurrencyAmount, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES, Percent } from '@uniswap/sdk-core'\r\nimport { FeeAmount, NonfungiblePositionManager } from '@uniswap/v3-sdk'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { sendAnalyticsEvent, TraceEvent, useTrace } from 'analytics'\r\nimport { useToggleAccountDrawer } from 'components/AccountDrawer'\r\nimport OwnershipWarning from 'components/addLiquidity/OwnershipWarning'\r\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\r\nimport { isSupportedChain } from 'constants/chains'\r\nimport usePrevious from 'hooks/usePrevious'\r\nimport { useSingleCallResult } from 'lib/hooks/multicall'\r\nimport { BodyWrapper } from 'pages/AppBody'\r\nimport { PositionPageUnsupportedContent } from 'pages/Pool/PositionPage'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom'\r\nimport { Text } from 'rebass'\r\nimport {\r\n  useRangeHopCallbacks,\r\n  useV3DerivedMintInfo,\r\n  useV3MintActionHandlers,\r\n  useV3MintState,\r\n} from 'state/mint/v3/hooks'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { addressesAreEquivalent } from 'utils/addressesAreEquivalent'\r\nimport { WrongChainError } from 'utils/errors'\r\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\r\n\r\nimport { ButtonError, ButtonLight, ButtonPrimary, ButtonText } from '../../components/Button'\r\nimport { BlueCard, OutlineCard, YellowCard } from '../../components/Card'\r\nimport { AutoColumn } from '../../components/Column'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport FeeSelector from '../../components/FeeSelector'\r\nimport HoverInlineText from '../../components/HoverInlineText'\r\nimport LiquidityChartRangeInput from '../../components/LiquidityChartRangeInput'\r\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\r\nimport { PositionPreview } from '../../components/PositionPreview'\r\nimport RangeSelector from '../../components/RangeSelector'\r\nimport PresetsButtons from '../../components/RangeSelector/PresetsButtons'\r\nimport RateToggle from '../../components/RateToggle'\r\nimport Row, { RowBetween, RowFixed } from '../../components/Row'\r\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport { ZERO_PERCENT } from '../../constants/misc'\r\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\r\nimport { useArgentWalletContract } from '../../hooks/useArgentWalletContract'\r\nimport { useV3NFTPositionManagerContract } from '../../hooks/useContract'\r\nimport { useDerivedPositionInfo } from '../../hooks/useDerivedPositionInfo'\r\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\r\nimport { useStablecoinValue } from '../../hooks/useStablecoinPrice'\r\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\r\nimport { useV3PositionFromTokenId } from '../../hooks/useV3Positions'\r\nimport { Bound, Field } from '../../state/mint/v3/actions'\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { TransactionInfo, TransactionType } from '../../state/transactions/types'\r\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\r\nimport approveAmountCalldata from '../../utils/approveAmountCalldata'\r\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { Dots } from '../Pool/styled'\r\nimport { Review } from './Review'\r\nimport { DynamicSection, MediumOnly, ResponsiveTwoColumns, ScrollablePage, StyledInput, Wrapper } from './styled'\r\n\r\nconst DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\r\n\r\nconst StyledBodyWrapper = styled(BodyWrapper)<{ $hasExistingPosition: boolean }>`\r\n  padding: ${({ $hasExistingPosition }) => ($hasExistingPosition ? '10px' : 0)};\r\n  max-width: 640px;\r\n`\r\n\r\nexport default function AddLiquidityWrapper() {\r\n  const { chainId } = useWeb3React()\r\n  if (isSupportedChain(chainId)) {\r\n    return <AddLiquidity />\r\n  } else {\r\n    return <PositionPageUnsupportedContent />\r\n  }\r\n}\r\n\r\nfunction AddLiquidity() {\r\n  const navigate = useNavigate()\r\n  const {\r\n    currencyIdA,\r\n    currencyIdB,\r\n    feeAmount: feeAmountFromUrl,\r\n    tokenId,\r\n  } = useParams<{\r\n    currencyIdA?: string\r\n    currencyIdB?: string\r\n    feeAmount?: string\r\n    tokenId?: string\r\n  }>()\r\n  const { account, chainId, provider } = useWeb3React()\r\n  const theme = useTheme()\r\n  const trace = useTrace()\r\n\r\n  const toggleWalletDrawer = useToggleAccountDrawer() // toggle wallet when disconnected\r\n  const addTransaction = useTransactionAdder()\r\n  const positionManager = useV3NFTPositionManagerContract()\r\n\r\n  // check for existing position if tokenId in url\r\n  const { position: existingPositionDetails, loading: positionLoading } = useV3PositionFromTokenId(\r\n    tokenId ? BigNumber.from(tokenId) : undefined\r\n  )\r\n  const hasExistingPosition = !!existingPositionDetails && !positionLoading\r\n  const { position: existingPosition } = useDerivedPositionInfo(existingPositionDetails)\r\n\r\n  // fee selection from url\r\n  const feeAmount: FeeAmount | undefined =\r\n    feeAmountFromUrl && Object.values(FeeAmount).includes(parseFloat(feeAmountFromUrl))\r\n      ? parseFloat(feeAmountFromUrl)\r\n      : undefined\r\n\r\n  const baseCurrency = useCurrency(currencyIdA)\r\n  const currencyB = useCurrency(currencyIdB)\r\n  // prevent an error if they input ETH/WETH\r\n  const quoteCurrency =\r\n    baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? undefined : currencyB\r\n\r\n  // mint state\r\n  const { independentField, typedValue, startPriceTypedValue } = useV3MintState()\r\n\r\n  const {\r\n    pool,\r\n    ticks,\r\n    dependentField,\r\n    price,\r\n    pricesAtTicks,\r\n    pricesAtLimit,\r\n    parsedAmounts,\r\n    currencyBalances,\r\n    position,\r\n    noLiquidity,\r\n    currencies,\r\n    errorMessage,\r\n    invalidPool,\r\n    invalidRange,\r\n    outOfRange,\r\n    depositADisabled,\r\n    depositBDisabled,\r\n    invertPrice,\r\n    ticksAtLimit,\r\n  } = useV3DerivedMintInfo(\r\n    baseCurrency ?? undefined,\r\n    quoteCurrency ?? undefined,\r\n    feeAmount,\r\n    baseCurrency ?? undefined,\r\n    existingPosition\r\n  )\r\n\r\n  const { formatPrice } = useFormatter()\r\n  const formattedPrice = formatPrice({\r\n    price: invertPrice ? price?.invert() : price,\r\n    type: NumberType.TokenTx,\r\n  })\r\n  const { onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput, onStartPriceInput } =\r\n    useV3MintActionHandlers(noLiquidity)\r\n\r\n  const isValid = !errorMessage && !invalidRange\r\n\r\n  // modal and loading\r\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\r\n\r\n  // txn values\r\n  const deadline = useTransactionDeadline() // custom from users settings\r\n\r\n  const [txHash, setTxHash] = useState<string>('')\r\n\r\n  // get formatted amounts\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const usdcValues = {\r\n    [Field.CURRENCY_A]: useStablecoinValue(parsedAmounts[Field.CURRENCY_A]),\r\n    [Field.CURRENCY_B]: useStablecoinValue(parsedAmounts[Field.CURRENCY_B]),\r\n  }\r\n\r\n  // get the max amounts user can add\r\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmountSpend(currencyBalances[field]),\r\n      }\r\n    },\r\n    {}\r\n  )\r\n\r\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\r\n      }\r\n    },\r\n    {}\r\n  )\r\n\r\n  const argentWalletContract = useArgentWalletContract()\r\n\r\n  // check whether the user has approved the router on the tokens\r\n  const [approvalA, approveACallback] = useApproveCallback(\r\n    argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_A],\r\n    chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\r\n  )\r\n  const [approvalB, approveBCallback] = useApproveCallback(\r\n    argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_B],\r\n    chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\r\n  )\r\n\r\n  const allowedSlippage = useUserSlippageToleranceWithDefault(\r\n    outOfRange ? ZERO_PERCENT : DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE\r\n  )\r\n\r\n  async function onAdd() {\r\n    if (!chainId || !provider || !account) return\r\n\r\n    if (!positionManager || !baseCurrency || !quoteCurrency) {\r\n      return\r\n    }\r\n\r\n    if (position && account && deadline) {\r\n      const useNative = baseCurrency.isNative ? baseCurrency : quoteCurrency.isNative ? quoteCurrency : undefined\r\n      const { calldata, value } =\r\n        hasExistingPosition && tokenId\r\n          ? NonfungiblePositionManager.addCallParameters(position, {\r\n              tokenId,\r\n              slippageTolerance: allowedSlippage,\r\n              deadline: deadline.toString(),\r\n              useNative,\r\n            })\r\n          : NonfungiblePositionManager.addCallParameters(position, {\r\n              slippageTolerance: allowedSlippage,\r\n              recipient: account,\r\n              deadline: deadline.toString(),\r\n              useNative,\r\n              createPool: noLiquidity,\r\n            })\r\n\r\n      let txn: { to: string; data: string; value: string } = {\r\n        to: NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId],\r\n        data: calldata,\r\n        value,\r\n      }\r\n\r\n      if (argentWalletContract) {\r\n        const amountA = parsedAmounts[Field.CURRENCY_A]\r\n        const amountB = parsedAmounts[Field.CURRENCY_B]\r\n        const batch = [\r\n          ...(amountA && amountA.currency.isToken\r\n            ? [approveAmountCalldata(amountA, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])]\r\n            : []),\r\n          ...(amountB && amountB.currency.isToken\r\n            ? [approveAmountCalldata(amountB, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])]\r\n            : []),\r\n          {\r\n            to: txn.to,\r\n            data: txn.data,\r\n            value: txn.value,\r\n          },\r\n        ]\r\n        const data = argentWalletContract.interface.encodeFunctionData('wc_multiCall', [batch])\r\n        txn = {\r\n          to: argentWalletContract.address,\r\n          data,\r\n          value: '0x0',\r\n        }\r\n      }\r\n\r\n      const connectedChainId = await provider.getSigner().getChainId()\r\n      if (chainId !== connectedChainId) throw new WrongChainError()\r\n\r\n      setAttemptingTxn(true)\r\n\r\n      provider\r\n        .getSigner()\r\n        .estimateGas(txn)\r\n        .then((estimate) => {\r\n          const newTxn = {\r\n            ...txn,\r\n            gasLimit: calculateGasMargin(estimate),\r\n          }\r\n\r\n          return provider\r\n            .getSigner()\r\n            .sendTransaction(newTxn)\r\n            .then((response: TransactionResponse) => {\r\n              setAttemptingTxn(false)\r\n              const transactionInfo: TransactionInfo = {\r\n                type: TransactionType.ADD_LIQUIDITY_V3_POOL,\r\n                baseCurrencyId: currencyId(baseCurrency),\r\n                quoteCurrencyId: currencyId(quoteCurrency),\r\n                createPool: Boolean(noLiquidity),\r\n                expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient?.toString() ?? '0',\r\n                expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient?.toString() ?? '0',\r\n                feeAmount: position.pool.fee,\r\n              }\r\n              addTransaction(response, transactionInfo)\r\n              setTxHash(response.hash)\r\n              sendAnalyticsEvent(LiquidityEventName.ADD_LIQUIDITY_SUBMITTED, {\r\n                label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join('/'),\r\n                ...trace,\r\n                ...transactionInfo,\r\n              })\r\n            })\r\n        })\r\n        .catch((error) => {\r\n          console.error('Failed to send transaction', error)\r\n          setAttemptingTxn(false)\r\n          // we only care if the error is something _other_ than the user rejected the tx\r\n          if (error?.code !== 4001) {\r\n            console.error(error)\r\n          }\r\n        })\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currencyNew: Currency, currencyIdOther?: string): (string | undefined)[] => {\r\n      const currencyIdNew = currencyId(currencyNew)\r\n\r\n      if (currencyIdNew === currencyIdOther) {\r\n        // not ideal, but for now clobber the other if the currency ids are equal\r\n        return [currencyIdNew, undefined]\r\n      } else {\r\n        // prevent weth + eth\r\n        const isETHOrWETHNew =\r\n          currencyIdNew === 'ETH' ||\r\n          (chainId !== undefined && currencyIdNew === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\r\n        const isETHOrWETHOther =\r\n          currencyIdOther !== undefined &&\r\n          (currencyIdOther === 'ETH' ||\r\n            (chainId !== undefined && currencyIdOther === WRAPPED_NATIVE_CURRENCY[chainId]?.address))\r\n\r\n        if (isETHOrWETHNew && isETHOrWETHOther) {\r\n          return [currencyIdNew, undefined]\r\n        } else {\r\n          return [currencyIdNew, currencyIdOther]\r\n        }\r\n      }\r\n    },\r\n    [chainId]\r\n  )\r\n\r\n  const handleCurrencyASelect = useCallback(\r\n    (currencyANew: Currency) => {\r\n      const [idA, idB] = handleCurrencySelect(currencyANew, currencyIdB)\r\n      if (idB === undefined) {\r\n        navigate(`/add/${idA}`)\r\n      } else {\r\n        navigate(`/add/${idA}/${idB}`)\r\n      }\r\n    },\r\n    [handleCurrencySelect, currencyIdB, navigate]\r\n  )\r\n\r\n  const handleCurrencyBSelect = useCallback(\r\n    (currencyBNew: Currency) => {\r\n      const [idB, idA] = handleCurrencySelect(currencyBNew, currencyIdA)\r\n      if (idA === undefined) {\r\n        navigate(`/add/${idB}`)\r\n      } else {\r\n        navigate(`/add/${idA}/${idB}`)\r\n      }\r\n    },\r\n    [handleCurrencySelect, currencyIdA, navigate]\r\n  )\r\n\r\n  const handleFeePoolSelect = useCallback(\r\n    (newFeeAmount: FeeAmount) => {\r\n      onLeftRangeInput('')\r\n      onRightRangeInput('')\r\n      navigate(`/add/${currencyIdA}/${currencyIdB}/${newFeeAmount}`)\r\n    },\r\n    [currencyIdA, currencyIdB, navigate, onLeftRangeInput, onRightRangeInput]\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onFieldAInput('')\r\n      // dont jump to pool page if creating\r\n      navigate('/pools')\r\n    }\r\n    setTxHash('')\r\n  }, [navigate, onFieldAInput, txHash])\r\n\r\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\r\n\r\n  const clearAll = useCallback(() => {\r\n    onFieldAInput('')\r\n    onFieldBInput('')\r\n    onLeftRangeInput('')\r\n    onRightRangeInput('')\r\n    navigate(`/add`)\r\n  }, [navigate, onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput])\r\n\r\n  // get value and prices at ticks\r\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks\r\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks\r\n\r\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange } =\r\n    useRangeHopCallbacks(baseCurrency ?? undefined, quoteCurrency ?? undefined, feeAmount, tickLower, tickUpper, pool)\r\n\r\n  // we need an existence check on parsed amounts for single-asset deposits\r\n  const showApprovalA =\r\n    !argentWalletContract && approvalA !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_A]\r\n  const showApprovalB =\r\n    !argentWalletContract && approvalB !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_B]\r\n\r\n  const pendingText = `Supplying ${!depositADisabled ? parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) : ''} ${\r\n    !depositADisabled ? currencies[Field.CURRENCY_A]?.symbol : ''\r\n  } ${!outOfRange ? 'and' : ''} ${!depositBDisabled ? parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) : ''} ${\r\n    !depositBDisabled ? currencies[Field.CURRENCY_B]?.symbol : ''\r\n  }`\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n  const handleSetFullRange = useCallback(() => {\r\n    getSetFullRange()\r\n\r\n    const minPrice = pricesAtLimit[Bound.LOWER]\r\n    if (minPrice) searchParams.set('minPrice', minPrice.toSignificant(5))\r\n    const maxPrice = pricesAtLimit[Bound.UPPER]\r\n    if (maxPrice) searchParams.set('maxPrice', maxPrice.toSignificant(5))\r\n    setSearchParams(searchParams)\r\n  }, [getSetFullRange, pricesAtLimit, searchParams, setSearchParams])\r\n\r\n  // START: sync values with query string\r\n  const oldSearchParams = usePrevious(searchParams)\r\n  // use query string as an input to onInput handlers\r\n  useEffect(() => {\r\n    const minPrice = searchParams.get('minPrice')\r\n    const oldMinPrice = oldSearchParams?.get('minPrice')\r\n    if (\r\n      minPrice &&\r\n      typeof minPrice === 'string' &&\r\n      !isNaN(minPrice as any) &&\r\n      (!oldMinPrice || oldMinPrice !== minPrice)\r\n    ) {\r\n      onLeftRangeInput(minPrice)\r\n    }\r\n    // disable eslint rule because this hook only cares about the url->input state data flow\r\n    // input state -> url updates are handled in the input handlers\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchParams])\r\n  useEffect(() => {\r\n    const maxPrice = searchParams.get('maxPrice')\r\n    const oldMaxPrice = oldSearchParams?.get('maxPrice')\r\n    if (\r\n      maxPrice &&\r\n      typeof maxPrice === 'string' &&\r\n      !isNaN(maxPrice as any) &&\r\n      (!oldMaxPrice || oldMaxPrice !== maxPrice)\r\n    ) {\r\n      onRightRangeInput(maxPrice)\r\n    }\r\n    // disable eslint rule because this hook only cares about the url->input state data flow\r\n    // input state -> url updates are handled in the input handlers\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchParams])\r\n  // END: sync values with query string\r\n\r\n  const Buttons = () =>\r\n    addIsUnsupported ? (\r\n      <ButtonPrimary disabled={true} $borderRadius=\"12px\" padding=\"12px\">\r\n        <ThemedText.DeprecatedMain mb=\"4px\">\r\n          <Trans>Unsupported Asset</Trans>\r\n        </ThemedText.DeprecatedMain>\r\n      </ButtonPrimary>\r\n    ) : !account ? (\r\n      <TraceEvent\r\n        events={[BrowserEvent.onClick]}\r\n        name={InterfaceEventName.CONNECT_WALLET_BUTTON_CLICKED}\r\n        properties={{ received_swap_quote: false }}\r\n        element={InterfaceElementName.CONNECT_WALLET_BUTTON}\r\n      >\r\n        <ButtonLight onClick={toggleWalletDrawer} $borderRadius=\"12px\" padding=\"12px\">\r\n          <Trans>Connect wallet</Trans>\r\n        </ButtonLight>\r\n      </TraceEvent>\r\n    ) : (\r\n      <AutoColumn gap=\"md\">\r\n        {(approvalA === ApprovalState.NOT_APPROVED ||\r\n          approvalA === ApprovalState.PENDING ||\r\n          approvalB === ApprovalState.NOT_APPROVED ||\r\n          approvalB === ApprovalState.PENDING) &&\r\n          isValid && (\r\n            <RowBetween>\r\n              {showApprovalA && (\r\n                <ButtonPrimary\r\n                  onClick={approveACallback}\r\n                  disabled={approvalA === ApprovalState.PENDING}\r\n                  width={showApprovalB ? '48%' : '100%'}\r\n                >\r\n                  {approvalA === ApprovalState.PENDING ? (\r\n                    <Dots>\r\n                      <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\r\n                    </Dots>\r\n                  ) : (\r\n                    <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\r\n                  )}\r\n                </ButtonPrimary>\r\n              )}\r\n              {showApprovalB && (\r\n                <ButtonPrimary\r\n                  onClick={approveBCallback}\r\n                  disabled={approvalB === ApprovalState.PENDING}\r\n                  width={showApprovalA ? '48%' : '100%'}\r\n                >\r\n                  {approvalB === ApprovalState.PENDING ? (\r\n                    <Dots>\r\n                      <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\r\n                    </Dots>\r\n                  ) : (\r\n                    <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\r\n                  )}\r\n                </ButtonPrimary>\r\n              )}\r\n            </RowBetween>\r\n          )}\r\n        <ButtonError\r\n          onClick={() => {\r\n            setShowConfirm(true)\r\n          }}\r\n          disabled={\r\n            !isValid ||\r\n            (!argentWalletContract && approvalA !== ApprovalState.APPROVED && !depositADisabled) ||\r\n            (!argentWalletContract && approvalB !== ApprovalState.APPROVED && !depositBDisabled)\r\n          }\r\n          error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\r\n        >\r\n          <Text fontWeight={535}>{errorMessage ? errorMessage : <Trans>Preview</Trans>}</Text>\r\n        </ButtonError>\r\n      </AutoColumn>\r\n    )\r\n\r\n  const usdcValueCurrencyA = usdcValues[Field.CURRENCY_A]\r\n  const usdcValueCurrencyB = usdcValues[Field.CURRENCY_B]\r\n  const currencyAFiat = useMemo(\r\n    () => ({\r\n      data: usdcValueCurrencyA ? parseFloat(usdcValueCurrencyA.toSignificant()) : undefined,\r\n      isLoading: false,\r\n    }),\r\n    [usdcValueCurrencyA]\r\n  )\r\n  const currencyBFiat = useMemo(\r\n    () => ({\r\n      data: usdcValueCurrencyB ? parseFloat(usdcValueCurrencyB.toSignificant()) : undefined,\r\n      isLoading: false,\r\n    }),\r\n    [usdcValueCurrencyB]\r\n  )\r\n\r\n  const owner = useSingleCallResult(tokenId ? positionManager : null, 'ownerOf', [tokenId]).result?.[0]\r\n  const ownsNFT =\r\n    addressesAreEquivalent(owner, account) || addressesAreEquivalent(existingPositionDetails?.operator, account)\r\n  const showOwnershipWarning = Boolean(hasExistingPosition && account && !ownsNFT)\r\n\r\n  return (\r\n    <>\r\n      <ScrollablePage>\r\n        <TransactionConfirmationModal\r\n          isOpen={showConfirm}\r\n          onDismiss={handleDismissConfirmation}\r\n          attemptingTxn={attemptingTxn}\r\n          hash={txHash}\r\n          reviewContent={() => (\r\n            <ConfirmationModalContent\r\n              title={<Trans>Add Liquidity</Trans>}\r\n              onDismiss={handleDismissConfirmation}\r\n              topContent={() => (\r\n                <Review\r\n                  parsedAmounts={parsedAmounts}\r\n                  position={position}\r\n                  existingPosition={existingPosition}\r\n                  priceLower={priceLower}\r\n                  priceUpper={priceUpper}\r\n                  outOfRange={outOfRange}\r\n                  ticksAtLimit={ticksAtLimit}\r\n                />\r\n              )}\r\n              bottomContent={() => (\r\n                <ButtonPrimary style={{ marginTop: '1rem' }} onClick={onAdd}>\r\n                  <Text fontWeight={535} fontSize={20}>\r\n                    <Trans>Add</Trans>\r\n                  </Text>\r\n                </ButtonPrimary>\r\n              )}\r\n            />\r\n          )}\r\n          pendingText={pendingText}\r\n        />\r\n        <StyledBodyWrapper $hasExistingPosition={hasExistingPosition}>\r\n          <AddRemoveTabs\r\n            creating={false}\r\n            adding={true}\r\n            positionID={tokenId}\r\n            autoSlippage={DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE}\r\n            showBackLink={!hasExistingPosition}\r\n          >\r\n            {!hasExistingPosition && (\r\n              <Row justifyContent=\"flex-end\" style={{ width: 'fit-content', minWidth: 'fit-content' }}>\r\n                <MediumOnly>\r\n                  <ButtonText onClick={clearAll}>\r\n                    <ThemedText.DeprecatedBlue fontSize=\"12px\">\r\n                      <Trans>Clear all</Trans>\r\n                    </ThemedText.DeprecatedBlue>\r\n                  </ButtonText>\r\n                </MediumOnly>\r\n              </Row>\r\n            )}\r\n          </AddRemoveTabs>\r\n          <Wrapper>\r\n            <ResponsiveTwoColumns wide={!hasExistingPosition}>\r\n              <AutoColumn gap=\"lg\">\r\n                {!hasExistingPosition && (\r\n                  <>\r\n                    <AutoColumn gap=\"md\">\r\n                      <RowBetween paddingBottom=\"20px\">\r\n                        <ThemedText.DeprecatedLabel>\r\n                          <Trans>Select pair</Trans>\r\n                        </ThemedText.DeprecatedLabel>\r\n                      </RowBetween>\r\n                      <RowBetween gap=\"md\">\r\n                        <CurrencyInputPanel\r\n                          value={formattedAmounts[Field.CURRENCY_A]}\r\n                          onUserInput={onFieldAInput}\r\n                          hideInput\r\n                          onMax={() => {\r\n                            onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\r\n                          }}\r\n                          onCurrencySelect={handleCurrencyASelect}\r\n                          showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\r\n                          currency={currencies[Field.CURRENCY_A] ?? null}\r\n                          id=\"add-liquidity-input-tokena\"\r\n                          showCommonBases\r\n                        />\r\n\r\n                        <CurrencyInputPanel\r\n                          value={formattedAmounts[Field.CURRENCY_B]}\r\n                          hideInput\r\n                          onUserInput={onFieldBInput}\r\n                          onCurrencySelect={handleCurrencyBSelect}\r\n                          onMax={() => {\r\n                            onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\r\n                          }}\r\n                          showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\r\n                          currency={currencies[Field.CURRENCY_B] ?? null}\r\n                          id=\"add-liquidity-input-tokenb\"\r\n                          showCommonBases\r\n                        />\r\n                      </RowBetween>\r\n\r\n                      <FeeSelector\r\n                        disabled={!quoteCurrency || !baseCurrency}\r\n                        feeAmount={feeAmount}\r\n                        handleFeePoolSelect={handleFeePoolSelect}\r\n                        currencyA={baseCurrency ?? undefined}\r\n                        currencyB={quoteCurrency ?? undefined}\r\n                      />\r\n                    </AutoColumn>{' '}\r\n                  </>\r\n                )}\r\n                {hasExistingPosition && existingPosition && (\r\n                  <PositionPreview\r\n                    position={existingPosition}\r\n                    title={<Trans>Selected range</Trans>}\r\n                    inRange={!outOfRange}\r\n                    ticksAtLimit={ticksAtLimit}\r\n                  />\r\n                )}\r\n              </AutoColumn>\r\n\r\n              {!hasExistingPosition && (\r\n                <>\r\n                  <DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}>\r\n                    <RowBetween>\r\n                      <ThemedText.DeprecatedLabel>\r\n                        <Trans>Set price range</Trans>\r\n                      </ThemedText.DeprecatedLabel>\r\n\r\n                      {Boolean(baseCurrency && quoteCurrency) && (\r\n                        <RowFixed gap=\"8px\">\r\n                          <PresetsButtons onSetFullRange={handleSetFullRange} />\r\n                          <RateToggle\r\n                            currencyA={baseCurrency as Currency}\r\n                            currencyB={quoteCurrency as Currency}\r\n                            handleRateToggle={() => {\r\n                              if (!ticksAtLimit[Bound.LOWER] && !ticksAtLimit[Bound.UPPER]) {\r\n                                onLeftRangeInput(\r\n                                  (invertPrice ? priceLower : priceUpper?.invert())?.toSignificant(6) ?? ''\r\n                                )\r\n                                onRightRangeInput(\r\n                                  (invertPrice ? priceUpper : priceLower?.invert())?.toSignificant(6) ?? ''\r\n                                )\r\n                                onFieldAInput(formattedAmounts[Field.CURRENCY_B] ?? '')\r\n                              }\r\n                              navigate(\r\n                                `/add/${currencyIdB as string}/${currencyIdA as string}${\r\n                                  feeAmount ? '/' + feeAmount : ''\r\n                                }`\r\n                              )\r\n                            }}\r\n                          />\r\n                        </RowFixed>\r\n                      )}\r\n                    </RowBetween>\r\n\r\n                    <RangeSelector\r\n                      priceLower={priceLower}\r\n                      priceUpper={priceUpper}\r\n                      getDecrementLower={getDecrementLower}\r\n                      getIncrementLower={getIncrementLower}\r\n                      getDecrementUpper={getDecrementUpper}\r\n                      getIncrementUpper={getIncrementUpper}\r\n                      onLeftRangeInput={onLeftRangeInput}\r\n                      onRightRangeInput={onRightRangeInput}\r\n                      currencyA={baseCurrency}\r\n                      currencyB={quoteCurrency}\r\n                      feeAmount={feeAmount}\r\n                      ticksAtLimit={ticksAtLimit}\r\n                    />\r\n\r\n                    {outOfRange && (\r\n                      <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\r\n                        <RowBetween>\r\n                          <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\r\n                          <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\r\n                            <Trans>\r\n                              Your position will not earn fees or be used in trades until the market price moves into\r\n                              your range.\r\n                            </Trans>\r\n                          </ThemedText.DeprecatedYellow>\r\n                        </RowBetween>\r\n                      </YellowCard>\r\n                    )}\r\n\r\n                    {invalidRange && (\r\n                      <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\r\n                        <RowBetween>\r\n                          <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\r\n                          <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\r\n                            <Trans>Invalid range selected. The min price must be lower than the max price.</Trans>\r\n                          </ThemedText.DeprecatedYellow>\r\n                        </RowBetween>\r\n                      </YellowCard>\r\n                    )}\r\n                  </DynamicSection>\r\n\r\n                  <DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}>\r\n                    {!noLiquidity ? (\r\n                      <>\r\n                        {Boolean(price && baseCurrency && quoteCurrency && !noLiquidity) && (\r\n                          <AutoColumn gap=\"2px\" style={{ marginTop: '0.5rem' }}>\r\n                            <Trans>\r\n                              <ThemedText.DeprecatedMain fontWeight={535} fontSize={12} color=\"text1\">\r\n                                Current price:\r\n                              </ThemedText.DeprecatedMain>\r\n                              <ThemedText.DeprecatedBody fontWeight={535} fontSize={20} color=\"text1\">\r\n                                {price && <HoverInlineText maxCharacters={20} text={formattedPrice} />}\r\n                              </ThemedText.DeprecatedBody>\r\n                              {baseCurrency && (\r\n                                <ThemedText.DeprecatedBody color=\"text2\" fontSize={12}>\r\n                                  {quoteCurrency?.symbol} per {baseCurrency.symbol}\r\n                                </ThemedText.DeprecatedBody>\r\n                              )}\r\n                            </Trans>\r\n                          </AutoColumn>\r\n                        )}\r\n                        <LiquidityChartRangeInput\r\n                          currencyA={baseCurrency ?? undefined}\r\n                          currencyB={quoteCurrency ?? undefined}\r\n                          feeAmount={feeAmount}\r\n                          ticksAtLimit={ticksAtLimit}\r\n                          price={\r\n                            price ? parseFloat((invertPrice ? price.invert() : price).toSignificant(8)) : undefined\r\n                          }\r\n                          priceLower={priceLower}\r\n                          priceUpper={priceUpper}\r\n                          onLeftRangeInput={onLeftRangeInput}\r\n                          onRightRangeInput={onRightRangeInput}\r\n                          interactive={!hasExistingPosition}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <AutoColumn gap=\"md\">\r\n                        {noLiquidity && (\r\n                          <BlueCard\r\n                            style={{\r\n                              display: 'flex',\r\n                              flexDirection: 'row',\r\n                              alignItems: 'center',\r\n                              padding: '1rem 1rem',\r\n                            }}\r\n                          >\r\n                            <ThemedText.DeprecatedBody\r\n                              fontSize={14}\r\n                              style={{ fontWeight: 535 }}\r\n                              textAlign=\"left\"\r\n                              color={theme.accent1}\r\n                            >\r\n                              <Trans>\r\n                                This pool must be initialized before you can add liquidity. To initialize, select a\r\n                                starting price for the pool. Then, enter your liquidity price range and deposit amount.\r\n                                Gas fees will be higher than usual due to the initialization transaction.\r\n                              </Trans>\r\n                            </ThemedText.DeprecatedBody>\r\n                          </BlueCard>\r\n                        )}\r\n                        <OutlineCard padding=\"12px\">\r\n                          <StyledInput\r\n                            className=\"start-price-input\"\r\n                            value={startPriceTypedValue}\r\n                            onUserInput={onStartPriceInput}\r\n                          />\r\n                        </OutlineCard>\r\n                        <RowBetween\r\n                          style={{\r\n                            backgroundColor: theme.surface1,\r\n                            padding: '12px',\r\n                            borderRadius: '12px',\r\n                          }}\r\n                        >\r\n                          <ThemedText.DeprecatedMain>\r\n                            <Trans>Starting {baseCurrency?.symbol} Price:</Trans>\r\n                          </ThemedText.DeprecatedMain>\r\n                          <ThemedText.DeprecatedMain>\r\n                            {price ? (\r\n                              <ThemedText.DeprecatedMain>\r\n                                <RowFixed>\r\n                                  <HoverInlineText\r\n                                    maxCharacters={20}\r\n                                    text={invertPrice ? price?.invert()?.toSignificant(8) : price?.toSignificant(8)}\r\n                                  />{' '}\r\n                                  <span style={{ marginLeft: '4px' }}>\r\n                                    {quoteCurrency?.symbol} per {baseCurrency?.symbol}\r\n                                  </span>\r\n                                </RowFixed>\r\n                              </ThemedText.DeprecatedMain>\r\n                            ) : (\r\n                              '-'\r\n                            )}\r\n                          </ThemedText.DeprecatedMain>\r\n                        </RowBetween>\r\n                      </AutoColumn>\r\n                    )}\r\n                  </DynamicSection>\r\n                </>\r\n              )}\r\n              <div>\r\n                <DynamicSection disabled={invalidPool || invalidRange || (noLiquidity && !startPriceTypedValue)}>\r\n                  <AutoColumn gap=\"md\">\r\n                    <ThemedText.DeprecatedLabel>\r\n                      {hasExistingPosition ? <Trans>Add more liquidity</Trans> : <Trans>Deposit amounts</Trans>}\r\n                    </ThemedText.DeprecatedLabel>\r\n\r\n                    <CurrencyInputPanel\r\n                      value={formattedAmounts[Field.CURRENCY_A]}\r\n                      onUserInput={onFieldAInput}\r\n                      onMax={() => {\r\n                        onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\r\n                      }}\r\n                      showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\r\n                      currency={currencies[Field.CURRENCY_A] ?? null}\r\n                      id=\"add-liquidity-input-tokena\"\r\n                      fiatValue={currencyAFiat}\r\n                      showCommonBases\r\n                      locked={depositADisabled}\r\n                    />\r\n\r\n                    <CurrencyInputPanel\r\n                      value={formattedAmounts[Field.CURRENCY_B]}\r\n                      onUserInput={onFieldBInput}\r\n                      onMax={() => {\r\n                        onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\r\n                      }}\r\n                      showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\r\n                      fiatValue={currencyBFiat}\r\n                      currency={currencies[Field.CURRENCY_B] ?? null}\r\n                      id=\"add-liquidity-input-tokenb\"\r\n                      showCommonBases\r\n                      locked={depositBDisabled}\r\n                    />\r\n                  </AutoColumn>\r\n                </DynamicSection>\r\n              </div>\r\n              <Buttons />\r\n            </ResponsiveTwoColumns>\r\n          </Wrapper>\r\n        </StyledBodyWrapper>\r\n        {showOwnershipWarning && <OwnershipWarning ownerAddress={owner} />}\r\n        {addIsUnsupported && (\r\n          <UnsupportedCurrencyFooter\r\n            show={addIsUnsupported}\r\n            currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\r\n          />\r\n        )}\r\n      </ScrollablePage>\r\n      <SwitchLocaleLink />\r\n    </>\r\n  )\r\n}\r\n","import { Pool, Position } from '@uniswap/v3-sdk'\r\nimport { usePool } from 'hooks/usePools'\r\nimport { PositionDetails } from 'types/position'\r\n\r\nimport { useCurrency } from './Tokens'\r\n\r\nexport function useDerivedPositionInfo(positionDetails: PositionDetails | undefined): {\r\n  position?: Position\r\n  pool?: Pool\r\n} {\r\n  const currency0 = useCurrency(positionDetails?.token0)\r\n  const currency1 = useCurrency(positionDetails?.token1)\r\n\r\n  // construct pool data\r\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, positionDetails?.fee)\r\n\r\n  let position = undefined\r\n  if (pool && positionDetails) {\r\n    position = new Position({\r\n      pool,\r\n      liquidity: positionDetails.liquidity.toString(),\r\n      tickLower: positionDetails.tickLower,\r\n      tickUpper: positionDetails.tickUpper,\r\n    })\r\n  }\r\n\r\n  return {\r\n    position,\r\n    pool: pool ?? undefined,\r\n  }\r\n}\r\n","import { useWeb3React } from '@web3-react/core'\r\n\r\nimport ArgentWalletContractABI from '../abis/argent-wallet-contract.json'\r\nimport { ArgentWalletContract } from '../abis/types'\r\nimport { useContract } from './useContract'\r\nimport useIsArgentWallet from './useIsArgentWallet'\r\n\r\nexport function useArgentWalletContract(): ArgentWalletContract | null {\r\n  const { account } = useWeb3React()\r\n  const isArgentWallet = useIsArgentWallet()\r\n  return useContract(\r\n    isArgentWallet ? account ?? undefined : undefined,\r\n    ArgentWalletContractABI,\r\n    true\r\n  ) as ArgentWalletContract\r\n}\r\n","export function addressesAreEquivalent(a: string | null | undefined, b: string | null | undefined) {\r\n  if (!a || !b) return false\r\n  return a === b || a.toLowerCase() === b.toLowerCase()\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Inbox = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"22 12 16 12 14 15 10 15 8 12 2 12\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"\n  }));\n});\nInbox.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nInbox.displayName = 'Inbox';\nexport default Inbox;"],"names":["DataCard","styled","AutoColumn","CardBGImage","span","uImage","desaturate","CardBGImageSmaller","xlUnicorn","CardNoise","noise","CardSection","disabled","Break","div","ExplainerText","theme","neutral2","TitleRow","deprecated_accentWarning","Wrapper","deprecated_accentWarningSoft","ownerAddress","AlertTriangle","style","marginRight","ThemedText","SubHeader","color","_extends","Path","path","fill","accent1","Area","series","xScale","yScale","xValue","yValue","useMemo","d","area","curve","curveStepAfter","x","y1","y0","filter","value","window","innerWidth","undefined","StyledGroup","g","Axis","axisGenerator","ref","axis","select","call","remove","AxisBottom","innerHeight","offset","transform","axisBottom","ticks","brushHandlePath","height","join","brushHandleAccentPath","OffScreenHandle","size","margin","polygon","points","stroke","strokeWidth","strokeLinejoin","Handle","HandleAccent","white","opacity","hover","LabelGroup","visible","TooltipBackground","rect","surface3","Tooltip","text","neutral1","compare","a","b","aNorm","map","toFixed","bNorm","every","v","i","Brush","id","interactive","brushLabelValue","brushExtent","setBrushExtent","westHandleColor","eastHandleColor","brushRef","useRef","brushBehavior","localBrushExtent","setLocalBrushExtent","useState","showLabels","setShowLabels","hovering","setHovering","previousBrushExtent","usePrevious","brushed","useCallback","event","type","selection","mode","scaled","invert","useEffect","current","brushX","extent","Math","max","handleSize","on","transition","move","selectAll","attr","timeout","setTimeout","clearTimeout","flipWestHandle","flipEastHandle","showWestArrow","showEastArrow","westHandleInView","eastHandleInView","defs","linearGradient","x1","x2","y2","stop","stopColor","clipPath","y","width","onMouseEnter","onMouseLeave","rx","dominantBaseline","StyledLine","line","Line","count","toString","Button","ButtonGray","ZoomOverlay","Zoom","svg","setZoom","resetBrush","showResetButton","zoomLevels","zoomBehavior","zoomIn","zoomOut","zoomInitial","zoomReset","scaleBy","scaleTo","zoomIdentity","translate","scale","zoom","scaleExtent","min","onClick","RefreshCcw","ZoomIn","ZoomOut","xAccessor","price0","yAccessor","activeLiquidity","Chart","data","ticksAtLimit","styles","dimensions","margins","brushDomain","brushLabels","onBrushDomainChange","zoomRef","top","bottom","left","right","scales","scaleLinear","domain","initialMin","initialMax","range","newXscale","rescaleX","Boolean","Bound","LOWER","UPPER","viewBox","overflow","mask","brush","handle","west","east","PRICE_FIXED_DIGITS","computeSurroundingTicks","token0","token1","activeTickProcessed","sortedTickData","pivot","ascending","previousTickProcessed","processedTicks","length","tick","Number","currentTickProcessed","liquidityActive","liquidityNet","JSBI","tickToPrice","push","reverse","CHAIN_IDS_MISSING_SUBGRAPH_DATA","ChainId","ARBITRUM_ONE","ARBITRUM_GOERLI","REFRESH_FREQUENCY","blocksPerFetch","getActiveTick","tickCurrent","feeAmount","floor","TICK_SPACINGS","bitmapIndex","tickSpacing","MAX_THE_GRAPH_TICK_FETCH_VALUE","useAllV3Ticks","currencyA","currencyB","useSubgraph","includes","chainId","tickLensTickData","numSurroundingTicks","tickDataLatestSynced","setTickDataLatestSynced","poolState","pool","usePool","activeTick","nearestUsableTick","useWeb3React","poolAddress","PoolState","EXISTS","Pool","getAddress","wrapped","V3_CORE_FACTORY_ADDRESSES","minIndex","maxIndex","tickLensArgs","ZERO_ADDRESS","Array","_","wordIndex","tickLens","useTickLens","callStates","useSingleContractMultipleData","isError","some","error","isLoading","loading","IsSyncing","syncing","isValid","valid","tickData","result","populatedTicks","reduce","accumulator","sort","useTicksFromTickLens","skipNumber","setSkipNumber","subgraphTickData","setSubgraphTickData","skip","useAllV3TicksQuery","variables","toLowerCase","pollInterval","ms","client","apolloClient","useTicksFromSubgraph","useDensityChartData","LOADING","findIndex","console","liquidity","subsequentTicks","ticksProcessed","concat","usePoolActiveLiquidity","formatData","newData","t","chartEntry","parseFloat","formattedData","ZOOM_LEVELS","FeeAmount","LOWEST","LOW","MEDIUM","HIGH","ChartWrapper","InfoBox","message","icon","ColumnCenter","justifyContent","DeprecatedMediumHeader","padding","marginTop","textAlign","LiquidityChartRangeInput","price","priceLower","priceUpper","onLeftRangeInput","onRightRangeInput","useTheme","tokenAColor","useColor","tokenBColor","isSorted","sortsBefore","onBrushDomainChangeEnded","leftRangeValue","rightRangeValue","batch","leftPrice","rightPrice","toSignificant","formatDelta","useFormatter","percent","sign","isUninitialized","gap","minHeight","Inbox","Loader","CloudOff","saturate","critical","BarChart2","PositionPreview","position","title","inRange","baseCurrencyDefault","formatCurrencyAmount","formatPrice","formatTickPrice","currency0","unwrappedToken","currency1","baseCurrency","setBaseCurrency","sorted","quoteCurrency","priceOf","token0PriceLower","token0PriceUpper","handleRateChange","removed","RowBetween","marginBottom","RowFixed","DoubleCurrencyLogo","DeprecatedLabel","ml","fontSize","symbol","RangeBadge","LightCard","CurrencyLogo","currency","mr","amount","amount0","amount1","fee","BIPS_BASE","DeprecatedMain","RateToggle","handleRateToggle","justify","atLimit","direction","DeprecatedSmall","neutral3","NumberType","TokenTx","ButtonOutlined","attrs","$borderRadius","PresetsButtons","onSetFullRange","AutoRow","data-testid","DeprecatedBody","ERC20_INTERFACE","Interface","constant","inputs","name","outputs","payable","stateMutability","approveAmountCalldata","spender","isToken","Error","approveData","encodeFunctionData","toHex","quotient","to","address","Review","outOfRange","DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE","Percent","StyledBodyWrapper","BodyWrapper","$hasExistingPosition","AddLiquidityWrapper","isSupportedChain","AddLiquidity","PositionPageUnsupportedContent","navigate","useNavigate","currencyIdA","currencyIdB","feeAmountFromUrl","tokenId","useParams","account","provider","trace","useTrace","toggleWalletDrawer","useToggleAccountDrawer","addTransaction","useTransactionAdder","positionManager","useV3NFTPositionManagerContract","existingPositionDetails","positionLoading","useV3PositionFromTokenId","BigNumber","from","hasExistingPosition","existingPosition","positionDetails","useCurrency","Position","tickLower","tickUpper","useDerivedPositionInfo","Object","values","equals","independentField","typedValue","startPriceTypedValue","useV3MintState","dependentField","pricesAtTicks","pricesAtLimit","parsedAmounts","currencyBalances","noLiquidity","currencies","errorMessage","invalidPool","invalidRange","depositADisabled","depositBDisabled","invertPrice","useV3DerivedMintInfo","formattedPrice","onFieldAInput","onFieldBInput","onStartPriceInput","useV3MintActionHandlers","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","useTransactionDeadline","txHash","setTxHash","formattedAmounts","usdcValues","Field","CURRENCY_A","useStablecoinValue","CURRENCY_B","maxAmounts","field","maxAmountSpend","atMaxAmounts","equalTo","argentWalletContract","isArgentWallet","useIsArgentWallet","useContract","ArgentWalletContractABI","useArgentWalletContract","approvalA","approveACallback","useApproveCallback","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","approvalB","approveBCallback","allowedSlippage","useUserSlippageToleranceWithDefault","ZERO_PERCENT","async","onAdd","useNative","isNative","calldata","NonfungiblePositionManager","addCallParameters","slippageTolerance","recipient","createPool","txn","amountA","amountB","interface","connectedChainId","getSigner","getChainId","WrongChainError","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","transactionInfo","TransactionType","ADD_LIQUIDITY_V3_POOL","baseCurrencyId","currencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","hash","sendAnalyticsEvent","LiquidityEventName","ADD_LIQUIDITY_SUBMITTED","label","catch","code","handleCurrencySelect","currencyNew","currencyIdOther","currencyIdNew","isETHOrWETHNew","WRAPPED_NATIVE_CURRENCY","isETHOrWETHOther","handleCurrencyASelect","currencyANew","idA","idB","handleCurrencyBSelect","currencyBNew","handleFeePoolSelect","newFeeAmount","handleDismissConfirmation","addIsUnsupported","useIsSwapUnsupported","clearAll","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","getSetFullRange","useRangeHopCallbacks","showApprovalA","ApprovalState","APPROVED","showApprovalB","pendingText","searchParams","setSearchParams","useSearchParams","handleSetFullRange","minPrice","set","maxPrice","oldSearchParams","get","oldMinPrice","isNaN","oldMaxPrice","Buttons","ButtonPrimary","mb","NOT_APPROVED","PENDING","Dots","ButtonError","Text","fontWeight","TraceEvent","events","BrowserEvent","InterfaceEventName","CONNECT_WALLET_BUTTON_CLICKED","properties","received_swap_quote","element","InterfaceElementName","CONNECT_WALLET_BUTTON","ButtonLight","usdcValueCurrencyA","usdcValueCurrencyB","currencyAFiat","currencyBFiat","owner","useSingleCallResult","ownsNFT","addressesAreEquivalent","operator","showOwnershipWarning","ScrollablePage","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","topContent","bottomContent","AddRemoveTabs","creating","adding","positionID","autoSlippage","showBackLink","Row","minWidth","MediumOnly","ButtonText","DeprecatedBlue","ResponsiveTwoColumns","wide","paddingBottom","CurrencyInputPanel","onUserInput","hideInput","onMax","toExact","onCurrencySelect","showMaxButton","showCommonBases","FeeSelector","DynamicSection","RangeSelector","YellowCard","deprecated_yellow3","DeprecatedYellow","BlueCard","display","flexDirection","alignItems","OutlineCard","StyledInput","className","backgroundColor","surface1","borderRadius","HoverInlineText","maxCharacters","marginLeft","fiatValue","locked","OwnershipWarning","UnsupportedCurrencyFooter","show","SwitchLocaleLink"],"sourceRoot":""}