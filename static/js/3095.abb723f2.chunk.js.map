{"version":3,"file":"static/js/3095.abb723f2.chunk.js","mappings":"sZAaA,MAAMA,EAAQC,EAAAA,QAAOC,IAAG,Y,wIAAA;;;;EAMlBC,EAAYF,EAAAA,QAAOG,IAAG,Y,4IAAA;;;;EAMtBC,GAASJ,EAAAA,EAAAA,SAAOE,GAAAA,WAAAA,C,yIAAU;;EAI1BG,GAAcL,EAAAA,EAAAA,SAAOE,GAAAA,WAAAA,C,8IAAU;;;;;kCAKH,EAAGI,WAAYA,EAAMC,WAAWC;;;;EAMnD,SAASC,IACtB,MAAMC,GAAaC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQF,EAAWG,EAAAA,GAAWC,YAAcD,EAAAA,GAAWE,KACvDC,EAAYN,EAAWG,EAAAA,GAAWI,eAAiBJ,EAAAA,GAAWK,cAEpE,OACE,SAACf,EAAAA,C,UACC,UAACgB,EAAAA,GAAKA,CAACC,KAAMC,EAAAA,GAAkBC,UAAWC,qBAAmB,E,WAC3D,UAACrB,EAAAA,C,WACC,UAACF,EAAAA,C,WACC,SAACY,EAAAA,C,SAAM,SACP,SAACI,EAAAA,CAAUQ,MAAM,W,UACf,e,oBAGJ,SAAC3B,EAAAA,CAAM4B,IAAKjB,EAAakB,EAAYC,EAAYC,IAAI,eAEvD,SAACC,EAAAA,GAAkBA,CAACC,GAAIC,EAAAA,GAAMC,GAAG,I,UAC/B,e,oBAKV,C","sources":["pages/NotFound/index.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\r\nimport { InterfacePageName } from '@uniswap/analytics-events'\r\nimport { Trace } from 'analytics'\r\nimport { SmallButtonPrimary } from 'components/Button'\r\nimport { useIsMobile } from 'nft/hooks'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { useIsDarkMode } from 'theme/components/ThemeToggle'\r\n\r\nimport darkImage from '../../assets/images/404-page-dark.png'\r\nimport lightImage from '../../assets/images/404-page-light.png'\r\n\r\nconst Image = styled.img`\r\n  max-width: 510px;\r\n  width: 100%;\r\n  padding: 0 75px;\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst Header = styled(Container)`\r\n  gap: 30px;\r\n`\r\n\r\nconst PageWrapper = styled(Container)`\r\n  flex: 1;\r\n  justify-content: center;\r\n  gap: 50px;\r\n\r\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\r\n    justify-content: space-between;\r\n    padding-top: 64px;\r\n  }\r\n`\r\n\r\nexport default function NotFound() {\r\n  const isDarkMode = useIsDarkMode()\r\n  const isMobile = useIsMobile()\r\n\r\n  const Title = isMobile ? ThemedText.LargeHeader : ThemedText.Hero\r\n  const Paragraph = isMobile ? ThemedText.HeadlineMedium : ThemedText.HeadlineLarge\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <Trace page={InterfacePageName.NOT_FOUND} shouldLogImpression>\r\n        <Header>\r\n          <Container>\r\n            <Title>404</Title>\r\n            <Paragraph color=\"neutral2\">\r\n              <Trans>Page not found!</Trans>\r\n            </Paragraph>\r\n          </Container>\r\n          <Image src={isDarkMode ? darkImage : lightImage} alt=\"Liluni\" />\r\n        </Header>\r\n        <SmallButtonPrimary as={Link} to=\"/\">\r\n          <Trans>Oops, take me back to Swap</Trans>\r\n        </SmallButtonPrimary>\r\n      </Trace>\r\n    </PageWrapper>\r\n  )\r\n}\r\n"],"names":["Image","styled","img","Container","div","Header","PageWrapper","theme","breakpoint","md","NotFound","isDarkMode","useIsDarkMode","isMobile","useIsMobile","Title","ThemedText","LargeHeader","Hero","Paragraph","HeadlineMedium","HeadlineLarge","Trace","page","InterfacePageName","NOT_FOUND","shouldLogImpression","color","src","darkImage","lightImage","alt","SmallButtonPrimary","as","Link","to"],"sourceRoot":""}