{"version":3,"file":"static/js/2374.e6b7b22b.chunk.js","mappings":"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","sources":["components/NavigationTabs/index.tsx","components/Slider/index.tsx","components/earn/styled.tsx","hooks/useDebouncedChangeHandler.tsx","pages/AppBody.tsx","state/burn/v3/hooks.tsx","pages/RemoveLiquidity/styled.tsx","pages/RemoveLiquidity/V3.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\r\nimport { Percent } from '@uniswap/sdk-core'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport SettingsTab from 'components/Settings'\r\nimport { ReactNode } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { Box } from 'rebass'\r\nimport { useAppDispatch } from 'state/hooks'\r\nimport { resetMintState } from 'state/mint/actions'\r\nimport { resetMintState as resetMintV3State } from 'state/mint/v3/actions'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { flexRowNoWrap } from 'theme/styles'\r\n\r\nimport { RowBetween } from '../Row'\r\n\r\nconst Tabs = styled.div`\r\n  ${flexRowNoWrap};\r\n  align-items: center;\r\n  border-radius: 3rem;\r\n  justify-content: space-evenly;\r\n`\r\n\r\nconst StyledLink = styled(Link)<{ flex?: string }>`\r\n  flex: ${({ flex }) => flex ?? 'none'};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\r\n    flex: none;\r\n    margin-right: 10px;\r\n  `};\r\n`\r\n\r\nconst FindPoolTabsText = styled(ThemedText.SubHeaderLarge)`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`\r\n\r\nconst StyledArrowLeft = styled(ArrowLeft)`\r\n  color: ${({ theme }) => theme.neutral1};\r\n`\r\n\r\nexport function FindPoolTabs({ origin }: { origin: string }) {\r\n  return (\r\n    <Tabs>\r\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem', position: 'relative' }}>\r\n        <Link to={origin}>\r\n          <StyledArrowLeft />\r\n        </Link>\r\n        <FindPoolTabsText>\r\n          <Trans>Import V2 pool</Trans>\r\n        </FindPoolTabsText>\r\n      </RowBetween>\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nconst AddRemoveTitleText = styled(ThemedText.SubHeaderLarge)`\r\n  flex: 1;\r\n  margin: auto;\r\n`\r\n\r\nexport function AddRemoveTabs({\r\n  adding,\r\n  creating,\r\n  autoSlippage,\r\n  positionID,\r\n  children,\r\n}: {\r\n  adding: boolean\r\n  creating: boolean\r\n  autoSlippage: Percent\r\n  positionID?: string\r\n  showBackLink?: boolean\r\n  children?: ReactNode\r\n}) {\r\n  const { chainId } = useWeb3React()\r\n  const theme = useTheme()\r\n  // reset states on back\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation()\r\n\r\n  // detect if back should redirect to v3 or v2 pool page\r\n  const poolLink = location.pathname.includes('add/v2')\r\n    ? '/pools/v2'\r\n    : '/pools' + (positionID ? `/${positionID.toString()}` : '')\r\n\r\n  return (\r\n    <Tabs>\r\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }} align=\"center\">\r\n        <StyledLink\r\n          to={poolLink}\r\n          onClick={() => {\r\n            if (adding) {\r\n              // not 100% sure both of these are needed\r\n              dispatch(resetMintState())\r\n              dispatch(resetMintV3State())\r\n            }\r\n          }}\r\n          flex={children ? '1' : undefined}\r\n        >\r\n          <StyledArrowLeft stroke={theme.neutral2} />\r\n        </StyledLink>\r\n        <AddRemoveTitleText textAlign={children ? 'start' : 'center'}>\r\n          {creating ? (\r\n            <Trans>Create a pair</Trans>\r\n          ) : adding ? (\r\n            <Trans>Add liquidity</Trans>\r\n          ) : (\r\n            <Trans>Remove liquidity</Trans>\r\n          )}\r\n        </AddRemoveTitleText>\r\n        {children && <Box style={{ marginRight: '.5rem' }}>{children}</Box>}\r\n        <SettingsTab autoSlippage={autoSlippage} chainId={chainId} hideRoutingSettings />\r\n      </RowBetween>\r\n    </Tabs>\r\n  )\r\n}\r\n","import { ChangeEvent, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRangeInput = styled.input<{ size: number }>`\r\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\r\n  width: 100%; /* Specific width is required for Firefox. */\r\n  background: transparent; /* Otherwise white in Chrome */\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &::-moz-focus-outer {\r\n    border: 0;\r\n  }\r\n\r\n  &::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: ${({ theme }) => theme.accent1};\r\n    border-radius: 100%;\r\n    border: none;\r\n    transform: translateY(-50%);\r\n    color: ${({ theme }) => theme.surface1};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-moz-range-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: #565a69;\r\n    border-radius: 100%;\r\n    border: none;\r\n    color: ${({ theme }) => theme.surface1};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-ms-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: #565a69;\r\n    border-radius: 100%;\r\n    color: ${({ theme }) => theme.surface1};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-webkit-slider-runnable-track {\r\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}, ${({ theme }) => theme.accent1});\r\n    height: 2px;\r\n  }\r\n\r\n  &::-moz-range-track {\r\n    background: linear-gradient(90deg, ${({ theme }) => theme.surface4}, ${({ theme }) => theme.surface2});\r\n    height: 2px;\r\n  }\r\n\r\n  &::-ms-track {\r\n    width: 100%;\r\n    border-color: transparent;\r\n    color: transparent;\r\n\r\n    background: ${({ theme }) => theme.surface4};\r\n    height: 2px;\r\n  }\r\n  &::-ms-fill-lower {\r\n    background: ${({ theme }) => theme.surface4};\r\n  }\r\n  &::-ms-fill-upper {\r\n    background: ${({ theme }) => theme.surface2};\r\n  }\r\n`\r\n\r\ninterface InputSliderProps {\r\n  value: number\r\n  onChange: (value: number) => void\r\n  step?: number\r\n  min?: number\r\n  max?: number\r\n  size?: number\r\n}\r\n\r\nexport default function Slider({\r\n  value,\r\n  onChange,\r\n  min = 0,\r\n  step = 1,\r\n  max = 100,\r\n  size = 28,\r\n  ...rest\r\n}: InputSliderProps) {\r\n  const changeCallback = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange(parseInt(e.target.value))\r\n    },\r\n    [onChange]\r\n  )\r\n\r\n  return (\r\n    <StyledRangeInput\r\n      size={size}\r\n      {...rest}\r\n      type=\"range\"\r\n      value={value}\r\n      style={{ padding: '15px 0' }}\r\n      onChange={changeCallback}\r\n      aria-labelledby=\"input slider\"\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n    />\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nimport uImage from '../../assets/images/big_unicorn.png'\r\nimport noise from '../../assets/images/noise.png'\r\nimport xlUnicorn from '../../assets/images/xl_uni.png'\r\nimport { AutoColumn } from '../Column'\r\n\r\nexport const DataCard = styled(AutoColumn)<{ disabled?: boolean }>`\r\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #2172e5 100%);\r\n  border-radius: 12px;\r\n  width: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const CardBGImage = styled.span<{ desaturate?: boolean }>`\r\n  background: url(${uImage});\r\n  width: 1000px;\r\n  height: 600px;\r\n  position: absolute;\r\n  border-radius: 12px;\r\n  opacity: 0.4;\r\n  top: -100px;\r\n  left: -100px;\r\n  transform: rotate(-15deg);\r\n  user-select: none;\r\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\r\n`\r\n\r\nexport const CardBGImageSmaller = styled.span<{ desaturate?: boolean }>`\r\n  background: url(${xlUnicorn});\r\n  width: 1200px;\r\n  height: 1200px;\r\n  position: absolute;\r\n  border-radius: 12px;\r\n  top: -300px;\r\n  left: -300px;\r\n  opacity: 0.4;\r\n  user-select: none;\r\n\r\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\r\n`\r\n\r\nexport const CardNoise = styled.span`\r\n  background: url(${noise});\r\n  background-size: cover;\r\n  mix-blend-mode: overlay;\r\n  border-radius: 12px;\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0.15;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  user-select: none;\r\n`\r\n\r\nexport const CardSection = styled(AutoColumn)<{ disabled?: boolean }>`\r\n  padding: 1rem;\r\n  z-index: 1;\r\n  opacity: ${({ disabled }) => disabled && '0.4'};\r\n`\r\n\r\nexport const Break = styled.div`\r\n  width: 100%;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  height: 1px;\r\n`\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n/**\r\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\r\n * @param value value that is rapidly changing\r\n * @param onChange change handler that should receive the debounced updates to the value\r\n * @param debouncedMs how long we should wait for changes to be applied\r\n */\r\nexport default function useDebouncedChangeHandler<T>(\r\n  value: T,\r\n  onChange: (newValue: T) => void,\r\n  debouncedMs = 100\r\n): [T, (value: T) => void] {\r\n  const [inner, setInner] = useState<T>(() => value)\r\n  const timer = useRef<ReturnType<typeof setTimeout>>()\r\n\r\n  const onChangeInner = useCallback(\r\n    (newValue: T) => {\r\n      setInner(newValue)\r\n      if (timer.current) {\r\n        clearTimeout(timer.current)\r\n      }\r\n      timer.current = setTimeout(() => {\r\n        onChange(newValue)\r\n        timer.current = undefined\r\n      }, debouncedMs)\r\n    },\r\n    [debouncedMs, onChange]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n      timer.current = undefined\r\n    }\r\n    setInner(value)\r\n  }, [value])\r\n\r\n  return [inner, onChangeInner]\r\n}\r\n","import { PropsWithChildren } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Z_INDEX } from 'theme/zIndex'\r\n\r\ninterface BodyWrapperProps {\r\n  $margin?: string\r\n  $maxWidth?: string\r\n}\r\n\r\nexport const BodyWrapper = styled.main<BodyWrapperProps>`\r\n  position: relative;\r\n  margin-top: ${({ $margin }) => $margin ?? '0px'};\r\n  max-width: ${({ $maxWidth }) => $maxWidth ?? '420px'};\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.surface1};\r\n  border-radius: 16px;\r\n  border: 1px solid ${({ theme }) => theme.surface3};\r\n  margin-top: 1rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  z-index: ${Z_INDEX.default};\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody(props: PropsWithChildren<BodyWrapperProps>) {\r\n  return <BodyWrapper {...props} />\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Currency, CurrencyAmount, Percent } from '@uniswap/sdk-core'\r\nimport { Position } from '@uniswap/v3-sdk'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useToken } from 'hooks/Tokens'\r\nimport { usePool } from 'hooks/usePools'\r\nimport { useV3PositionFees } from 'hooks/useV3PositionFees'\r\nimport { ReactNode, useCallback, useMemo } from 'react'\r\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\r\nimport { PositionDetails } from 'types/position'\r\nimport { unwrappedToken } from 'utils/unwrappedToken'\r\n\r\nimport { AppState } from '../../reducer'\r\nimport { selectPercent } from './actions'\r\n\r\nexport function useBurnV3State(): AppState['burnV3'] {\r\n  return useAppSelector((state) => state.burnV3)\r\n}\r\n\r\nexport function useDerivedV3BurnInfo(\r\n  position?: PositionDetails,\r\n  asWETH = false\r\n): {\r\n  position?: Position\r\n  liquidityPercentage?: Percent\r\n  liquidityValue0?: CurrencyAmount<Currency>\r\n  liquidityValue1?: CurrencyAmount<Currency>\r\n  feeValue0?: CurrencyAmount<Currency>\r\n  feeValue1?: CurrencyAmount<Currency>\r\n  outOfRange: boolean\r\n  error?: ReactNode\r\n} {\r\n  const { account } = useWeb3React()\r\n  const { percent } = useBurnV3State()\r\n\r\n  const token0 = useToken(position?.token0)\r\n  const token1 = useToken(position?.token1)\r\n\r\n  const [, pool] = usePool(token0 ?? undefined, token1 ?? undefined, position?.fee)\r\n\r\n  const positionSDK = useMemo(\r\n    () =>\r\n      pool && position?.liquidity && typeof position?.tickLower === 'number' && typeof position?.tickUpper === 'number'\r\n        ? new Position({\r\n            pool,\r\n            liquidity: position.liquidity.toString(),\r\n            tickLower: position.tickLower,\r\n            tickUpper: position.tickUpper,\r\n          })\r\n        : undefined,\r\n    [pool, position]\r\n  )\r\n\r\n  const liquidityPercentage = new Percent(percent, 100)\r\n\r\n  const discountedAmount0 = positionSDK\r\n    ? liquidityPercentage.multiply(positionSDK.amount0.quotient).quotient\r\n    : undefined\r\n  const discountedAmount1 = positionSDK\r\n    ? liquidityPercentage.multiply(positionSDK.amount1.quotient).quotient\r\n    : undefined\r\n\r\n  const liquidityValue0 =\r\n    token0 && discountedAmount0\r\n      ? CurrencyAmount.fromRawAmount(asWETH ? token0 : unwrappedToken(token0), discountedAmount0)\r\n      : undefined\r\n  const liquidityValue1 =\r\n    token1 && discountedAmount1\r\n      ? CurrencyAmount.fromRawAmount(asWETH ? token1 : unwrappedToken(token1), discountedAmount1)\r\n      : undefined\r\n\r\n  const [feeValue0, feeValue1] = useV3PositionFees(pool ?? undefined, position?.tokenId, asWETH)\r\n\r\n  const outOfRange =\r\n    pool && position ? pool.tickCurrent < position.tickLower || pool.tickCurrent > position.tickUpper : false\r\n\r\n  let error: ReactNode | undefined\r\n  if (!account) {\r\n    error = <Trans>Connect wallet</Trans>\r\n  }\r\n  if (percent === 0) {\r\n    error = error ?? <Trans>Enter a percent</Trans>\r\n  }\r\n  return {\r\n    position: positionSDK,\r\n    liquidityPercentage,\r\n    liquidityValue0,\r\n    liquidityValue1,\r\n    feeValue0,\r\n    feeValue1,\r\n    outOfRange,\r\n    error,\r\n  }\r\n}\r\n\r\nexport function useBurnV3ActionHandlers(): {\r\n  onPercentSelect: (percent: number) => void\r\n} {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const onPercentSelect = useCallback(\r\n    (percent: number) => {\r\n      dispatch(selectPercent({ percent }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return {\r\n    onPercentSelect,\r\n  }\r\n}\r\n","import { MaxButton } from 'pages/Pool/styled'\r\nimport { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  padding: 20px;\r\n  min-width: 460px;\r\n\r\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToExtraSmall`\r\n    min-width: 340px;\r\n  `};\r\n`\r\n\r\nexport const SmallMaxButton = styled(MaxButton)`\r\n  font-size: 12px;\r\n`\r\n\r\nexport const ResponsiveHeaderText = styled(Text)`\r\n  font-size: 40px;\r\n  font-weight: 535;\r\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToExtraSmall`\r\n     font-size: 24px\r\n  `};\r\n`\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport type { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trans } from '@lingui/macro'\r\nimport { LiquidityEventName, LiquiditySource } from '@uniswap/analytics-events'\r\nimport { CurrencyAmount, Percent } from '@uniswap/sdk-core'\r\nimport { NonfungiblePositionManager } from '@uniswap/v3-sdk'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { sendAnalyticsEvent, useTrace } from 'analytics'\r\nimport RangeBadge from 'components/Badge/RangeBadge'\r\nimport { ButtonConfirmed, ButtonPrimary } from 'components/Button'\r\nimport { LightCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport { Break } from 'components/earn/styled'\r\nimport Loader from 'components/Icons/LoadingSpinner'\r\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\r\nimport { AddRemoveTabs } from 'components/NavigationTabs'\r\nimport { AutoRow, RowBetween, RowFixed } from 'components/Row'\r\nimport Slider from 'components/Slider'\r\nimport Toggle from 'components/Toggle'\r\nimport { isSupportedChain } from 'constants/chains'\r\nimport { useV3NFTPositionManagerContract } from 'hooks/useContract'\r\nimport useDebouncedChangeHandler from 'hooks/useDebouncedChangeHandler'\r\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\r\nimport { useV3PositionFromTokenId } from 'hooks/useV3Positions'\r\nimport useNativeCurrency from 'lib/hooks/useNativeCurrency'\r\nimport { PositionPageUnsupportedContent } from 'pages/Pool/PositionPage'\r\nimport { useCallback, useMemo, useState } from 'react'\r\nimport { Navigate, useLocation, useParams } from 'react-router-dom'\r\nimport { Text } from 'rebass'\r\nimport { useBurnV3ActionHandlers, useBurnV3State, useDerivedV3BurnInfo } from 'state/burn/v3/hooks'\r\nimport { useTransactionAdder } from 'state/transactions/hooks'\r\nimport { useUserSlippageToleranceWithDefault } from 'state/user/hooks'\r\nimport { useTheme } from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { WrongChainError } from 'utils/errors'\r\nimport { useFormatter } from 'utils/formatNumbers'\r\n\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\r\nimport { TransactionType } from '../../state/transactions/types'\r\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport AppBody from '../AppBody'\r\nimport { ResponsiveHeaderText, SmallMaxButton, Wrapper } from './styled'\r\n\r\nconst DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE = new Percent(5, 100)\r\n\r\n// redirect invalid tokenIds\r\nexport default function RemoveLiquidityV3() {\r\n  const { chainId } = useWeb3React()\r\n  const { tokenId } = useParams<{ tokenId: string }>()\r\n  const location = useLocation()\r\n  const parsedTokenId = useMemo(() => {\r\n    try {\r\n      return BigNumber.from(tokenId)\r\n    } catch {\r\n      return null\r\n    }\r\n  }, [tokenId])\r\n\r\n  const { position, loading } = useV3PositionFromTokenId(parsedTokenId ?? undefined)\r\n  if (parsedTokenId === null || parsedTokenId.eq(0)) {\r\n    return <Navigate to={{ ...location, pathname: '/pools' }} replace />\r\n  }\r\n  if (isSupportedChain(chainId) && (loading || position)) {\r\n    return <Remove tokenId={parsedTokenId} />\r\n  } else {\r\n    return <PositionPageUnsupportedContent />\r\n  }\r\n}\r\nfunction Remove({ tokenId }: { tokenId: BigNumber }) {\r\n  const { position } = useV3PositionFromTokenId(tokenId)\r\n  const theme = useTheme()\r\n  const { account, chainId, provider } = useWeb3React()\r\n  const trace = useTrace()\r\n  const { formatCurrencyAmount } = useFormatter()\r\n\r\n  // flag for receiving WETH\r\n  const [receiveWETH, setReceiveWETH] = useState(false)\r\n  const nativeCurrency = useNativeCurrency(chainId)\r\n  const nativeWrappedSymbol = nativeCurrency.wrapped.symbol\r\n\r\n  // burn state\r\n  const { percent } = useBurnV3State()\r\n  const {\r\n    position: positionSDK,\r\n    liquidityPercentage,\r\n    liquidityValue0,\r\n    liquidityValue1,\r\n    feeValue0,\r\n    feeValue1,\r\n    outOfRange,\r\n    error,\r\n  } = useDerivedV3BurnInfo(position, receiveWETH)\r\n  const { onPercentSelect } = useBurnV3ActionHandlers()\r\n\r\n  const removed = position?.liquidity?.eq(0)\r\n\r\n  // boilerplate for the slider\r\n  const [percentForSlider, onPercentSelectForSlider] = useDebouncedChangeHandler(percent, onPercentSelect)\r\n\r\n  const deadline = useTransactionDeadline() // custom from users settings\r\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE) // custom from users\r\n\r\n  const [showConfirm, setShowConfirm] = useState(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState(false)\r\n  const [txnHash, setTxnHash] = useState<string | undefined>()\r\n  const addTransaction = useTransactionAdder()\r\n  const positionManager = useV3NFTPositionManagerContract()\r\n  const burn = useCallback(async () => {\r\n    setAttemptingTxn(true)\r\n    if (\r\n      !positionManager ||\r\n      !liquidityValue0 ||\r\n      !liquidityValue1 ||\r\n      !deadline ||\r\n      !account ||\r\n      !chainId ||\r\n      !positionSDK ||\r\n      !liquidityPercentage ||\r\n      !provider\r\n    ) {\r\n      return\r\n    }\r\n\r\n    // we fall back to expecting 0 fees in case the fetch fails, which is safe in the\r\n    // vast majority of cases\r\n    const { calldata, value } = NonfungiblePositionManager.removeCallParameters(positionSDK, {\r\n      tokenId: tokenId.toString(),\r\n      liquidityPercentage,\r\n      slippageTolerance: allowedSlippage,\r\n      deadline: deadline.toString(),\r\n      collectOptions: {\r\n        expectedCurrencyOwed0: feeValue0 ?? CurrencyAmount.fromRawAmount(liquidityValue0.currency, 0),\r\n        expectedCurrencyOwed1: feeValue1 ?? CurrencyAmount.fromRawAmount(liquidityValue1.currency, 0),\r\n        recipient: account,\r\n      },\r\n    })\r\n\r\n    const txn = {\r\n      to: positionManager.address,\r\n      data: calldata,\r\n      value,\r\n    }\r\n\r\n    const connectedChainId = await provider.getSigner().getChainId()\r\n    if (chainId !== connectedChainId) throw new WrongChainError()\r\n\r\n    provider\r\n      .getSigner()\r\n      .estimateGas(txn)\r\n      .then((estimate) => {\r\n        const newTxn = {\r\n          ...txn,\r\n          gasLimit: calculateGasMargin(estimate),\r\n        }\r\n\r\n        return provider\r\n          .getSigner()\r\n          .sendTransaction(newTxn)\r\n          .then((response: TransactionResponse) => {\r\n            sendAnalyticsEvent(LiquidityEventName.REMOVE_LIQUIDITY_SUBMITTED, {\r\n              source: LiquiditySource.V3,\r\n              label: [liquidityValue0.currency.symbol, liquidityValue1.currency.symbol].join('/'),\r\n              ...trace,\r\n            })\r\n            setTxnHash(response.hash)\r\n            setAttemptingTxn(false)\r\n            addTransaction(response, {\r\n              type: TransactionType.REMOVE_LIQUIDITY_V3,\r\n              baseCurrencyId: currencyId(liquidityValue0.currency),\r\n              quoteCurrencyId: currencyId(liquidityValue1.currency),\r\n              expectedAmountBaseRaw: liquidityValue0.quotient.toString(),\r\n              expectedAmountQuoteRaw: liquidityValue1.quotient.toString(),\r\n            })\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        setAttemptingTxn(false)\r\n        console.error(error)\r\n      })\r\n  }, [\r\n    positionManager,\r\n    liquidityValue0,\r\n    liquidityValue1,\r\n    deadline,\r\n    account,\r\n    chainId,\r\n    positionSDK,\r\n    liquidityPercentage,\r\n    provider,\r\n    tokenId,\r\n    allowedSlippage,\r\n    feeValue0,\r\n    feeValue1,\r\n    trace,\r\n    addTransaction,\r\n  ])\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txnHash) {\r\n      onPercentSelectForSlider(0)\r\n    }\r\n    setAttemptingTxn(false)\r\n    setTxnHash('')\r\n  }, [onPercentSelectForSlider, txnHash])\r\n\r\n  const pendingText = (\r\n    <Trans>\r\n      Removing {liquidityValue0?.toSignificant(6)} {liquidityValue0?.currency?.symbol} and{' '}\r\n      {liquidityValue1?.toSignificant(6)} {liquidityValue1?.currency?.symbol}\r\n    </Trans>\r\n  )\r\n\r\n  function modalHeader() {\r\n    return (\r\n      <AutoColumn gap=\"sm\" style={{ padding: '16px' }}>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize={16} fontWeight={535}>\r\n            <Trans>Pooled {liquidityValue0?.currency?.symbol}:</Trans>\r\n          </Text>\r\n          <RowFixed>\r\n            <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\r\n              {liquidityValue0 && formatCurrencyAmount({ amount: liquidityValue0 })}\r\n            </Text>\r\n            <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={liquidityValue0?.currency} />\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize={16} fontWeight={535}>\r\n            <Trans>Pooled {liquidityValue1?.currency?.symbol}:</Trans>\r\n          </Text>\r\n          <RowFixed>\r\n            <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\r\n              {liquidityValue1 && formatCurrencyAmount({ amount: liquidityValue1 })}\r\n            </Text>\r\n            <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={liquidityValue1?.currency} />\r\n          </RowFixed>\r\n        </RowBetween>\r\n        {feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) ? (\r\n          <>\r\n            <ThemedText.DeprecatedItalic fontSize={12} color={theme.neutral2} textAlign=\"left\" padding=\"8px 0 0 0\">\r\n              <Trans>You will also collect fees earned from this position.</Trans>\r\n            </ThemedText.DeprecatedItalic>\r\n            <RowBetween>\r\n              <Text fontSize={16} fontWeight={535}>\r\n                <Trans>{feeValue0?.currency?.symbol} Fees Earned:</Trans>\r\n              </Text>\r\n              <RowFixed>\r\n                <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\r\n                  {feeValue0 && formatCurrencyAmount({ amount: feeValue0 })}\r\n                </Text>\r\n                <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={feeValue0?.currency} />\r\n              </RowFixed>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <Text fontSize={16} fontWeight={535}>\r\n                <Trans>{feeValue1?.currency?.symbol} Fees Earned:</Trans>\r\n              </Text>\r\n              <RowFixed>\r\n                <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\r\n                  {feeValue1 && formatCurrencyAmount({ amount: feeValue1 })}\r\n                </Text>\r\n                <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={feeValue1?.currency} />\r\n              </RowFixed>\r\n            </RowBetween>\r\n          </>\r\n        ) : null}\r\n        <ButtonPrimary mt=\"16px\" onClick={burn}>\r\n          <Trans>Remove</Trans>\r\n        </ButtonPrimary>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  const showCollectAsWeth = Boolean(\r\n    liquidityValue0?.currency &&\r\n      liquidityValue1?.currency &&\r\n      (liquidityValue0.currency.isNative ||\r\n        liquidityValue1.currency.isNative ||\r\n        WRAPPED_NATIVE_CURRENCY[liquidityValue0.currency.chainId]?.equals(liquidityValue0.currency.wrapped) ||\r\n        WRAPPED_NATIVE_CURRENCY[liquidityValue1.currency.chainId]?.equals(liquidityValue1.currency.wrapped))\r\n  )\r\n  return (\r\n    <AutoColumn>\r\n      <TransactionConfirmationModal\r\n        isOpen={showConfirm}\r\n        onDismiss={handleDismissConfirmation}\r\n        attemptingTxn={attemptingTxn}\r\n        hash={txnHash ?? ''}\r\n        reviewContent={() => (\r\n          <ConfirmationModalContent\r\n            title={<Trans>Remove liquidity</Trans>}\r\n            onDismiss={handleDismissConfirmation}\r\n            topContent={modalHeader}\r\n          />\r\n        )}\r\n        pendingText={pendingText}\r\n      />\r\n      <AppBody $maxWidth=\"unset\">\r\n        <AddRemoveTabs\r\n          creating={false}\r\n          adding={false}\r\n          positionID={tokenId.toString()}\r\n          autoSlippage={DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE}\r\n        />\r\n        <Wrapper>\r\n          {position ? (\r\n            <AutoColumn gap=\"lg\">\r\n              <RowBetween>\r\n                <RowFixed>\r\n                  <DoubleCurrencyLogo\r\n                    currency0={liquidityValue0?.currency}\r\n                    currency1={liquidityValue1?.currency}\r\n                    size={20}\r\n                    margin={true}\r\n                  />\r\n                  <ThemedText.DeprecatedLabel\r\n                    ml=\"10px\"\r\n                    fontSize=\"20px\"\r\n                    id=\"remove-liquidity-tokens\"\r\n                  >{`${liquidityValue0?.currency?.symbol}/${liquidityValue1?.currency?.symbol}`}</ThemedText.DeprecatedLabel>\r\n                </RowFixed>\r\n                <RangeBadge removed={removed} inRange={!outOfRange} />\r\n              </RowBetween>\r\n              <LightCard>\r\n                <AutoColumn gap=\"md\">\r\n                  <ThemedText.DeprecatedMain fontWeight={485}>\r\n                    <Trans>Amount</Trans>\r\n                  </ThemedText.DeprecatedMain>\r\n                  <RowBetween>\r\n                    <ResponsiveHeaderText>\r\n                      <Trans>{percentForSlider}%</Trans>\r\n                    </ResponsiveHeaderText>\r\n                    <AutoRow gap=\"4px\" justify=\"flex-end\">\r\n                      <SmallMaxButton onClick={() => onPercentSelect(25)} width=\"20%\">\r\n                        <Trans>25%</Trans>\r\n                      </SmallMaxButton>\r\n                      <SmallMaxButton onClick={() => onPercentSelect(50)} width=\"20%\">\r\n                        <Trans>50%</Trans>\r\n                      </SmallMaxButton>\r\n                      <SmallMaxButton onClick={() => onPercentSelect(75)} width=\"20%\">\r\n                        <Trans>75%</Trans>\r\n                      </SmallMaxButton>\r\n                      <SmallMaxButton onClick={() => onPercentSelect(100)} width=\"20%\">\r\n                        <Trans>Max</Trans>\r\n                      </SmallMaxButton>\r\n                    </AutoRow>\r\n                  </RowBetween>\r\n                  <Slider value={percentForSlider} onChange={onPercentSelectForSlider} />\r\n                </AutoColumn>\r\n              </LightCard>\r\n              <LightCard>\r\n                <AutoColumn gap=\"md\">\r\n                  <RowBetween>\r\n                    <Text fontSize={16} fontWeight={535} id=\"remove-pooled-tokena-symbol\">\r\n                      <Trans>Pooled {liquidityValue0?.currency?.symbol}:</Trans>\r\n                    </Text>\r\n                    <RowFixed>\r\n                      <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\r\n                        {liquidityValue0 && formatCurrencyAmount({ amount: liquidityValue0 })}\r\n                      </Text>\r\n                      <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={liquidityValue0?.currency} />\r\n                    </RowFixed>\r\n                  </RowBetween>\r\n                  <RowBetween>\r\n                    <Text fontSize={16} fontWeight={535} id=\"remove-pooled-tokenb-symbol\">\r\n                      <Trans>Pooled {liquidityValue1?.currency?.symbol}:</Trans>\r\n                    </Text>\r\n                    <RowFixed>\r\n                      <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\r\n                        {liquidityValue1 && formatCurrencyAmount({ amount: liquidityValue1 })}\r\n                      </Text>\r\n                      <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={liquidityValue1?.currency} />\r\n                    </RowFixed>\r\n                  </RowBetween>\r\n                  {feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) ? (\r\n                    <>\r\n                      <Break />\r\n                      <RowBetween>\r\n                        <Text fontSize={16} fontWeight={535}>\r\n                          <Trans>{feeValue0?.currency?.symbol} Fees Earned:</Trans>\r\n                        </Text>\r\n                        <RowFixed>\r\n                          <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\r\n                            {feeValue0 && formatCurrencyAmount({ amount: feeValue0 })}\r\n                          </Text>\r\n                          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={feeValue0?.currency} />\r\n                        </RowFixed>\r\n                      </RowBetween>\r\n                      <RowBetween>\r\n                        <Text fontSize={16} fontWeight={535}>\r\n                          <Trans>{feeValue1?.currency?.symbol} Fees Earned:</Trans>\r\n                        </Text>\r\n                        <RowFixed>\r\n                          <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\r\n                            {feeValue1 && formatCurrencyAmount({ amount: feeValue1 })}\r\n                          </Text>\r\n                          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={feeValue1?.currency} />\r\n                        </RowFixed>\r\n                      </RowBetween>\r\n                    </>\r\n                  ) : null}\r\n                </AutoColumn>\r\n              </LightCard>\r\n\r\n              {showCollectAsWeth && (\r\n                <RowBetween>\r\n                  <ThemedText.DeprecatedMain>\r\n                    <Trans>Collect as {nativeWrappedSymbol}</Trans>\r\n                  </ThemedText.DeprecatedMain>\r\n                  <Toggle\r\n                    id=\"receive-as-weth\"\r\n                    isActive={receiveWETH}\r\n                    toggle={() => setReceiveWETH((receiveWETH) => !receiveWETH)}\r\n                  />\r\n                </RowBetween>\r\n              )}\r\n\r\n              <div style={{ display: 'flex' }}>\r\n                <AutoColumn gap=\"md\" style={{ flex: '1' }}>\r\n                  <ButtonConfirmed\r\n                    confirmed={false}\r\n                    disabled={removed || percent === 0 || !liquidityValue0}\r\n                    onClick={() => setShowConfirm(true)}\r\n                  >\r\n                    {removed ? <Trans>Closed</Trans> : error ?? <Trans>Remove</Trans>}\r\n                  </ButtonConfirmed>\r\n                </AutoColumn>\r\n              </div>\r\n            </AutoColumn>\r\n          ) : (\r\n            <Loader />\r\n          )}\r\n        </Wrapper>\r\n      </AppBody>\r\n    </AutoColumn>\r\n  )\r\n}\r\n"],"names":["Tabs","styled","div","flexRowNoWrap","StyledLink","Link","flex","theme","deprecated_mediaWidth","deprecated_upToMedium","FindPoolTabsText","ThemedText","SubHeaderLarge","StyledArrowLeft","ArrowLeft","neutral1","FindPoolTabs","origin","RowBetween","style","padding","position","to","AddRemoveTitleText","AddRemoveTabs","adding","creating","autoSlippage","positionID","children","chainId","useWeb3React","useTheme","dispatch","useAppDispatch","poolLink","useLocation","pathname","includes","toString","align","onClick","resetMintState","resetMintV3State","undefined","stroke","neutral2","textAlign","Box","marginRight","SettingsTab","hideRoutingSettings","StyledRangeInput","input","size","accent1","surface1","surface4","surface2","Slider","value","onChange","min","step","max","rest","changeCallback","useCallback","e","parseInt","target","type","aria-labelledby","DataCard","AutoColumn","CardBGImage","span","uImage","desaturate","CardBGImageSmaller","xlUnicorn","CardNoise","noise","CardSection","disabled","Break","useDebouncedChangeHandler","debouncedMs","inner","setInner","useState","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","useEffect","BodyWrapper","main","$margin","$maxWidth","surface3","Z_INDEX","default","AppBody","props","useBurnV3State","useAppSelector","state","burnV3","Wrapper","deprecated_upToExtraSmall","SmallMaxButton","MaxButton","ResponsiveHeaderText","Text","DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE","Percent","RemoveLiquidityV3","tokenId","useParams","location","parsedTokenId","useMemo","BigNumber","from","loading","useV3PositionFromTokenId","eq","Navigate","replace","isSupportedChain","Remove","PositionPageUnsupportedContent","account","provider","trace","useTrace","formatCurrencyAmount","useFormatter","receiveWETH","setReceiveWETH","nativeWrappedSymbol","useNativeCurrency","wrapped","symbol","percent","positionSDK","liquidityPercentage","liquidityValue0","liquidityValue1","feeValue0","feeValue1","outOfRange","error","asWETH","token0","useToken","token1","pool","usePool","fee","liquidity","tickLower","tickUpper","Position","discountedAmount0","multiply","amount0","quotient","discountedAmount1","amount1","CurrencyAmount","fromRawAmount","unwrappedToken","useV3PositionFees","tickCurrent","useDerivedV3BurnInfo","onPercentSelect","selectPercent","useBurnV3ActionHandlers","removed","percentForSlider","onPercentSelectForSlider","deadline","useTransactionDeadline","allowedSlippage","useUserSlippageToleranceWithDefault","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","txnHash","setTxnHash","addTransaction","useTransactionAdder","positionManager","useV3NFTPositionManagerContract","burn","async","calldata","NonfungiblePositionManager","removeCallParameters","slippageTolerance","collectOptions","expectedCurrencyOwed0","currency","expectedCurrencyOwed1","recipient","txn","address","data","connectedChainId","getSigner","getChainId","WrongChainError","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","sendAnalyticsEvent","LiquidityEventName","REMOVE_LIQUIDITY_SUBMITTED","source","LiquiditySource","V3","label","join","hash","TransactionType","REMOVE_LIQUIDITY_V3","baseCurrencyId","currencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","catch","console","handleDismissConfirmation","pendingText","toSignificant","modalHeader","gap","fontSize","fontWeight","RowFixed","marginLeft","amount","CurrencyLogo","greaterThan","DeprecatedItalic","color","ButtonPrimary","mt","showCollectAsWeth","Boolean","isNative","WRAPPED_NATIVE_CURRENCY","equals","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","title","topContent","DoubleCurrencyLogo","currency0","currency1","margin","DeprecatedLabel","ml","id","RangeBadge","inRange","LightCard","DeprecatedMain","AutoRow","justify","width","Toggle","isActive","toggle","display","ButtonConfirmed","confirmed","Loader"],"sourceRoot":""}