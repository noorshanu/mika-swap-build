{"version":3,"file":"static/js/5633.8158e0b6.chunk.js","mappings":"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","sources":["components/CurrencyInputPanel/index.tsx","components/NavigationTabs/index.tsx","components/swap/UnsupportedCurrencyFooter.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\r\nimport { BrowserEvent, InterfaceElementName, SwapEventName } from '@uniswap/analytics-events'\r\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\r\nimport { Pair } from '@uniswap/v2-sdk'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { TraceEvent } from 'analytics'\r\nimport { LoadingOpacityContainer, loadingOpacityMixin } from 'components/Loader/styled'\r\nimport PrefetchBalancesWrapper from 'components/PrefetchBalancesWrapper/PrefetchBalancesWrapper'\r\nimport { isSupportedChain } from 'constants/chains'\r\nimport { darken } from 'polished'\r\nimport { ReactNode, useCallback, useState } from 'react'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { flexColumnNoWrap, flexRowNoWrap } from 'theme/styles'\r\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\r\n\r\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\r\nimport { useCurrencyBalance } from '../../state/connection/hooks'\r\nimport { ButtonGray } from '../Button'\r\nimport DoubleCurrencyLogo from '../DoubleLogo'\r\nimport CurrencyLogo from '../Logo/CurrencyLogo'\r\nimport { Input as NumericalInput } from '../NumericalInput'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\r\nimport { FiatValue } from './FiatValue'\r\n\r\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\r\n  ${flexColumnNoWrap};\r\n  position: relative;\r\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\r\n  background-color: ${({ theme, hideInput }) => (hideInput ? 'transparent' : theme.surface2)};\r\n\r\n  z-index: 1;\r\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\r\n  transition: height 1s ease;\r\n  will-change: height;\r\n`\r\n\r\nconst Container = styled.div<{ hideInput: boolean; disabled: boolean }>`\r\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\r\n  border: 1px solid ${({ theme }) => theme.surface3};\r\n  background-color: ${({ theme }) => theme.surface2};\r\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\r\n  ${({ theme, hideInput, disabled }) =>\r\n    !disabled &&\r\n    `\r\n    :focus,\r\n    :hover {\r\n      border: 1px solid ${hideInput ? ' transparent' : theme.surface2};\r\n    }\r\n  `}\r\n`\r\n\r\nconst CurrencySelect = styled(ButtonGray)<{\r\n  visible: boolean\r\n  selected: boolean\r\n  hideInput?: boolean\r\n  disabled?: boolean\r\n  pointerEvents?: string\r\n}>`\r\n  align-items: center;\r\n  background-color: ${({ selected, theme }) => (selected ? theme.surface1 : theme.accent1)};\r\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\r\n  box-shadow: ${({ theme }) => theme.deprecated_shallowShadow};\r\n  color: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\r\n  cursor: pointer;\r\n  border-radius: 16px;\r\n  outline: none;\r\n  user-select: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  font-weight: 535;\r\n  height: ${({ hideInput }) => (hideInput ? '2.8rem' : '2.4rem')};\r\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\r\n  padding: 0 8px;\r\n  justify-content: space-between;\r\n  margin-left: ${({ hideInput }) => (hideInput ? '0' : '12px')};\r\n  :focus,\r\n  :hover {\r\n    background-color: ${({ selected, theme }) => (selected ? theme.surface2 : darken(0.05, theme.accent1))};\r\n  }\r\n  visibility: ${({ visible }) => (visible ? 'visible' : 'hidden')};\r\n  ${({ pointerEvents }) => pointerEvents && `pointer-events: none`}\r\n`\r\n\r\nconst InputRow = styled.div<{ selected: boolean }>`\r\n  ${flexRowNoWrap};\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: ${({ selected }) => (selected ? ' 1rem 1rem 0.75rem 1rem' : '1rem 1rem 1rem 1rem')};\r\n`\r\n\r\nconst LabelRow = styled.div`\r\n  ${flexRowNoWrap};\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.neutral1};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0 1rem 1rem;\r\n  span:hover {\r\n    cursor: pointer;\r\n    color: ${({ theme }) => darken(0.2, theme.neutral2)};\r\n  }\r\n`\r\n\r\nconst FiatRow = styled(LabelRow)`\r\n  justify-content: flex-end;\r\n  padding: 0px 1rem 0.75rem;\r\n  height: 32px;\r\n`\r\n\r\n// note the line height 0 ensures even if we change font/font-size it doesn't break centering\r\nconst Aligner = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  line-height: 0px;\r\n`\r\n\r\nconst StyledDropDown = styled(DropDown)<{ selected: boolean }>`\r\n  margin: 0 0.25rem 0 0.35rem;\r\n  height: 35%;\r\n\r\n  path {\r\n    stroke: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\r\n    stroke-width: 1.5px;\r\n  }\r\n`\r\n\r\nconst StyledTokenName = styled.span<{ active?: boolean }>`\r\n  ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.25rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\r\n  font-size: 20px;\r\n`\r\n\r\nconst StyledBalanceMax = styled.button<{ disabled?: boolean }>`\r\n  background-color: transparent;\r\n  background-color: ${({ theme }) => theme.accent2};\r\n  border: none;\r\n  border-radius: 12px;\r\n  color: ${({ theme }) => theme.accent1};\r\n  cursor: pointer;\r\n  font-size: 11px;\r\n  font-weight: 535;\r\n  margin-left: 0.25rem;\r\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\r\n  padding: 4px 6px;\r\n  pointer-events: ${({ disabled }) => (!disabled ? 'initial' : 'none')};\r\n\r\n  :hover {\r\n    opacity: ${({ disabled }) => (!disabled ? 0.8 : 0.4)};\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nconst StyledNumericalInput = styled(NumericalInput)<{ $loading: boolean }>`\r\n  ${loadingOpacityMixin};\r\n  text-align: left;\r\n`\r\n\r\nconst StyledPrefetchBalancesWrapper = styled(PrefetchBalancesWrapper)<{ $fullWidth: boolean }>`\r\n  width: ${({ $fullWidth }) => ($fullWidth ? '100%' : 'auto')};\r\n`\r\n\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  label?: ReactNode\r\n  onCurrencySelect?: (currency: Currency) => void\r\n  currency?: Currency | null\r\n  hideBalance?: boolean\r\n  pair?: Pair | null\r\n  hideInput?: boolean\r\n  otherCurrency?: Currency | null\r\n  fiatValue?: { data?: number; isLoading: boolean }\r\n  id: string\r\n  showCommonBases?: boolean\r\n  showCurrencyAmount?: boolean\r\n  disableNonToken?: boolean\r\n  renderBalance?: (amount: CurrencyAmount<Currency>) => ReactNode\r\n  locked?: boolean\r\n  loading?: boolean\r\n}\r\n\r\nexport default function CurrencyInputPanel({\r\n  value,\r\n  onUserInput,\r\n  onMax,\r\n  showMaxButton,\r\n  onCurrencySelect,\r\n  currency,\r\n  otherCurrency,\r\n  id,\r\n  showCommonBases,\r\n  showCurrencyAmount,\r\n  disableNonToken,\r\n  renderBalance,\r\n  fiatValue,\r\n  hideBalance = false,\r\n  pair = null, // used for double token logo\r\n  hideInput = false,\r\n  locked = false,\r\n  loading = false,\r\n  ...rest\r\n}: CurrencyInputPanelProps) {\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const { account, chainId } = useWeb3React()\r\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n  const theme = useTheme()\r\n  const { formatCurrencyAmount } = useFormatter()\r\n\r\n  const handleDismissSearch = useCallback(() => {\r\n    setModalOpen(false)\r\n  }, [setModalOpen])\r\n\r\n  const chainAllowed = isSupportedChain(chainId)\r\n\r\n  return (\r\n    <InputPanel id={id} hideInput={hideInput} {...rest}>\r\n      {!locked && (\r\n        <>\r\n          <Container hideInput={hideInput} disabled={!chainAllowed}>\r\n            <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={!onCurrencySelect}>\r\n              {!hideInput && (\r\n                <StyledNumericalInput\r\n                  className=\"token-amount-input\"\r\n                  value={value}\r\n                  onUserInput={onUserInput}\r\n                  disabled={!chainAllowed}\r\n                  $loading={loading}\r\n                />\r\n              )}\r\n\r\n              <StyledPrefetchBalancesWrapper shouldFetchOnAccountUpdate={modalOpen} $fullWidth={hideInput}>\r\n                <CurrencySelect\r\n                  disabled={!chainAllowed}\r\n                  visible={currency !== undefined}\r\n                  selected={!!currency}\r\n                  hideInput={hideInput}\r\n                  className=\"open-currency-select-button\"\r\n                  onClick={() => {\r\n                    if (onCurrencySelect) {\r\n                      setModalOpen(true)\r\n                    }\r\n                  }}\r\n                  pointerEvents={!onCurrencySelect ? 'none' : undefined}\r\n                >\r\n                  <Aligner>\r\n                    <RowFixed>\r\n                      {pair ? (\r\n                        <span style={{ marginRight: '0.5rem' }}>\r\n                          <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={24} margin={true} />\r\n                        </span>\r\n                      ) : (\r\n                        currency && <CurrencyLogo style={{ marginRight: '0.5rem' }} currency={currency} size=\"24px\" />\r\n                      )}\r\n                      {pair ? (\r\n                        <StyledTokenName className=\"pair-name-container\">\r\n                          {pair?.token0.symbol}:{pair?.token1.symbol}\r\n                        </StyledTokenName>\r\n                      ) : (\r\n                        <StyledTokenName\r\n                          className=\"token-symbol-container\"\r\n                          active={Boolean(currency && currency.symbol)}\r\n                        >\r\n                          {(currency && currency.symbol && currency.symbol.length > 20\r\n                            ? currency.symbol.slice(0, 4) +\r\n                              '...' +\r\n                              currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\r\n                            : currency?.symbol) || <Trans>Select a token</Trans>}\r\n                        </StyledTokenName>\r\n                      )}\r\n                    </RowFixed>\r\n                    {onCurrencySelect && <StyledDropDown selected={!!currency} />}\r\n                  </Aligner>\r\n                </CurrencySelect>\r\n              </StyledPrefetchBalancesWrapper>\r\n            </InputRow>\r\n            {Boolean(!hideInput && !hideBalance && currency) && (\r\n              <FiatRow>\r\n                <RowBetween>\r\n                  <LoadingOpacityContainer $loading={loading}>\r\n                    {fiatValue && <FiatValue fiatValue={fiatValue} />}\r\n                  </LoadingOpacityContainer>\r\n                  {account && (\r\n                    <RowFixed style={{ height: '17px' }}>\r\n                      <ThemedText.DeprecatedBody\r\n                        onClick={onMax}\r\n                        color={theme.neutral3}\r\n                        fontWeight={535}\r\n                        fontSize={14}\r\n                        style={{ display: 'inline', cursor: 'pointer' }}\r\n                      >\r\n                        {Boolean(!hideBalance && currency && selectedCurrencyBalance) &&\r\n                          (renderBalance?.(selectedCurrencyBalance as CurrencyAmount<Currency>) || (\r\n                            <Trans>\r\n                              Balance:{' '}\r\n                              {formatCurrencyAmount({\r\n                                amount: selectedCurrencyBalance,\r\n                                type: NumberType.TokenNonTx,\r\n                              })}\r\n                            </Trans>\r\n                          ))}\r\n                      </ThemedText.DeprecatedBody>\r\n                      {Boolean(showMaxButton && selectedCurrencyBalance) && (\r\n                        <TraceEvent\r\n                          events={[BrowserEvent.onClick]}\r\n                          name={SwapEventName.SWAP_MAX_TOKEN_AMOUNT_SELECTED}\r\n                          element={InterfaceElementName.MAX_TOKEN_AMOUNT_BUTTON}\r\n                        >\r\n                          <StyledBalanceMax onClick={onMax}>\r\n                            <Trans>MAX</Trans>\r\n                          </StyledBalanceMax>\r\n                        </TraceEvent>\r\n                      )}\r\n                    </RowFixed>\r\n                  )}\r\n                </RowBetween>\r\n              </FiatRow>\r\n            )}\r\n          </Container>\r\n        </>\r\n      )}\r\n      {onCurrencySelect && (\r\n        <CurrencySearchModal\r\n          isOpen={modalOpen}\r\n          onDismiss={handleDismissSearch}\r\n          onCurrencySelect={onCurrencySelect}\r\n          selectedCurrency={currency}\r\n          otherSelectedCurrency={otherCurrency}\r\n          showCommonBases={showCommonBases}\r\n          showCurrencyAmount={showCurrencyAmount}\r\n          disableNonToken={disableNonToken}\r\n        />\r\n      )}\r\n    </InputPanel>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Percent } from '@uniswap/sdk-core'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport SettingsTab from 'components/Settings'\r\nimport { ReactNode } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { Box } from 'rebass'\r\nimport { useAppDispatch } from 'state/hooks'\r\nimport { resetMintState } from 'state/mint/actions'\r\nimport { resetMintState as resetMintV3State } from 'state/mint/v3/actions'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { ThemedText } from 'theme/components'\r\nimport { flexRowNoWrap } from 'theme/styles'\r\n\r\nimport { RowBetween } from '../Row'\r\n\r\nconst Tabs = styled.div`\r\n  ${flexRowNoWrap};\r\n  align-items: center;\r\n  border-radius: 3rem;\r\n  justify-content: space-evenly;\r\n`\r\n\r\nconst StyledLink = styled(Link)<{ flex?: string }>`\r\n  flex: ${({ flex }) => flex ?? 'none'};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\r\n    flex: none;\r\n    margin-right: 10px;\r\n  `};\r\n`\r\n\r\nconst FindPoolTabsText = styled(ThemedText.SubHeaderLarge)`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`\r\n\r\nconst StyledArrowLeft = styled(ArrowLeft)`\r\n  color: ${({ theme }) => theme.neutral1};\r\n`\r\n\r\nexport function FindPoolTabs({ origin }: { origin: string }) {\r\n  return (\r\n    <Tabs>\r\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem', position: 'relative' }}>\r\n        <Link to={origin}>\r\n          <StyledArrowLeft />\r\n        </Link>\r\n        <FindPoolTabsText>\r\n          <Trans>Import V2 pool</Trans>\r\n        </FindPoolTabsText>\r\n      </RowBetween>\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nconst AddRemoveTitleText = styled(ThemedText.SubHeaderLarge)`\r\n  flex: 1;\r\n  margin: auto;\r\n`\r\n\r\nexport function AddRemoveTabs({\r\n  adding,\r\n  creating,\r\n  autoSlippage,\r\n  positionID,\r\n  children,\r\n}: {\r\n  adding: boolean\r\n  creating: boolean\r\n  autoSlippage: Percent\r\n  positionID?: string\r\n  showBackLink?: boolean\r\n  children?: ReactNode\r\n}) {\r\n  const { chainId } = useWeb3React()\r\n  const theme = useTheme()\r\n  // reset states on back\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation()\r\n\r\n  // detect if back should redirect to v3 or v2 pool page\r\n  const poolLink = location.pathname.includes('add/v2')\r\n    ? '/pools/v2'\r\n    : '/pools' + (positionID ? `/${positionID.toString()}` : '')\r\n\r\n  return (\r\n    <Tabs>\r\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }} align=\"center\">\r\n        <StyledLink\r\n          to={poolLink}\r\n          onClick={() => {\r\n            if (adding) {\r\n              // not 100% sure both of these are needed\r\n              dispatch(resetMintState())\r\n              dispatch(resetMintV3State())\r\n            }\r\n          }}\r\n          flex={children ? '1' : undefined}\r\n        >\r\n          <StyledArrowLeft stroke={theme.neutral2} />\r\n        </StyledLink>\r\n        <AddRemoveTitleText textAlign={children ? 'start' : 'center'}>\r\n          {creating ? (\r\n            <Trans>Create a pair</Trans>\r\n          ) : adding ? (\r\n            <Trans>Add liquidity</Trans>\r\n          ) : (\r\n            <Trans>Remove liquidity</Trans>\r\n          )}\r\n        </AddRemoveTitleText>\r\n        {children && <Box style={{ marginRight: '.5rem' }}>{children}</Box>}\r\n        <SettingsTab autoSlippage={autoSlippage} chainId={chainId} hideRoutingSettings />\r\n      </RowBetween>\r\n    </Tabs>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Currency } from '@uniswap/sdk-core'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ButtonEmpty } from 'components/Button'\r\nimport Card, { OutlineCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\r\nimport Modal from 'components/Modal'\r\nimport { AutoRow, RowBetween } from 'components/Row'\r\nimport { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { CloseIcon, ExternalLink, ThemedText } from 'theme/components'\r\nimport { Z_INDEX } from 'theme/zIndex'\r\n\r\nimport { useUnsupportedTokens } from '../../hooks/Tokens'\r\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\r\n\r\nconst DetailsFooter = styled.div<{ show: boolean }>`\r\n  padding-top: calc(16px + 2rem);\r\n  padding-bottom: 20px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: -2rem;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n  color: ${({ theme }) => theme.neutral2};\r\n  background-color: ${({ theme }) => theme.surface2};\r\n  z-index: ${Z_INDEX.deprecated_zero};\r\n\r\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\r\n  transition: transform 300ms ease-in-out;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledButtonEmpty = styled(ButtonEmpty)`\r\n  text-decoration: none;\r\n`\r\n\r\nconst AddressText = styled(ThemedText.DeprecatedBlue)`\r\n  font-size: 12px;\r\n\r\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\r\n    font-size: 10px;\r\n`}\r\n`\r\n\r\nexport default function UnsupportedCurrencyFooter({\r\n  show,\r\n  currencies,\r\n}: {\r\n  show: boolean\r\n  currencies: (Currency | undefined | null)[]\r\n}) {\r\n  const { chainId } = useWeb3React()\r\n  const [showDetails, setShowDetails] = useState(false)\r\n\r\n  const tokens =\r\n    chainId && currencies\r\n      ? currencies.map((currency) => {\r\n          return currency?.wrapped\r\n        })\r\n      : []\r\n\r\n  const unsupportedTokens = useUnsupportedTokens()\r\n\r\n  return (\r\n    <DetailsFooter show={show}>\r\n      <Modal isOpen={showDetails} onDismiss={() => setShowDetails(false)}>\r\n        <Card padding=\"2rem\">\r\n          <AutoColumn gap=\"lg\">\r\n            <RowBetween>\r\n              <ThemedText.DeprecatedMediumHeader>\r\n                <Trans>Unsupported assets</Trans>\r\n              </ThemedText.DeprecatedMediumHeader>\r\n              <CloseIcon onClick={() => setShowDetails(false)} data-testid=\"close-icon\" />\r\n            </RowBetween>\r\n            {tokens.map((token) => {\r\n              return (\r\n                token &&\r\n                unsupportedTokens &&\r\n                Object.keys(unsupportedTokens).includes(token.address) && (\r\n                  <OutlineCard key={token.address?.concat('not-supported')} data-testid=\"unsupported-token-card\">\r\n                    <AutoColumn gap=\"10px\">\r\n                      <AutoRow gap=\"5px\" align=\"center\">\r\n                        <CurrencyLogo currency={token} size=\"24px\" />\r\n                        <ThemedText.DeprecatedBody fontWeight={535}>{token.symbol}</ThemedText.DeprecatedBody>\r\n                      </AutoRow>\r\n                      {chainId && (\r\n                        <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}>\r\n                          <AddressText>{token.address}</AddressText>\r\n                        </ExternalLink>\r\n                      )}\r\n                    </AutoColumn>\r\n                  </OutlineCard>\r\n                )\r\n              )\r\n            })}\r\n            <AutoColumn gap=\"lg\">\r\n              <ThemedText.DeprecatedBody fontWeight={535}>\r\n                <Trans>\r\n                  Some assets are not available through this interface because they may not work well with the smart\r\n                  contracts or we are unable to allow trading for legal reasons.\r\n                </Trans>\r\n              </ThemedText.DeprecatedBody>\r\n            </AutoColumn>\r\n          </AutoColumn>\r\n        </Card>\r\n      </Modal>\r\n      <StyledButtonEmpty padding=\"0\" onClick={() => setShowDetails(true)} data-testid=\"read-more-button\">\r\n        <ThemedText.DeprecatedBlue>\r\n          <Trans>Read more about unsupported assets</Trans>\r\n        </ThemedText.DeprecatedBlue>\r\n      </StyledButtonEmpty>\r\n    </DetailsFooter>\r\n  )\r\n}\r\n"],"names":["InputPanel","styled","div","flexColumnNoWrap","hideInput","theme","surface2","Container","surface3","disabled","CurrencySelect","ButtonGray","selected","surface1","accent1","deprecated_shallowShadow","neutral1","white","darken","visible","pointerEvents","InputRow","flexRowNoWrap","LabelRow","neutral2","FiatRow","Aligner","span","StyledDropDown","DropDown","StyledTokenName","active","StyledBalanceMax","button","accent2","StyledNumericalInput","NumericalInput","loadingOpacityMixin","StyledPrefetchBalancesWrapper","PrefetchBalancesWrapper","$fullWidth","CurrencyInputPanel","value","onUserInput","onMax","showMaxButton","onCurrencySelect","currency","otherCurrency","id","showCommonBases","showCurrencyAmount","disableNonToken","renderBalance","fiatValue","hideBalance","pair","locked","loading","rest","modalOpen","setModalOpen","useState","account","chainId","useWeb3React","selectedCurrencyBalance","useCurrencyBalance","undefined","useTheme","formatCurrencyAmount","useFormatter","handleDismissSearch","useCallback","chainAllowed","isSupportedChain","style","padding","borderRadius","className","$loading","shouldFetchOnAccountUpdate","onClick","RowFixed","marginRight","DoubleCurrencyLogo","currency0","token0","currency1","token1","size","margin","CurrencyLogo","symbol","Boolean","length","slice","RowBetween","LoadingOpacityContainer","FiatValue","height","ThemedText","DeprecatedBody","color","neutral3","fontWeight","fontSize","display","cursor","amount","type","NumberType","TokenNonTx","TraceEvent","events","BrowserEvent","name","SwapEventName","SWAP_MAX_TOKEN_AMOUNT_SELECTED","element","InterfaceElementName","MAX_TOKEN_AMOUNT_BUTTON","CurrencySearchModal","isOpen","onDismiss","selectedCurrency","otherSelectedCurrency","Tabs","StyledLink","Link","flex","deprecated_mediaWidth","deprecated_upToMedium","FindPoolTabsText","SubHeaderLarge","StyledArrowLeft","ArrowLeft","FindPoolTabs","origin","position","to","AddRemoveTitleText","AddRemoveTabs","adding","creating","autoSlippage","positionID","children","dispatch","useAppDispatch","poolLink","useLocation","pathname","includes","toString","align","resetMintState","resetMintV3State","stroke","textAlign","Box","SettingsTab","hideRoutingSettings","DetailsFooter","Z_INDEX","deprecated_zero","show","StyledButtonEmpty","ButtonEmpty","AddressText","DeprecatedBlue","deprecated_upToSmall","UnsupportedCurrencyFooter","currencies","showDetails","setShowDetails","tokens","map","wrapped","unsupportedTokens","useUnsupportedTokens","Modal","Card","AutoColumn","gap","DeprecatedMediumHeader","CloseIcon","data-testid","token","Object","keys","address","OutlineCard","AutoRow","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","concat"],"sourceRoot":""}